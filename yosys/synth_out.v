/* Generated by Yosys 0.44 (git sha1 80ba43d26, g++ 14.2.1 -march=x86-64 -mtune=generic -O2 -fno-plt -fexceptions -fstack-clash-protection -fcf-protection -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -ffile-prefix-map=/build/yosys/src=/usr/src/debug/yosys -fPIC -O3) */

(* dynports =  1  *)
(* hdlname = "pc" *)
(* src = "../build/gpu.v:1421.1-1472.10" *)
module \$paramod$443b7d7e6fa51b4925ad1f73d225e8bfd7dc6c37\pc (clk, reset, enable, core_state, decoded_nzp, decoded_immediate, decoded_nzp_write_enable, decoded_pc_mux, alu_out, current_pc, next_pc);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  (* src = "../build/gpu.v:1444.40-1444.47" *)
  input [7:0] alu_out;
  wire [7:0] alu_out;
  (* src = "../build/gpu.v:1436.13-1436.16" *)
  input clk;
  wire clk;
  (* src = "../build/gpu.v:1439.19-1439.29" *)
  input [2:0] core_state;
  wire [2:0] core_state;
  (* src = "../build/gpu.v:1445.43-1445.53" *)
  input [7:0] current_pc;
  wire [7:0] current_pc;
  (* src = "../build/gpu.v:1441.40-1441.57" *)
  input [7:0] decoded_immediate;
  wire [7:0] decoded_immediate;
  (* src = "../build/gpu.v:1440.19-1440.30" *)
  input [2:0] decoded_nzp;
  wire [2:0] decoded_nzp;
  (* src = "../build/gpu.v:1442.13-1442.37" *)
  input decoded_nzp_write_enable;
  wire decoded_nzp_write_enable;
  (* src = "../build/gpu.v:1443.13-1443.27" *)
  input decoded_pc_mux;
  wire decoded_pc_mux;
  (* src = "../build/gpu.v:1438.13-1438.19" *)
  input enable;
  wire enable;
  (* src = "../build/gpu.v:1446.43-1446.50" *)
  output [7:0] next_pc;
  reg [7:0] next_pc;
  (* src = "../build/gpu.v:1447.12-1447.15" *)
  reg [2:0] nzp;
  (* src = "../build/gpu.v:1437.13-1437.18" *)
  input reset;
  wire reset;
  assign _002_ = decoded_nzp_write_enable & enable;
  assign _003_ = ~core_state[2];
  assign _004_ = core_state[0] | ~(core_state[1]);
  assign _005_ = _004_ | _003_;
  assign _000_ = _002_ & ~(_005_);
  assign _006_ = core_state[1] | ~(core_state[0]);
  assign _007_ = _006_ | _003_;
  assign _001_ = enable & ~(_007_);
  assign _008_ = ~current_pc[0];
  assign _009_ = decoded_nzp[0] & nzp[0];
  assign _010_ = decoded_nzp[1] & nzp[1];
  assign _011_ = _010_ | _009_;
  assign _012_ = decoded_nzp[2] & nzp[2];
  assign _013_ = _012_ | _011_;
  assign _014_ = _013_ ? decoded_immediate[0] : _008_;
  assign _037_ = decoded_pc_mux ? _014_ : _008_;
  assign _015_ = current_pc[1] ^ current_pc[0];
  assign _016_ = _013_ ? decoded_immediate[1] : _015_;
  assign _038_ = decoded_pc_mux ? _016_ : _015_;
  assign _017_ = ~(current_pc[1] & current_pc[0]);
  assign _018_ = ~(_017_ ^ current_pc[2]);
  assign _019_ = _013_ ? decoded_immediate[2] : _018_;
  assign _039_ = decoded_pc_mux ? _019_ : _018_;
  assign _020_ = current_pc[2] & ~(_017_);
  assign _021_ = _020_ ^ current_pc[3];
  assign _022_ = _013_ ? decoded_immediate[3] : _021_;
  assign _040_ = decoded_pc_mux ? _022_ : _021_;
  assign _023_ = ~(current_pc[3] & current_pc[2]);
  assign _024_ = _023_ | _017_;
  assign _025_ = ~(_024_ ^ current_pc[4]);
  assign _026_ = _013_ ? decoded_immediate[4] : _025_;
  assign _041_ = decoded_pc_mux ? _026_ : _025_;
  assign _027_ = current_pc[4] & ~(_024_);
  assign _028_ = _027_ ^ current_pc[5];
  assign _029_ = _013_ ? decoded_immediate[5] : _028_;
  assign _042_ = decoded_pc_mux ? _029_ : _028_;
  assign _030_ = ~(current_pc[5] & current_pc[4]);
  assign _031_ = _030_ | _024_;
  assign _032_ = ~(_031_ ^ current_pc[6]);
  assign _033_ = _013_ ? decoded_immediate[6] : _032_;
  assign _043_ = decoded_pc_mux ? _033_ : _032_;
  assign _034_ = current_pc[6] & ~(_031_);
  assign _035_ = _034_ ^ current_pc[7];
  assign _036_ = _013_ ? decoded_immediate[7] : _035_;
  assign _044_ = decoded_pc_mux ? _036_ : _035_;
  (* src = "../build/gpu.v:1448.2-1471.6" *)
  always @(posedge clk)
    if (reset) next_pc[0] <= 1'h0;
    else if (_001_) next_pc[0] <= _037_;
  (* src = "../build/gpu.v:1448.2-1471.6" *)
  always @(posedge clk)
    if (reset) next_pc[1] <= 1'h0;
    else if (_001_) next_pc[1] <= _038_;
  (* src = "../build/gpu.v:1448.2-1471.6" *)
  always @(posedge clk)
    if (reset) next_pc[2] <= 1'h0;
    else if (_001_) next_pc[2] <= _039_;
  (* src = "../build/gpu.v:1448.2-1471.6" *)
  always @(posedge clk)
    if (reset) next_pc[3] <= 1'h0;
    else if (_001_) next_pc[3] <= _040_;
  (* src = "../build/gpu.v:1448.2-1471.6" *)
  always @(posedge clk)
    if (reset) next_pc[4] <= 1'h0;
    else if (_001_) next_pc[4] <= _041_;
  (* src = "../build/gpu.v:1448.2-1471.6" *)
  always @(posedge clk)
    if (reset) next_pc[5] <= 1'h0;
    else if (_001_) next_pc[5] <= _042_;
  (* src = "../build/gpu.v:1448.2-1471.6" *)
  always @(posedge clk)
    if (reset) next_pc[6] <= 1'h0;
    else if (_001_) next_pc[6] <= _043_;
  (* src = "../build/gpu.v:1448.2-1471.6" *)
  always @(posedge clk)
    if (reset) next_pc[7] <= 1'h0;
    else if (_001_) next_pc[7] <= _044_;
  (* src = "../build/gpu.v:1448.2-1471.6" *)
  always @(posedge clk)
    if (reset) nzp[0] <= 1'h0;
    else if (_000_) nzp[0] <= alu_out[0];
  (* src = "../build/gpu.v:1448.2-1471.6" *)
  always @(posedge clk)
    if (reset) nzp[1] <= 1'h0;
    else if (_000_) nzp[1] <= alu_out[1];
  (* src = "../build/gpu.v:1448.2-1471.6" *)
  always @(posedge clk)
    if (reset) nzp[2] <= 1'h0;
    else if (_000_) nzp[2] <= alu_out[2];
endmodule

(* dynports =  1  *)
(* hdlname = "registers" *)
(* src = "../build/gpu.v:1474.1-1549.10" *)
module \$paramod$570077e6b96415b4d92362103cebadbad9f2b201\registers (clk, reset, enable, block_id, core_state, decoded_rd_address, decoded_rs_address, decoded_rt_address, decoded_reg_write_enable, decoded_reg_input_mux, decoded_immediate, alu_out, lsu_out, rs, rt);
  wire [7:0] _000_;
  wire [7:0] _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  wire _264_;
  wire _265_;
  wire _266_;
  wire _267_;
  wire _268_;
  wire _269_;
  wire _270_;
  wire _271_;
  wire _272_;
  wire _273_;
  wire _274_;
  wire _275_;
  wire _276_;
  wire _277_;
  wire _278_;
  wire _279_;
  wire _280_;
  wire _281_;
  wire _282_;
  wire _283_;
  wire _284_;
  wire _285_;
  wire _286_;
  wire _287_;
  wire _288_;
  wire _289_;
  wire _290_;
  wire _291_;
  wire _292_;
  wire _293_;
  wire _294_;
  wire _295_;
  wire _296_;
  wire _297_;
  wire _298_;
  wire _299_;
  wire _300_;
  wire _301_;
  wire _302_;
  wire _303_;
  wire _304_;
  wire _305_;
  wire _306_;
  wire _307_;
  wire _308_;
  wire _309_;
  wire _310_;
  wire _311_;
  wire _312_;
  wire _313_;
  wire _314_;
  wire _315_;
  wire _316_;
  wire _317_;
  wire _318_;
  wire _319_;
  wire _320_;
  wire _321_;
  wire _322_;
  wire _323_;
  wire _324_;
  wire _325_;
  wire _326_;
  wire _327_;
  wire _328_;
  wire _329_;
  wire _330_;
  wire _331_;
  wire _332_;
  wire _333_;
  wire _334_;
  wire _335_;
  wire _336_;
  wire _337_;
  wire _338_;
  wire _339_;
  wire _340_;
  wire _341_;
  (* src = "../build/gpu.v:1505.31-1505.38" *)
  input [7:0] alu_out;
  wire [7:0] alu_out;
  (* src = "../build/gpu.v:1497.19-1497.27" *)
  input [7:0] block_id;
  wire [7:0] block_id;
  (* src = "../build/gpu.v:1494.13-1494.16" *)
  input clk;
  wire clk;
  (* src = "../build/gpu.v:1498.19-1498.29" *)
  input [2:0] core_state;
  wire [2:0] core_state;
  (* src = "../build/gpu.v:1504.31-1504.48" *)
  input [7:0] decoded_immediate;
  wire [7:0] decoded_immediate;
  (* src = "../build/gpu.v:1499.19-1499.37" *)
  input [3:0] decoded_rd_address;
  wire [3:0] decoded_rd_address;
  (* src = "../build/gpu.v:1503.19-1503.40" *)
  input [1:0] decoded_reg_input_mux;
  wire [1:0] decoded_reg_input_mux;
  (* src = "../build/gpu.v:1502.13-1502.37" *)
  input decoded_reg_write_enable;
  wire decoded_reg_write_enable;
  (* src = "../build/gpu.v:1500.19-1500.37" *)
  input [3:0] decoded_rs_address;
  wire [3:0] decoded_rs_address;
  (* src = "../build/gpu.v:1501.19-1501.37" *)
  input [3:0] decoded_rt_address;
  wire [3:0] decoded_rt_address;
  (* src = "../build/gpu.v:1496.13-1496.19" *)
  input enable;
  wire enable;
  (* src = "../build/gpu.v:1506.31-1506.38" *)
  input [7:0] lsu_out;
  wire [7:0] lsu_out;
  reg [7:0] \registers[0] ;
  reg [7:0] \registers[10] ;
  reg [7:0] \registers[11] ;
  reg [7:0] \registers[12] ;
  reg [7:0] \registers[13] ;
  reg [7:0] \registers[14] ;
  reg [7:0] \registers[15] ;
  reg [7:0] \registers[1] ;
  reg [7:0] \registers[2] ;
  reg [7:0] \registers[3] ;
  reg [7:0] \registers[4] ;
  reg [7:0] \registers[5] ;
  reg [7:0] \registers[6] ;
  reg [7:0] \registers[7] ;
  reg [7:0] \registers[8] ;
  reg [7:0] \registers[9] ;
  (* src = "../build/gpu.v:1495.13-1495.18" *)
  input reset;
  wire reset;
  (* src = "../build/gpu.v:1507.19-1507.21" *)
  output [7:0] rs;
  reg [7:0] rs;
  (* src = "../build/gpu.v:1508.19-1508.21" *)
  output [7:0] rt;
  reg [7:0] rt;
  assign _050_ = decoded_rd_address[0] & decoded_rd_address[1];
  assign _051_ = decoded_rd_address[3] | ~(decoded_rd_address[2]);
  assign _052_ = _050_ & ~(_051_);
  assign _053_ = ~enable;
  assign _054_ = core_state[1] & ~(core_state[0]);
  assign _055_ = ~(_054_ & core_state[2]);
  assign _056_ = decoded_rd_address[2] & decoded_rd_address[3];
  assign _057_ = ~(decoded_rd_address[0] | decoded_rd_address[1]);
  assign _058_ = _057_ | ~(_056_);
  assign _059_ = ~(_058_ & decoded_reg_write_enable);
  assign _060_ = decoded_reg_input_mux[1] | decoded_reg_input_mux[0];
  assign _061_ = _060_ | _059_;
  assign _062_ = _061_ | _055_;
  assign _063_ = _062_ | _053_;
  assign _064_ = _063_ | reset;
  assign _065_ = decoded_reg_input_mux[1] | ~(decoded_reg_input_mux[0]);
  assign _066_ = _065_ | _059_;
  assign _067_ = _066_ | _055_;
  assign _068_ = _067_ | _053_;
  assign _069_ = _068_ | reset;
  assign _070_ = ~(_069_ & _064_);
  assign _071_ = decoded_reg_input_mux[0] | ~(decoded_reg_input_mux[1]);
  assign _072_ = _071_ | _059_;
  assign _073_ = _072_ | _055_;
  assign _074_ = enable & ~(_073_);
  assign _075_ = _074_ & ~(reset);
  assign _076_ = _075_ | _070_;
  assign _039_ = _076_ & _052_;
  assign _004_ = _039_ | reset;
  assign _077_ = decoded_rd_address[0] | decoded_rd_address[1];
  assign _078_ = _077_ | _051_;
  assign _036_ = _076_ & ~(_078_);
  assign _007_ = _036_ | reset;
  assign _079_ = decoded_rd_address[2] | ~(decoded_rd_address[3]);
  assign _080_ = _079_ | _077_;
  assign _040_ = _076_ & ~(_080_);
  assign _003_ = _040_ | reset;
  assign _081_ = decoded_rd_address[0] | ~(decoded_rd_address[1]);
  assign _082_ = _081_ | _051_;
  assign _038_ = _076_ & ~(_082_);
  assign _005_ = _038_ | reset;
  assign _083_ = decoded_rd_address[1] | ~(decoded_rd_address[0]);
  assign _084_ = _079_ | _083_;
  assign _041_ = _076_ & ~(_084_);
  assign _002_ = _041_ | reset;
  assign _085_ = decoded_rd_address[2] | decoded_rd_address[3];
  assign _086_ = _085_ | _077_;
  assign _027_ = _076_ & ~(_086_);
  assign _017_ = _027_ | reset;
  assign _087_ = _081_ | ~(_056_);
  assign _031_ = _076_ & ~(_087_);
  assign _012_ = _031_ | reset;
  assign _088_ = ~(_056_ & _050_);
  assign _032_ = _076_ & ~(_088_);
  assign _011_ = _032_ | reset;
  assign _089_ = ~(core_state[0] & core_state[1]);
  assign _090_ = _089_ | core_state[2];
  assign _018_ = enable & ~(_090_);
  assign _091_ = _083_ | ~(_056_);
  assign _092_ = _076_ & ~(_091_);
  assign _093_ = enable | reset;
  assign _013_ = _093_ | _092_;
  assign _094_ = _079_ | ~(_050_);
  assign _029_ = _076_ & ~(_094_);
  assign _015_ = _029_ | reset;
  assign _095_ = _085_ | _081_;
  assign _034_ = _076_ & ~(_095_);
  assign _009_ = _034_ | reset;
  assign _096_ = _085_ | _083_;
  assign _033_ = _076_ & ~(_096_);
  assign _010_ = _033_ | reset;
  assign _097_ = _083_ | _051_;
  assign _037_ = _076_ & ~(_097_);
  assign _006_ = _037_ | reset;
  assign _098_ = _081_ | _079_;
  assign _028_ = _076_ & ~(_098_);
  assign _016_ = _028_ | reset;
  assign _099_ = _077_ | ~(_056_);
  assign _030_ = _076_ & ~(_099_);
  assign _014_ = _030_ | reset;
  assign _100_ = _085_ | ~(_050_);
  assign _035_ = _076_ & ~(_100_);
  assign _008_ = _035_ | reset;
  assign _101_ = decoded_rs_address[0] ? \registers[1] [0] : \registers[0] [0];
  assign _102_ = decoded_rs_address[0] ? \registers[3] [0] : \registers[2] [0];
  assign _103_ = decoded_rs_address[1] ? _102_ : _101_;
  assign _104_ = decoded_rs_address[0] ? \registers[5] [0] : \registers[4] [0];
  assign _105_ = decoded_rs_address[0] ? \registers[7] [0] : \registers[6] [0];
  assign _106_ = decoded_rs_address[1] ? _105_ : _104_;
  assign _107_ = decoded_rs_address[2] ? _106_ : _103_;
  assign _108_ = decoded_rs_address[0] ? \registers[9] [0] : \registers[8] [0];
  assign _109_ = decoded_rs_address[0] ? \registers[11] [0] : \registers[10] [0];
  assign _110_ = decoded_rs_address[1] ? _109_ : _108_;
  assign _111_ = decoded_rs_address[0] ? \registers[13] [0] : \registers[12] [0];
  assign _112_ = decoded_rs_address[0] ? \registers[15] [0] : \registers[14] [0];
  assign _113_ = decoded_rs_address[1] ? _112_ : _111_;
  assign _114_ = decoded_rs_address[2] ? _113_ : _110_;
  assign _001_[0] = decoded_rs_address[3] ? _114_ : _107_;
  assign _115_ = decoded_rs_address[0] ? \registers[1] [1] : \registers[0] [1];
  assign _116_ = decoded_rs_address[0] ? \registers[3] [1] : \registers[2] [1];
  assign _117_ = decoded_rs_address[1] ? _116_ : _115_;
  assign _118_ = decoded_rs_address[0] ? \registers[5] [1] : \registers[4] [1];
  assign _119_ = decoded_rs_address[0] ? \registers[7] [1] : \registers[6] [1];
  assign _120_ = decoded_rs_address[1] ? _119_ : _118_;
  assign _121_ = decoded_rs_address[2] ? _120_ : _117_;
  assign _122_ = decoded_rs_address[0] ? \registers[9] [1] : \registers[8] [1];
  assign _123_ = decoded_rs_address[0] ? \registers[11] [1] : \registers[10] [1];
  assign _124_ = decoded_rs_address[1] ? _123_ : _122_;
  assign _125_ = decoded_rs_address[0] ? \registers[13] [1] : \registers[12] [1];
  assign _126_ = decoded_rs_address[0] ? \registers[15] [1] : \registers[14] [1];
  assign _127_ = decoded_rs_address[1] ? _126_ : _125_;
  assign _128_ = decoded_rs_address[2] ? _127_ : _124_;
  assign _001_[1] = decoded_rs_address[3] ? _128_ : _121_;
  assign _129_ = decoded_rs_address[0] ? \registers[1] [2] : \registers[0] [2];
  assign _130_ = decoded_rs_address[0] ? \registers[3] [2] : \registers[2] [2];
  assign _131_ = decoded_rs_address[1] ? _130_ : _129_;
  assign _132_ = decoded_rs_address[0] ? \registers[5] [2] : \registers[4] [2];
  assign _133_ = decoded_rs_address[0] ? \registers[7] [2] : \registers[6] [2];
  assign _134_ = decoded_rs_address[1] ? _133_ : _132_;
  assign _135_ = decoded_rs_address[2] ? _134_ : _131_;
  assign _136_ = decoded_rs_address[0] ? \registers[9] [2] : \registers[8] [2];
  assign _137_ = decoded_rs_address[0] ? \registers[11] [2] : \registers[10] [2];
  assign _138_ = decoded_rs_address[1] ? _137_ : _136_;
  assign _139_ = decoded_rs_address[0] ? \registers[13] [2] : \registers[12] [2];
  assign _140_ = decoded_rs_address[0] ? \registers[15] [2] : \registers[14] [2];
  assign _141_ = decoded_rs_address[1] ? _140_ : _139_;
  assign _142_ = decoded_rs_address[2] ? _141_ : _138_;
  assign _001_[2] = decoded_rs_address[3] ? _142_ : _135_;
  assign _143_ = decoded_rs_address[0] ? \registers[1] [3] : \registers[0] [3];
  assign _144_ = decoded_rs_address[0] ? \registers[3] [3] : \registers[2] [3];
  assign _145_ = decoded_rs_address[1] ? _144_ : _143_;
  assign _146_ = decoded_rs_address[0] ? \registers[5] [3] : \registers[4] [3];
  assign _147_ = decoded_rs_address[0] ? \registers[7] [3] : \registers[6] [3];
  assign _148_ = decoded_rs_address[1] ? _147_ : _146_;
  assign _149_ = decoded_rs_address[2] ? _148_ : _145_;
  assign _150_ = decoded_rs_address[0] ? \registers[9] [3] : \registers[8] [3];
  assign _151_ = decoded_rs_address[0] ? \registers[11] [3] : \registers[10] [3];
  assign _152_ = decoded_rs_address[1] ? _151_ : _150_;
  assign _153_ = decoded_rs_address[0] ? \registers[13] [3] : \registers[12] [3];
  assign _154_ = decoded_rs_address[0] ? \registers[15] [3] : \registers[14] [3];
  assign _155_ = decoded_rs_address[1] ? _154_ : _153_;
  assign _156_ = decoded_rs_address[2] ? _155_ : _152_;
  assign _001_[3] = decoded_rs_address[3] ? _156_ : _149_;
  assign _157_ = decoded_rs_address[0] ? \registers[1] [4] : \registers[0] [4];
  assign _158_ = decoded_rs_address[0] ? \registers[3] [4] : \registers[2] [4];
  assign _159_ = decoded_rs_address[1] ? _158_ : _157_;
  assign _160_ = decoded_rs_address[0] ? \registers[5] [4] : \registers[4] [4];
  assign _161_ = decoded_rs_address[0] ? \registers[7] [4] : \registers[6] [4];
  assign _162_ = decoded_rs_address[1] ? _161_ : _160_;
  assign _163_ = decoded_rs_address[2] ? _162_ : _159_;
  assign _164_ = decoded_rs_address[0] ? \registers[9] [4] : \registers[8] [4];
  assign _165_ = decoded_rs_address[0] ? \registers[11] [4] : \registers[10] [4];
  assign _166_ = decoded_rs_address[1] ? _165_ : _164_;
  assign _167_ = decoded_rs_address[0] ? \registers[13] [4] : \registers[12] [4];
  assign _168_ = decoded_rs_address[0] ? \registers[15] [4] : \registers[14] [4];
  assign _169_ = decoded_rs_address[1] ? _168_ : _167_;
  assign _170_ = decoded_rs_address[2] ? _169_ : _166_;
  assign _001_[4] = decoded_rs_address[3] ? _170_ : _163_;
  assign _171_ = decoded_rs_address[0] ? \registers[1] [5] : \registers[0] [5];
  assign _172_ = decoded_rs_address[0] ? \registers[3] [5] : \registers[2] [5];
  assign _173_ = decoded_rs_address[1] ? _172_ : _171_;
  assign _174_ = decoded_rs_address[0] ? \registers[5] [5] : \registers[4] [5];
  assign _175_ = decoded_rs_address[0] ? \registers[7] [5] : \registers[6] [5];
  assign _176_ = decoded_rs_address[1] ? _175_ : _174_;
  assign _177_ = decoded_rs_address[2] ? _176_ : _173_;
  assign _178_ = decoded_rs_address[0] ? \registers[9] [5] : \registers[8] [5];
  assign _179_ = decoded_rs_address[0] ? \registers[11] [5] : \registers[10] [5];
  assign _180_ = decoded_rs_address[1] ? _179_ : _178_;
  assign _181_ = decoded_rs_address[0] ? \registers[13] [5] : \registers[12] [5];
  assign _182_ = decoded_rs_address[0] ? \registers[15] [5] : \registers[14] [5];
  assign _183_ = decoded_rs_address[1] ? _182_ : _181_;
  assign _184_ = decoded_rs_address[2] ? _183_ : _180_;
  assign _001_[5] = decoded_rs_address[3] ? _184_ : _177_;
  assign _185_ = decoded_rs_address[0] ? \registers[1] [6] : \registers[0] [6];
  assign _186_ = decoded_rs_address[0] ? \registers[3] [6] : \registers[2] [6];
  assign _187_ = decoded_rs_address[1] ? _186_ : _185_;
  assign _188_ = decoded_rs_address[0] ? \registers[5] [6] : \registers[4] [6];
  assign _189_ = decoded_rs_address[0] ? \registers[7] [6] : \registers[6] [6];
  assign _190_ = decoded_rs_address[1] ? _189_ : _188_;
  assign _191_ = decoded_rs_address[2] ? _190_ : _187_;
  assign _192_ = decoded_rs_address[0] ? \registers[9] [6] : \registers[8] [6];
  assign _193_ = decoded_rs_address[0] ? \registers[11] [6] : \registers[10] [6];
  assign _194_ = decoded_rs_address[1] ? _193_ : _192_;
  assign _195_ = decoded_rs_address[0] ? \registers[13] [6] : \registers[12] [6];
  assign _196_ = decoded_rs_address[0] ? \registers[15] [6] : \registers[14] [6];
  assign _197_ = decoded_rs_address[1] ? _196_ : _195_;
  assign _198_ = decoded_rs_address[2] ? _197_ : _194_;
  assign _001_[6] = decoded_rs_address[3] ? _198_ : _191_;
  assign _199_ = decoded_rs_address[0] ? \registers[1] [7] : \registers[0] [7];
  assign _200_ = decoded_rs_address[0] ? \registers[3] [7] : \registers[2] [7];
  assign _201_ = decoded_rs_address[1] ? _200_ : _199_;
  assign _202_ = decoded_rs_address[0] ? \registers[5] [7] : \registers[4] [7];
  assign _203_ = decoded_rs_address[0] ? \registers[7] [7] : \registers[6] [7];
  assign _204_ = decoded_rs_address[1] ? _203_ : _202_;
  assign _205_ = decoded_rs_address[2] ? _204_ : _201_;
  assign _206_ = decoded_rs_address[0] ? \registers[9] [7] : \registers[8] [7];
  assign _207_ = decoded_rs_address[0] ? \registers[11] [7] : \registers[10] [7];
  assign _208_ = decoded_rs_address[1] ? _207_ : _206_;
  assign _209_ = decoded_rs_address[0] ? \registers[13] [7] : \registers[12] [7];
  assign _210_ = decoded_rs_address[0] ? \registers[15] [7] : \registers[14] [7];
  assign _211_ = decoded_rs_address[1] ? _210_ : _209_;
  assign _212_ = decoded_rs_address[2] ? _211_ : _208_;
  assign _001_[7] = decoded_rs_address[3] ? _212_ : _205_;
  assign _213_ = _069_ ? alu_out[0] : lsu_out[0];
  assign _019_ = _075_ ? decoded_immediate[0] : _213_;
  assign _214_ = _069_ ? alu_out[1] : lsu_out[1];
  assign _020_ = _075_ ? decoded_immediate[1] : _214_;
  assign _215_ = _069_ ? alu_out[2] : lsu_out[2];
  assign _021_ = _075_ ? decoded_immediate[2] : _215_;
  assign _216_ = _069_ ? alu_out[3] : lsu_out[3];
  assign _022_ = _075_ ? decoded_immediate[3] : _216_;
  assign _217_ = _069_ ? alu_out[4] : lsu_out[4];
  assign _023_ = _075_ ? decoded_immediate[4] : _217_;
  assign _218_ = _069_ ? alu_out[5] : lsu_out[5];
  assign _024_ = _075_ ? decoded_immediate[5] : _218_;
  assign _219_ = _069_ ? alu_out[6] : lsu_out[6];
  assign _025_ = _075_ ? decoded_immediate[6] : _219_;
  assign _220_ = _069_ ? alu_out[7] : lsu_out[7];
  assign _026_ = _075_ ? decoded_immediate[7] : _220_;
  assign _221_ = reset | ~(enable);
  assign _222_ = block_id[0] & ~(_221_);
  assign _042_ = _092_ ? _019_ : _222_;
  assign _223_ = block_id[1] & ~(_221_);
  assign _043_ = _092_ ? _020_ : _223_;
  assign _224_ = block_id[2] & ~(_221_);
  assign _044_ = _092_ ? _021_ : _224_;
  assign _225_ = block_id[3] & ~(_221_);
  assign _045_ = _092_ ? _022_ : _225_;
  assign _226_ = block_id[4] & ~(_221_);
  assign _046_ = _092_ ? _023_ : _226_;
  assign _227_ = block_id[5] & ~(_221_);
  assign _047_ = _092_ ? _024_ : _227_;
  assign _228_ = block_id[6] & ~(_221_);
  assign _048_ = _092_ ? _025_ : _228_;
  assign _229_ = block_id[7] & ~(_221_);
  assign _049_ = _092_ ? _026_ : _229_;
  assign _230_ = decoded_rt_address[0] ? \registers[1] [0] : \registers[0] [0];
  assign _231_ = decoded_rt_address[0] ? \registers[3] [0] : \registers[2] [0];
  assign _232_ = decoded_rt_address[1] ? _231_ : _230_;
  assign _233_ = decoded_rt_address[0] ? \registers[5] [0] : \registers[4] [0];
  assign _234_ = decoded_rt_address[0] ? \registers[7] [0] : \registers[6] [0];
  assign _235_ = decoded_rt_address[1] ? _234_ : _233_;
  assign _236_ = decoded_rt_address[2] ? _235_ : _232_;
  assign _237_ = decoded_rt_address[0] ? \registers[9] [0] : \registers[8] [0];
  assign _238_ = decoded_rt_address[0] ? \registers[11] [0] : \registers[10] [0];
  assign _239_ = decoded_rt_address[1] ? _238_ : _237_;
  assign _240_ = decoded_rt_address[0] ? \registers[13] [0] : \registers[12] [0];
  assign _241_ = decoded_rt_address[0] ? \registers[15] [0] : \registers[14] [0];
  assign _242_ = decoded_rt_address[1] ? _241_ : _240_;
  assign _243_ = decoded_rt_address[2] ? _242_ : _239_;
  assign _000_[0] = decoded_rt_address[3] ? _243_ : _236_;
  assign _244_ = decoded_rt_address[0] ? \registers[1] [1] : \registers[0] [1];
  assign _245_ = decoded_rt_address[0] ? \registers[3] [1] : \registers[2] [1];
  assign _246_ = decoded_rt_address[1] ? _245_ : _244_;
  assign _247_ = decoded_rt_address[0] ? \registers[5] [1] : \registers[4] [1];
  assign _248_ = decoded_rt_address[0] ? \registers[7] [1] : \registers[6] [1];
  assign _249_ = decoded_rt_address[1] ? _248_ : _247_;
  assign _250_ = decoded_rt_address[2] ? _249_ : _246_;
  assign _251_ = decoded_rt_address[0] ? \registers[9] [1] : \registers[8] [1];
  assign _252_ = decoded_rt_address[0] ? \registers[11] [1] : \registers[10] [1];
  assign _253_ = decoded_rt_address[1] ? _252_ : _251_;
  assign _254_ = decoded_rt_address[0] ? \registers[13] [1] : \registers[12] [1];
  assign _255_ = decoded_rt_address[0] ? \registers[15] [1] : \registers[14] [1];
  assign _256_ = decoded_rt_address[1] ? _255_ : _254_;
  assign _257_ = decoded_rt_address[2] ? _256_ : _253_;
  assign _000_[1] = decoded_rt_address[3] ? _257_ : _250_;
  assign _258_ = decoded_rt_address[0] ? \registers[1] [2] : \registers[0] [2];
  assign _259_ = decoded_rt_address[0] ? \registers[3] [2] : \registers[2] [2];
  assign _260_ = decoded_rt_address[1] ? _259_ : _258_;
  assign _261_ = decoded_rt_address[0] ? \registers[5] [2] : \registers[4] [2];
  assign _262_ = decoded_rt_address[0] ? \registers[7] [2] : \registers[6] [2];
  assign _263_ = decoded_rt_address[1] ? _262_ : _261_;
  assign _264_ = decoded_rt_address[2] ? _263_ : _260_;
  assign _265_ = decoded_rt_address[0] ? \registers[9] [2] : \registers[8] [2];
  assign _266_ = decoded_rt_address[0] ? \registers[11] [2] : \registers[10] [2];
  assign _267_ = decoded_rt_address[1] ? _266_ : _265_;
  assign _268_ = decoded_rt_address[0] ? \registers[13] [2] : \registers[12] [2];
  assign _269_ = decoded_rt_address[0] ? \registers[15] [2] : \registers[14] [2];
  assign _270_ = decoded_rt_address[1] ? _269_ : _268_;
  assign _271_ = decoded_rt_address[2] ? _270_ : _267_;
  assign _000_[2] = decoded_rt_address[3] ? _271_ : _264_;
  assign _272_ = decoded_rt_address[0] ? \registers[1] [3] : \registers[0] [3];
  assign _273_ = decoded_rt_address[0] ? \registers[3] [3] : \registers[2] [3];
  assign _274_ = decoded_rt_address[1] ? _273_ : _272_;
  assign _275_ = decoded_rt_address[0] ? \registers[5] [3] : \registers[4] [3];
  assign _276_ = decoded_rt_address[0] ? \registers[7] [3] : \registers[6] [3];
  assign _277_ = decoded_rt_address[1] ? _276_ : _275_;
  assign _278_ = decoded_rt_address[2] ? _277_ : _274_;
  assign _279_ = decoded_rt_address[0] ? \registers[9] [3] : \registers[8] [3];
  assign _280_ = decoded_rt_address[0] ? \registers[11] [3] : \registers[10] [3];
  assign _281_ = decoded_rt_address[1] ? _280_ : _279_;
  assign _282_ = decoded_rt_address[0] ? \registers[13] [3] : \registers[12] [3];
  assign _283_ = decoded_rt_address[0] ? \registers[15] [3] : \registers[14] [3];
  assign _284_ = decoded_rt_address[1] ? _283_ : _282_;
  assign _285_ = decoded_rt_address[2] ? _284_ : _281_;
  assign _000_[3] = decoded_rt_address[3] ? _285_ : _278_;
  assign _286_ = decoded_rt_address[0] ? \registers[1] [4] : \registers[0] [4];
  assign _287_ = decoded_rt_address[0] ? \registers[3] [4] : \registers[2] [4];
  assign _288_ = decoded_rt_address[1] ? _287_ : _286_;
  assign _289_ = decoded_rt_address[0] ? \registers[5] [4] : \registers[4] [4];
  assign _290_ = decoded_rt_address[0] ? \registers[7] [4] : \registers[6] [4];
  assign _291_ = decoded_rt_address[1] ? _290_ : _289_;
  assign _292_ = decoded_rt_address[2] ? _291_ : _288_;
  assign _293_ = decoded_rt_address[0] ? \registers[9] [4] : \registers[8] [4];
  assign _294_ = decoded_rt_address[0] ? \registers[11] [4] : \registers[10] [4];
  assign _295_ = decoded_rt_address[1] ? _294_ : _293_;
  assign _296_ = decoded_rt_address[0] ? \registers[13] [4] : \registers[12] [4];
  assign _297_ = decoded_rt_address[0] ? \registers[15] [4] : \registers[14] [4];
  assign _298_ = decoded_rt_address[1] ? _297_ : _296_;
  assign _299_ = decoded_rt_address[2] ? _298_ : _295_;
  assign _000_[4] = decoded_rt_address[3] ? _299_ : _292_;
  assign _300_ = decoded_rt_address[0] ? \registers[1] [5] : \registers[0] [5];
  assign _301_ = decoded_rt_address[0] ? \registers[3] [5] : \registers[2] [5];
  assign _302_ = decoded_rt_address[1] ? _301_ : _300_;
  assign _303_ = decoded_rt_address[0] ? \registers[5] [5] : \registers[4] [5];
  assign _304_ = decoded_rt_address[0] ? \registers[7] [5] : \registers[6] [5];
  assign _305_ = decoded_rt_address[1] ? _304_ : _303_;
  assign _306_ = decoded_rt_address[2] ? _305_ : _302_;
  assign _307_ = decoded_rt_address[0] ? \registers[9] [5] : \registers[8] [5];
  assign _308_ = decoded_rt_address[0] ? \registers[11] [5] : \registers[10] [5];
  assign _309_ = decoded_rt_address[1] ? _308_ : _307_;
  assign _310_ = decoded_rt_address[0] ? \registers[13] [5] : \registers[12] [5];
  assign _311_ = decoded_rt_address[0] ? \registers[15] [5] : \registers[14] [5];
  assign _312_ = decoded_rt_address[1] ? _311_ : _310_;
  assign _313_ = decoded_rt_address[2] ? _312_ : _309_;
  assign _000_[5] = decoded_rt_address[3] ? _313_ : _306_;
  assign _314_ = decoded_rt_address[0] ? \registers[1] [6] : \registers[0] [6];
  assign _315_ = decoded_rt_address[0] ? \registers[3] [6] : \registers[2] [6];
  assign _316_ = decoded_rt_address[1] ? _315_ : _314_;
  assign _317_ = decoded_rt_address[0] ? \registers[5] [6] : \registers[4] [6];
  assign _318_ = decoded_rt_address[0] ? \registers[7] [6] : \registers[6] [6];
  assign _319_ = decoded_rt_address[1] ? _318_ : _317_;
  assign _320_ = decoded_rt_address[2] ? _319_ : _316_;
  assign _321_ = decoded_rt_address[0] ? \registers[9] [6] : \registers[8] [6];
  assign _322_ = decoded_rt_address[0] ? \registers[11] [6] : \registers[10] [6];
  assign _323_ = decoded_rt_address[1] ? _322_ : _321_;
  assign _324_ = decoded_rt_address[0] ? \registers[13] [6] : \registers[12] [6];
  assign _325_ = decoded_rt_address[0] ? \registers[15] [6] : \registers[14] [6];
  assign _326_ = decoded_rt_address[1] ? _325_ : _324_;
  assign _327_ = decoded_rt_address[2] ? _326_ : _323_;
  assign _000_[6] = decoded_rt_address[3] ? _327_ : _320_;
  assign _328_ = decoded_rt_address[0] ? \registers[1] [7] : \registers[0] [7];
  assign _329_ = decoded_rt_address[0] ? \registers[3] [7] : \registers[2] [7];
  assign _330_ = decoded_rt_address[1] ? _329_ : _328_;
  assign _331_ = decoded_rt_address[0] ? \registers[5] [7] : \registers[4] [7];
  assign _332_ = decoded_rt_address[0] ? \registers[7] [7] : \registers[6] [7];
  assign _333_ = decoded_rt_address[1] ? _332_ : _331_;
  assign _334_ = decoded_rt_address[2] ? _333_ : _330_;
  assign _335_ = decoded_rt_address[0] ? \registers[9] [7] : \registers[8] [7];
  assign _336_ = decoded_rt_address[0] ? \registers[11] [7] : \registers[10] [7];
  assign _337_ = decoded_rt_address[1] ? _336_ : _335_;
  assign _338_ = decoded_rt_address[0] ? \registers[13] [7] : \registers[12] [7];
  assign _339_ = decoded_rt_address[0] ? \registers[15] [7] : \registers[14] [7];
  assign _340_ = decoded_rt_address[1] ? _339_ : _338_;
  assign _341_ = decoded_rt_address[2] ? _340_ : _337_;
  assign _000_[7] = decoded_rt_address[3] ? _341_ : _334_;
  always @(posedge clk)
    if (reset) rs[0] <= 1'h0;
    else if (_018_) rs[0] <= _001_[0];
  always @(posedge clk)
    if (reset) rs[1] <= 1'h0;
    else if (_018_) rs[1] <= _001_[1];
  always @(posedge clk)
    if (reset) rs[2] <= 1'h0;
    else if (_018_) rs[2] <= _001_[2];
  always @(posedge clk)
    if (reset) rs[3] <= 1'h0;
    else if (_018_) rs[3] <= _001_[3];
  always @(posedge clk)
    if (reset) rs[4] <= 1'h0;
    else if (_018_) rs[4] <= _001_[4];
  always @(posedge clk)
    if (reset) rs[5] <= 1'h0;
    else if (_018_) rs[5] <= _001_[5];
  always @(posedge clk)
    if (reset) rs[6] <= 1'h0;
    else if (_018_) rs[6] <= _001_[6];
  always @(posedge clk)
    if (reset) rs[7] <= 1'h0;
    else if (_018_) rs[7] <= _001_[7];
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [0] <= 1'h0;
      else \registers[10] [0] <= _019_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [1] <= 1'h0;
      else \registers[10] [1] <= _020_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [2] <= 1'h0;
      else \registers[10] [2] <= _021_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [3] <= 1'h0;
      else \registers[10] [3] <= _022_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [4] <= 1'h0;
      else \registers[10] [4] <= _023_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [5] <= 1'h0;
      else \registers[10] [5] <= _024_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [6] <= 1'h0;
      else \registers[10] [6] <= _025_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [7] <= 1'h0;
      else \registers[10] [7] <= _026_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [0] <= 1'h0;
      else \registers[11] [0] <= _019_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [1] <= 1'h0;
      else \registers[11] [1] <= _020_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [2] <= 1'h0;
      else \registers[11] [2] <= _021_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [3] <= 1'h0;
      else \registers[11] [3] <= _022_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [4] <= 1'h0;
      else \registers[11] [4] <= _023_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [5] <= 1'h0;
      else \registers[11] [5] <= _024_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [6] <= 1'h0;
      else \registers[11] [6] <= _025_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [7] <= 1'h0;
      else \registers[11] [7] <= _026_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [0] <= 1'h0;
      else \registers[12] [0] <= _019_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [1] <= 1'h0;
      else \registers[12] [1] <= _020_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [2] <= 1'h0;
      else \registers[12] [2] <= _021_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [3] <= 1'h0;
      else \registers[12] [3] <= _022_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [4] <= 1'h0;
      else \registers[12] [4] <= _023_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [5] <= 1'h0;
      else \registers[12] [5] <= _024_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [6] <= 1'h0;
      else \registers[12] [6] <= _025_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [7] <= 1'h0;
      else \registers[12] [7] <= _026_;
  always @(posedge clk)
    if (_013_) \registers[13] [0] <= _042_;
  always @(posedge clk)
    if (_013_) \registers[13] [1] <= _043_;
  always @(posedge clk)
    if (_013_) \registers[13] [2] <= _044_;
  always @(posedge clk)
    if (_013_) \registers[13] [3] <= _045_;
  always @(posedge clk)
    if (_013_) \registers[13] [4] <= _046_;
  always @(posedge clk)
    if (_013_) \registers[13] [5] <= _047_;
  always @(posedge clk)
    if (_013_) \registers[13] [6] <= _048_;
  always @(posedge clk)
    if (_013_) \registers[13] [7] <= _049_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [0] <= 1'h0;
      else \registers[3] [0] <= _019_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [1] <= 1'h0;
      else \registers[3] [1] <= _020_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [2] <= 1'h0;
      else \registers[3] [2] <= _021_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [3] <= 1'h0;
      else \registers[3] [3] <= _022_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [4] <= 1'h0;
      else \registers[3] [4] <= _023_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [5] <= 1'h0;
      else \registers[3] [5] <= _024_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [6] <= 1'h0;
      else \registers[3] [6] <= _025_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [7] <= 1'h0;
      else \registers[3] [7] <= _026_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [0] <= 1'h0;
      else \registers[4] [0] <= _019_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [1] <= 1'h0;
      else \registers[4] [1] <= _020_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [2] <= 1'h0;
      else \registers[4] [2] <= _021_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [3] <= 1'h0;
      else \registers[4] [3] <= _022_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [4] <= 1'h0;
      else \registers[4] [4] <= _023_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [5] <= 1'h0;
      else \registers[4] [5] <= _024_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [6] <= 1'h0;
      else \registers[4] [6] <= _025_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [7] <= 1'h0;
      else \registers[4] [7] <= _026_;
  always @(posedge clk)
    if (reset) rt[0] <= 1'h0;
    else if (_018_) rt[0] <= _000_[0];
  always @(posedge clk)
    if (reset) rt[1] <= 1'h0;
    else if (_018_) rt[1] <= _000_[1];
  always @(posedge clk)
    if (reset) rt[2] <= 1'h0;
    else if (_018_) rt[2] <= _000_[2];
  always @(posedge clk)
    if (reset) rt[3] <= 1'h0;
    else if (_018_) rt[3] <= _000_[3];
  always @(posedge clk)
    if (reset) rt[4] <= 1'h0;
    else if (_018_) rt[4] <= _000_[4];
  always @(posedge clk)
    if (reset) rt[5] <= 1'h0;
    else if (_018_) rt[5] <= _000_[5];
  always @(posedge clk)
    if (reset) rt[6] <= 1'h0;
    else if (_018_) rt[6] <= _000_[6];
  always @(posedge clk)
    if (reset) rt[7] <= 1'h0;
    else if (_018_) rt[7] <= _000_[7];
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [0] <= 1'h0;
      else \registers[9] [0] <= _019_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [1] <= 1'h0;
      else \registers[9] [1] <= _020_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [2] <= 1'h0;
      else \registers[9] [2] <= _021_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [3] <= 1'h0;
      else \registers[9] [3] <= _022_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [4] <= 1'h0;
      else \registers[9] [4] <= _023_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [5] <= 1'h0;
      else \registers[9] [5] <= _024_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [6] <= 1'h0;
      else \registers[9] [6] <= _025_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [7] <= 1'h0;
      else \registers[9] [7] <= _026_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [0] <= 1'h1;
      else \registers[15] [0] <= _019_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [1] <= 1'h1;
      else \registers[15] [1] <= _020_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [2] <= 1'h0;
      else \registers[15] [2] <= _021_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [3] <= 1'h0;
      else \registers[15] [3] <= _022_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [4] <= 1'h0;
      else \registers[15] [4] <= _023_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [5] <= 1'h0;
      else \registers[15] [5] <= _024_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [6] <= 1'h0;
      else \registers[15] [6] <= _025_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [7] <= 1'h0;
      else \registers[15] [7] <= _026_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [0] <= 1'h0;
      else \registers[2] [0] <= _019_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [1] <= 1'h0;
      else \registers[2] [1] <= _020_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [2] <= 1'h0;
      else \registers[2] [2] <= _021_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [3] <= 1'h0;
      else \registers[2] [3] <= _022_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [4] <= 1'h0;
      else \registers[2] [4] <= _023_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [5] <= 1'h0;
      else \registers[2] [5] <= _024_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [6] <= 1'h0;
      else \registers[2] [6] <= _025_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [7] <= 1'h0;
      else \registers[2] [7] <= _026_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [0] <= 1'h0;
      else \registers[8] [0] <= _019_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [1] <= 1'h0;
      else \registers[8] [1] <= _020_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [2] <= 1'h0;
      else \registers[8] [2] <= _021_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [3] <= 1'h0;
      else \registers[8] [3] <= _022_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [4] <= 1'h0;
      else \registers[8] [4] <= _023_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [5] <= 1'h0;
      else \registers[8] [5] <= _024_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [6] <= 1'h0;
      else \registers[8] [6] <= _025_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [7] <= 1'h0;
      else \registers[8] [7] <= _026_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [0] <= 1'h0;
      else \registers[7] [0] <= _019_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [1] <= 1'h0;
      else \registers[7] [1] <= _020_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [2] <= 1'h0;
      else \registers[7] [2] <= _021_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [3] <= 1'h0;
      else \registers[7] [3] <= _022_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [4] <= 1'h0;
      else \registers[7] [4] <= _023_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [5] <= 1'h0;
      else \registers[7] [5] <= _024_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [6] <= 1'h0;
      else \registers[7] [6] <= _025_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [7] <= 1'h0;
      else \registers[7] [7] <= _026_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [0] <= 1'h0;
      else \registers[5] [0] <= _019_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [1] <= 1'h0;
      else \registers[5] [1] <= _020_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [2] <= 1'h0;
      else \registers[5] [2] <= _021_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [3] <= 1'h0;
      else \registers[5] [3] <= _022_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [4] <= 1'h0;
      else \registers[5] [4] <= _023_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [5] <= 1'h0;
      else \registers[5] [5] <= _024_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [6] <= 1'h0;
      else \registers[5] [6] <= _025_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [7] <= 1'h0;
      else \registers[5] [7] <= _026_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [0] <= 1'h0;
      else \registers[0] [0] <= _019_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [1] <= 1'h0;
      else \registers[0] [1] <= _020_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [2] <= 1'h0;
      else \registers[0] [2] <= _021_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [3] <= 1'h0;
      else \registers[0] [3] <= _022_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [4] <= 1'h0;
      else \registers[0] [4] <= _023_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [5] <= 1'h0;
      else \registers[0] [5] <= _024_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [6] <= 1'h0;
      else \registers[0] [6] <= _025_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [7] <= 1'h0;
      else \registers[0] [7] <= _026_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [0] <= 1'h0;
      else \registers[14] [0] <= _019_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [1] <= 1'h0;
      else \registers[14] [1] <= _020_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [2] <= 1'h1;
      else \registers[14] [2] <= _021_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [3] <= 1'h0;
      else \registers[14] [3] <= _022_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [4] <= 1'h0;
      else \registers[14] [4] <= _023_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [5] <= 1'h0;
      else \registers[14] [5] <= _024_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [6] <= 1'h0;
      else \registers[14] [6] <= _025_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [7] <= 1'h0;
      else \registers[14] [7] <= _026_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [0] <= 1'h0;
      else \registers[6] [0] <= _019_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [1] <= 1'h0;
      else \registers[6] [1] <= _020_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [2] <= 1'h0;
      else \registers[6] [2] <= _021_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [3] <= 1'h0;
      else \registers[6] [3] <= _022_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [4] <= 1'h0;
      else \registers[6] [4] <= _023_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [5] <= 1'h0;
      else \registers[6] [5] <= _024_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [6] <= 1'h0;
      else \registers[6] [6] <= _025_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [7] <= 1'h0;
      else \registers[6] [7] <= _026_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [0] <= 1'h0;
      else \registers[1] [0] <= _019_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [1] <= 1'h0;
      else \registers[1] [1] <= _020_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [2] <= 1'h0;
      else \registers[1] [2] <= _021_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [3] <= 1'h0;
      else \registers[1] [3] <= _022_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [4] <= 1'h0;
      else \registers[1] [4] <= _023_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [5] <= 1'h0;
      else \registers[1] [5] <= _024_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [6] <= 1'h0;
      else \registers[1] [6] <= _025_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [7] <= 1'h0;
      else \registers[1] [7] <= _026_;
endmodule

(* dynports =  1  *)
(* hdlname = "core" *)
(* src = "../build/gpu.v:390.1-624.10" *)
module \$paramod$787a5da62fabe7841ceed3cf3518dd70b3e7c326\core (clk, reset, start, done, block_id, thread_count, program_mem_read_valid, program_mem_read_address, program_mem_read_ready, program_mem_read_data, data_mem_read_valid, data_mem_read_address, data_mem_read_ready, data_mem_read_data, data_mem_write_valid, data_mem_write_address, data_mem_write_ready, data_mem_write_data);
  wire _0_;
  wire _1_;
  wire _2_;
  wire _3_;
  wire _4_;
  (* src = "../build/gpu.v:442.13-442.20" *)
  wire [7:0] \alu_out[0] ;
  (* src = "../build/gpu.v:442.13-442.20" *)
  wire [7:0] \alu_out[1] ;
  (* src = "../build/gpu.v:442.13-442.20" *)
  wire [7:0] \alu_out[2] ;
  (* src = "../build/gpu.v:442.13-442.20" *)
  wire [7:0] \alu_out[3] ;
  (* src = "../build/gpu.v:419.19-419.27" *)
  input [7:0] block_id;
  wire [7:0] block_id;
  (* src = "../build/gpu.v:415.13-415.16" *)
  input clk;
  wire clk;
  (* src = "../build/gpu.v:433.12-433.22" *)
  wire [2:0] core_state;
  (* src = "../build/gpu.v:436.12-436.22" *)
  wire [7:0] current_pc;
  (* src = "../build/gpu.v:426.63-426.84" *)
  output [31:0] data_mem_read_address;
  wire [31:0] data_mem_read_address;
  (* src = "../build/gpu.v:428.62-428.80" *)
  input [31:0] data_mem_read_data;
  wire [31:0] data_mem_read_data;
  (* src = "../build/gpu.v:427.39-427.58" *)
  input [3:0] data_mem_read_ready;
  wire [3:0] data_mem_read_ready;
  (* src = "../build/gpu.v:425.40-425.59" *)
  output [3:0] data_mem_read_valid;
  wire [3:0] data_mem_read_valid;
  (* src = "../build/gpu.v:430.63-430.85" *)
  output [31:0] data_mem_write_address;
  wire [31:0] data_mem_write_address;
  (* src = "../build/gpu.v:432.63-432.82" *)
  output [31:0] data_mem_write_data;
  wire [31:0] data_mem_write_data;
  (* src = "../build/gpu.v:431.39-431.59" *)
  input [3:0] data_mem_write_ready;
  wire [3:0] data_mem_write_ready;
  (* src = "../build/gpu.v:429.40-429.60" *)
  output [3:0] data_mem_write_valid;
  wire [3:0] data_mem_write_valid;
  (* src = "../build/gpu.v:453.12-453.38" *)
  wire [1:0] decoded_alu_arithmetic_mux;
  (* src = "../build/gpu.v:454.6-454.28" *)
  wire decoded_alu_output_mux;
  (* src = "../build/gpu.v:447.12-447.29" *)
  wire [7:0] decoded_immediate;
  (* src = "../build/gpu.v:449.6-449.29" *)
  wire decoded_mem_read_enable;
  (* src = "../build/gpu.v:450.6-450.30" *)
  wire decoded_mem_write_enable;
  (* src = "../build/gpu.v:446.12-446.23" *)
  wire [2:0] decoded_nzp;
  (* src = "../build/gpu.v:451.6-451.30" *)
  wire decoded_nzp_write_enable;
  (* src = "../build/gpu.v:455.6-455.20" *)
  wire decoded_pc_mux;
  (* src = "../build/gpu.v:443.12-443.30" *)
  wire [3:0] decoded_rd_address;
  (* src = "../build/gpu.v:452.12-452.33" *)
  wire [1:0] decoded_reg_input_mux;
  (* src = "../build/gpu.v:448.6-448.30" *)
  wire decoded_reg_write_enable;
  (* src = "../build/gpu.v:456.6-456.17" *)
  wire decoded_ret;
  (* src = "../build/gpu.v:444.12-444.30" *)
  wire [3:0] decoded_rs_address;
  (* src = "../build/gpu.v:445.12-445.30" *)
  wire [3:0] decoded_rt_address;
  (* src = "../build/gpu.v:418.14-418.18" *)
  output done;
  wire done;
  (* src = "../build/gpu.v:434.12-434.25" *)
  wire [2:0] fetcher_state;
  (* src = "../build/gpu.v:435.13-435.24" *)
  wire [15:0] instruction;
  (* src = "../build/gpu.v:441.12-441.19" *)
  wire [7:0] \lsu_out[0] ;
  (* src = "../build/gpu.v:441.12-441.19" *)
  wire [7:0] \lsu_out[1] ;
  (* src = "../build/gpu.v:441.12-441.19" *)
  wire [7:0] \lsu_out[2] ;
  (* src = "../build/gpu.v:441.12-441.19" *)
  wire [7:0] \lsu_out[3] ;
  (* src = "../build/gpu.v:440.38-440.47" *)
  wire [7:0] lsu_state;
  (* src = "../build/gpu.v:437.39-437.46" *)
  wire [31:0] next_pc;
  (* src = "../build/gpu.v:422.44-422.68" *)
  output [7:0] program_mem_read_address;
  wire [7:0] program_mem_read_address;
  (* src = "../build/gpu.v:424.43-424.64" *)
  input [15:0] program_mem_read_data;
  wire [15:0] program_mem_read_data;
  (* src = "../build/gpu.v:423.19-423.41" *)
  input program_mem_read_ready;
  wire program_mem_read_ready;
  (* src = "../build/gpu.v:421.20-421.42" *)
  output program_mem_read_valid;
  wire program_mem_read_valid;
  (* src = "../build/gpu.v:416.13-416.18" *)
  input reset;
  wire reset;
  (* src = "../build/gpu.v:438.12-438.14" *)
  wire [7:0] \rs[0] ;
  (* src = "../build/gpu.v:438.12-438.14" *)
  wire [7:0] \rs[1] ;
  (* src = "../build/gpu.v:438.12-438.14" *)
  wire [7:0] \rs[2] ;
  (* src = "../build/gpu.v:438.12-438.14" *)
  wire [7:0] \rs[3] ;
  (* src = "../build/gpu.v:439.12-439.14" *)
  wire [7:0] \rt[0] ;
  (* src = "../build/gpu.v:439.12-439.14" *)
  wire [7:0] \rt[1] ;
  (* src = "../build/gpu.v:439.12-439.14" *)
  wire [7:0] \rt[2] ;
  (* src = "../build/gpu.v:439.12-439.14" *)
  wire [7:0] \rt[3] ;
  (* src = "../build/gpu.v:417.13-417.18" *)
  input start;
  wire start;
  (* src = "../build/gpu.v:496.13-496.65" *)
  wire [2:1] sv2v_tmp_decoder_instance_decoded_alu_arithmetic_mux;
  (* src = "../build/gpu.v:498.13-498.61" *)
  wire sv2v_tmp_decoder_instance_decoded_alu_output_mux;
  (* src = "../build/gpu.v:484.13-484.56" *)
  wire [8:1] sv2v_tmp_decoder_instance_decoded_immediate;
  (* src = "../build/gpu.v:488.13-488.62" *)
  wire sv2v_tmp_decoder_instance_decoded_mem_read_enable;
  (* src = "../build/gpu.v:490.13-490.63" *)
  wire sv2v_tmp_decoder_instance_decoded_mem_write_enable;
  (* src = "../build/gpu.v:482.13-482.50" *)
  wire [3:1] sv2v_tmp_decoder_instance_decoded_nzp;
  (* src = "../build/gpu.v:492.13-492.63" *)
  wire sv2v_tmp_decoder_instance_decoded_nzp_write_enable;
  (* src = "../build/gpu.v:500.13-500.53" *)
  wire sv2v_tmp_decoder_instance_decoded_pc_mux;
  (* src = "../build/gpu.v:476.13-476.57" *)
  wire [4:1] sv2v_tmp_decoder_instance_decoded_rd_address;
  (* src = "../build/gpu.v:494.13-494.60" *)
  wire [2:1] sv2v_tmp_decoder_instance_decoded_reg_input_mux;
  (* src = "../build/gpu.v:486.13-486.63" *)
  wire sv2v_tmp_decoder_instance_decoded_reg_write_enable;
  (* src = "../build/gpu.v:502.13-502.50" *)
  wire sv2v_tmp_decoder_instance_decoded_ret;
  (* src = "../build/gpu.v:478.13-478.57" *)
  wire [4:1] sv2v_tmp_decoder_instance_decoded_rs_address;
  (* src = "../build/gpu.v:480.13-480.57" *)
  wire [4:1] sv2v_tmp_decoder_instance_decoded_rt_address;
  (* src = "../build/gpu.v:457.13-457.52" *)
  wire [3:1] sv2v_tmp_fetcher_instance_fetcher_state;
  (* src = "../build/gpu.v:459.14-459.51" *)
  wire [16:1] sv2v_tmp_fetcher_instance_instruction;
  (* src = "../build/gpu.v:524.13-524.51" *)
  wire [3:1] sv2v_tmp_scheduler_instance_core_state;
  (* src = "../build/gpu.v:526.13-526.51" *)
  wire [8:1] sv2v_tmp_scheduler_instance_current_pc;
  (* src = "../build/gpu.v:420.43-420.55" *)
  input [2:0] thread_count;
  wire [2:0] thread_count;
  (* src = "../build/gpu.v:559.15-559.44" *)
  wire [8:1] \threads[0].sv2v_tmp_lsu_instance_lsu_out ;
  (* src = "../build/gpu.v:557.15-557.46" *)
  wire [2:1] \threads[0].sv2v_tmp_lsu_instance_lsu_state ;
  (* src = "../build/gpu.v:581.15-581.44" *)
  wire [8:1] \threads[0].sv2v_tmp_register_instance_rs ;
  (* src = "../build/gpu.v:583.15-583.44" *)
  wire [8:1] \threads[0].sv2v_tmp_register_instance_rt ;
  (* src = "../build/gpu.v:559.15-559.44" *)
  wire [8:1] \threads[1].sv2v_tmp_lsu_instance_lsu_out ;
  (* src = "../build/gpu.v:557.15-557.46" *)
  wire [2:1] \threads[1].sv2v_tmp_lsu_instance_lsu_state ;
  (* src = "../build/gpu.v:581.15-581.44" *)
  wire [8:1] \threads[1].sv2v_tmp_register_instance_rs ;
  (* src = "../build/gpu.v:583.15-583.44" *)
  wire [8:1] \threads[1].sv2v_tmp_register_instance_rt ;
  (* src = "../build/gpu.v:559.15-559.44" *)
  wire [8:1] \threads[2].sv2v_tmp_lsu_instance_lsu_out ;
  (* src = "../build/gpu.v:557.15-557.46" *)
  wire [2:1] \threads[2].sv2v_tmp_lsu_instance_lsu_state ;
  (* src = "../build/gpu.v:581.15-581.44" *)
  wire [8:1] \threads[2].sv2v_tmp_register_instance_rs ;
  (* src = "../build/gpu.v:583.15-583.44" *)
  wire [8:1] \threads[2].sv2v_tmp_register_instance_rt ;
  (* src = "../build/gpu.v:559.15-559.44" *)
  wire [8:1] \threads[3].sv2v_tmp_lsu_instance_lsu_out ;
  (* src = "../build/gpu.v:557.15-557.46" *)
  wire [2:1] \threads[3].sv2v_tmp_lsu_instance_lsu_state ;
  (* src = "../build/gpu.v:581.15-581.44" *)
  wire [8:1] \threads[3].sv2v_tmp_register_instance_rs ;
  (* src = "../build/gpu.v:583.15-583.44" *)
  wire [8:1] \threads[3].sv2v_tmp_register_instance_rt ;
  assign _1_ = thread_count[1] | thread_count[2];
  assign _4_ = thread_count[1] | thread_count[0];
  assign _2_ = _4_ | thread_count[2];
  assign _3_ = thread_count[1] & thread_count[0];
  assign _0_ = _3_ | thread_count[2];
  (* module_not_derived = 32'd1 *)
  (* src = "../build/gpu.v:504.10-523.3" *)
  decoder decoder_instance (
    .clk(clk),
    .core_state(core_state),
    .decoded_alu_arithmetic_mux(decoded_alu_arithmetic_mux),
    .decoded_alu_output_mux(decoded_alu_output_mux),
    .decoded_immediate(decoded_immediate),
    .decoded_mem_read_enable(decoded_mem_read_enable),
    .decoded_mem_write_enable(decoded_mem_write_enable),
    .decoded_nzp(decoded_nzp),
    .decoded_nzp_write_enable(decoded_nzp_write_enable),
    .decoded_pc_mux(decoded_pc_mux),
    .decoded_rd_address(decoded_rd_address),
    .decoded_reg_input_mux(decoded_reg_input_mux),
    .decoded_reg_write_enable(decoded_reg_write_enable),
    .decoded_ret(decoded_ret),
    .decoded_rs_address(decoded_rs_address),
    .decoded_rt_address(decoded_rt_address),
    .instruction(instruction),
    .reset(reset)
  );
  (* src = "../build/gpu.v:464.4-475.3" *)
  \$paramod$beb00772bac1a1e06ce8ff4195cf7b0af620cd82\fetcher  fetcher_instance (
    .clk(clk),
    .core_state(core_state),
    .current_pc(current_pc),
    .fetcher_state(fetcher_state),
    .instruction(instruction),
    .mem_read_address(program_mem_read_address),
    .mem_read_data(program_mem_read_data),
    .mem_read_ready(program_mem_read_ready),
    .mem_read_valid(program_mem_read_valid),
    .reset(reset)
  );
  (* src = "../build/gpu.v:528.53-541.3" *)
  \$paramod\scheduler\THREADS_PER_BLOCK=s32'00000000000000000000000000000100  scheduler_instance (
    .clk(clk),
    .core_state(core_state),
    .current_pc(current_pc),
    .decoded_mem_read_enable(decoded_mem_read_enable),
    .decoded_mem_write_enable(decoded_mem_write_enable),
    .decoded_ret(decoded_ret),
    .done(done),
    .fetcher_state(fetcher_state),
    .lsu_state({ \threads[3].sv2v_tmp_lsu_instance_lsu_state , \threads[2].sv2v_tmp_lsu_instance_lsu_state , \threads[1].sv2v_tmp_lsu_instance_lsu_state , \threads[0].sv2v_tmp_lsu_instance_lsu_state  }),
    .next_pc(next_pc),
    .reset(reset),
    .start(start)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../build/gpu.v:546.8-556.5" *)
  alu \threads[0].alu_instance  (
    .alu_out(\alu_out[0] ),
    .clk(clk),
    .core_state(core_state),
    .decoded_alu_arithmetic_mux(decoded_alu_arithmetic_mux),
    .decoded_alu_output_mux(decoded_alu_output_mux),
    .enable(_2_),
    .reset(reset),
    .rs(\threads[0].sv2v_tmp_register_instance_rs ),
    .rt(\threads[0].sv2v_tmp_register_instance_rt )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../build/gpu.v:561.8-580.5" *)
  lsu \threads[0].lsu_instance  (
    .clk(clk),
    .core_state(core_state),
    .decoded_mem_read_enable(decoded_mem_read_enable),
    .decoded_mem_write_enable(decoded_mem_write_enable),
    .enable(_2_),
    .lsu_out(\threads[0].sv2v_tmp_lsu_instance_lsu_out ),
    .lsu_state(\threads[0].sv2v_tmp_lsu_instance_lsu_state ),
    .mem_read_address(data_mem_read_address[7:0]),
    .mem_read_data(data_mem_read_data[7:0]),
    .mem_read_ready(data_mem_read_ready[0]),
    .mem_read_valid(data_mem_read_valid[0]),
    .mem_write_address(data_mem_write_address[7:0]),
    .mem_write_data(data_mem_write_data[7:0]),
    .mem_write_ready(data_mem_write_ready[0]),
    .mem_write_valid(data_mem_write_valid[0]),
    .reset(reset),
    .rs(\threads[0].sv2v_tmp_register_instance_rs ),
    .rt(\threads[0].sv2v_tmp_register_instance_rt )
  );
  (* src = "../build/gpu.v:609.6-621.5" *)
  \$paramod$443b7d7e6fa51b4925ad1f73d225e8bfd7dc6c37\pc  \threads[0].pc_instance  (
    .alu_out(\alu_out[0] ),
    .clk(clk),
    .core_state(core_state),
    .current_pc(current_pc),
    .decoded_immediate(decoded_immediate),
    .decoded_nzp(decoded_nzp),
    .decoded_nzp_write_enable(decoded_nzp_write_enable),
    .decoded_pc_mux(decoded_pc_mux),
    .enable(_2_),
    .next_pc(next_pc[7:0]),
    .reset(reset)
  );
  (* src = "../build/gpu.v:589.6-605.5" *)
  \$paramod$c5a88488bedb7a9c9866110c9eda41ee27775c76\registers  \threads[0].register_instance  (
    .alu_out(\alu_out[0] ),
    .block_id(block_id),
    .clk(clk),
    .core_state(core_state),
    .decoded_immediate(decoded_immediate),
    .decoded_rd_address(decoded_rd_address),
    .decoded_reg_input_mux(decoded_reg_input_mux),
    .decoded_reg_write_enable(decoded_reg_write_enable),
    .decoded_rs_address(decoded_rs_address),
    .decoded_rt_address(decoded_rt_address),
    .enable(_2_),
    .lsu_out(\threads[0].sv2v_tmp_lsu_instance_lsu_out ),
    .reset(reset),
    .rs(\threads[0].sv2v_tmp_register_instance_rs ),
    .rt(\threads[0].sv2v_tmp_register_instance_rt )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../build/gpu.v:546.8-556.5" *)
  alu \threads[1].alu_instance  (
    .alu_out(\alu_out[1] ),
    .clk(clk),
    .core_state(core_state),
    .decoded_alu_arithmetic_mux(decoded_alu_arithmetic_mux),
    .decoded_alu_output_mux(decoded_alu_output_mux),
    .enable(_1_),
    .reset(reset),
    .rs(\threads[1].sv2v_tmp_register_instance_rs ),
    .rt(\threads[1].sv2v_tmp_register_instance_rt )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../build/gpu.v:561.8-580.5" *)
  lsu \threads[1].lsu_instance  (
    .clk(clk),
    .core_state(core_state),
    .decoded_mem_read_enable(decoded_mem_read_enable),
    .decoded_mem_write_enable(decoded_mem_write_enable),
    .enable(_1_),
    .lsu_out(\threads[1].sv2v_tmp_lsu_instance_lsu_out ),
    .lsu_state(\threads[1].sv2v_tmp_lsu_instance_lsu_state ),
    .mem_read_address(data_mem_read_address[15:8]),
    .mem_read_data(data_mem_read_data[15:8]),
    .mem_read_ready(data_mem_read_ready[1]),
    .mem_read_valid(data_mem_read_valid[1]),
    .mem_write_address(data_mem_write_address[15:8]),
    .mem_write_data(data_mem_write_data[15:8]),
    .mem_write_ready(data_mem_write_ready[1]),
    .mem_write_valid(data_mem_write_valid[1]),
    .reset(reset),
    .rs(\threads[1].sv2v_tmp_register_instance_rs ),
    .rt(\threads[1].sv2v_tmp_register_instance_rt )
  );
  (* src = "../build/gpu.v:609.6-621.5" *)
  \$paramod$443b7d7e6fa51b4925ad1f73d225e8bfd7dc6c37\pc  \threads[1].pc_instance  (
    .alu_out(\alu_out[1] ),
    .clk(clk),
    .core_state(core_state),
    .current_pc(current_pc),
    .decoded_immediate(decoded_immediate),
    .decoded_nzp(decoded_nzp),
    .decoded_nzp_write_enable(decoded_nzp_write_enable),
    .decoded_pc_mux(decoded_pc_mux),
    .enable(_1_),
    .next_pc(next_pc[15:8]),
    .reset(reset)
  );
  (* src = "../build/gpu.v:589.6-605.5" *)
  \$paramod$d08f185179db4eb8eac8d58da9007fec10c7c29b\registers  \threads[1].register_instance  (
    .alu_out(\alu_out[1] ),
    .block_id(block_id),
    .clk(clk),
    .core_state(core_state),
    .decoded_immediate(decoded_immediate),
    .decoded_rd_address(decoded_rd_address),
    .decoded_reg_input_mux(decoded_reg_input_mux),
    .decoded_reg_write_enable(decoded_reg_write_enable),
    .decoded_rs_address(decoded_rs_address),
    .decoded_rt_address(decoded_rt_address),
    .enable(_1_),
    .lsu_out(\threads[1].sv2v_tmp_lsu_instance_lsu_out ),
    .reset(reset),
    .rs(\threads[1].sv2v_tmp_register_instance_rs ),
    .rt(\threads[1].sv2v_tmp_register_instance_rt )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../build/gpu.v:546.8-556.5" *)
  alu \threads[2].alu_instance  (
    .alu_out(\alu_out[2] ),
    .clk(clk),
    .core_state(core_state),
    .decoded_alu_arithmetic_mux(decoded_alu_arithmetic_mux),
    .decoded_alu_output_mux(decoded_alu_output_mux),
    .enable(_0_),
    .reset(reset),
    .rs(\threads[2].sv2v_tmp_register_instance_rs ),
    .rt(\threads[2].sv2v_tmp_register_instance_rt )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../build/gpu.v:561.8-580.5" *)
  lsu \threads[2].lsu_instance  (
    .clk(clk),
    .core_state(core_state),
    .decoded_mem_read_enable(decoded_mem_read_enable),
    .decoded_mem_write_enable(decoded_mem_write_enable),
    .enable(_0_),
    .lsu_out(\threads[2].sv2v_tmp_lsu_instance_lsu_out ),
    .lsu_state(\threads[2].sv2v_tmp_lsu_instance_lsu_state ),
    .mem_read_address(data_mem_read_address[23:16]),
    .mem_read_data(data_mem_read_data[23:16]),
    .mem_read_ready(data_mem_read_ready[2]),
    .mem_read_valid(data_mem_read_valid[2]),
    .mem_write_address(data_mem_write_address[23:16]),
    .mem_write_data(data_mem_write_data[23:16]),
    .mem_write_ready(data_mem_write_ready[2]),
    .mem_write_valid(data_mem_write_valid[2]),
    .reset(reset),
    .rs(\threads[2].sv2v_tmp_register_instance_rs ),
    .rt(\threads[2].sv2v_tmp_register_instance_rt )
  );
  (* src = "../build/gpu.v:609.6-621.5" *)
  \$paramod$443b7d7e6fa51b4925ad1f73d225e8bfd7dc6c37\pc  \threads[2].pc_instance  (
    .alu_out(\alu_out[2] ),
    .clk(clk),
    .core_state(core_state),
    .current_pc(current_pc),
    .decoded_immediate(decoded_immediate),
    .decoded_nzp(decoded_nzp),
    .decoded_nzp_write_enable(decoded_nzp_write_enable),
    .decoded_pc_mux(decoded_pc_mux),
    .enable(_0_),
    .next_pc(next_pc[23:16]),
    .reset(reset)
  );
  (* src = "../build/gpu.v:589.6-605.5" *)
  \$paramod$a747760de5c733b6f88bb63119f261e23521a1b9\registers  \threads[2].register_instance  (
    .alu_out(\alu_out[2] ),
    .block_id(block_id),
    .clk(clk),
    .core_state(core_state),
    .decoded_immediate(decoded_immediate),
    .decoded_rd_address(decoded_rd_address),
    .decoded_reg_input_mux(decoded_reg_input_mux),
    .decoded_reg_write_enable(decoded_reg_write_enable),
    .decoded_rs_address(decoded_rs_address),
    .decoded_rt_address(decoded_rt_address),
    .enable(_0_),
    .lsu_out(\threads[2].sv2v_tmp_lsu_instance_lsu_out ),
    .reset(reset),
    .rs(\threads[2].sv2v_tmp_register_instance_rs ),
    .rt(\threads[2].sv2v_tmp_register_instance_rt )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../build/gpu.v:546.8-556.5" *)
  alu \threads[3].alu_instance  (
    .alu_out(\alu_out[3] ),
    .clk(clk),
    .core_state(core_state),
    .decoded_alu_arithmetic_mux(decoded_alu_arithmetic_mux),
    .decoded_alu_output_mux(decoded_alu_output_mux),
    .enable(thread_count[2]),
    .reset(reset),
    .rs(\threads[3].sv2v_tmp_register_instance_rs ),
    .rt(\threads[3].sv2v_tmp_register_instance_rt )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../build/gpu.v:561.8-580.5" *)
  lsu \threads[3].lsu_instance  (
    .clk(clk),
    .core_state(core_state),
    .decoded_mem_read_enable(decoded_mem_read_enable),
    .decoded_mem_write_enable(decoded_mem_write_enable),
    .enable(thread_count[2]),
    .lsu_out(\threads[3].sv2v_tmp_lsu_instance_lsu_out ),
    .lsu_state(\threads[3].sv2v_tmp_lsu_instance_lsu_state ),
    .mem_read_address(data_mem_read_address[31:24]),
    .mem_read_data(data_mem_read_data[31:24]),
    .mem_read_ready(data_mem_read_ready[3]),
    .mem_read_valid(data_mem_read_valid[3]),
    .mem_write_address(data_mem_write_address[31:24]),
    .mem_write_data(data_mem_write_data[31:24]),
    .mem_write_ready(data_mem_write_ready[3]),
    .mem_write_valid(data_mem_write_valid[3]),
    .reset(reset),
    .rs(\threads[3].sv2v_tmp_register_instance_rs ),
    .rt(\threads[3].sv2v_tmp_register_instance_rt )
  );
  (* src = "../build/gpu.v:609.6-621.5" *)
  \$paramod$443b7d7e6fa51b4925ad1f73d225e8bfd7dc6c37\pc  \threads[3].pc_instance  (
    .alu_out(\alu_out[3] ),
    .clk(clk),
    .core_state(core_state),
    .current_pc(current_pc),
    .decoded_immediate(decoded_immediate),
    .decoded_nzp(decoded_nzp),
    .decoded_nzp_write_enable(decoded_nzp_write_enable),
    .decoded_pc_mux(decoded_pc_mux),
    .enable(thread_count[2]),
    .next_pc(next_pc[31:24]),
    .reset(reset)
  );
  (* src = "../build/gpu.v:589.6-605.5" *)
  \$paramod$570077e6b96415b4d92362103cebadbad9f2b201\registers  \threads[3].register_instance  (
    .alu_out(\alu_out[3] ),
    .block_id(block_id),
    .clk(clk),
    .core_state(core_state),
    .decoded_immediate(decoded_immediate),
    .decoded_rd_address(decoded_rd_address),
    .decoded_reg_input_mux(decoded_reg_input_mux),
    .decoded_reg_write_enable(decoded_reg_write_enable),
    .decoded_rs_address(decoded_rs_address),
    .decoded_rt_address(decoded_rt_address),
    .enable(thread_count[2]),
    .lsu_out(\threads[3].sv2v_tmp_lsu_instance_lsu_out ),
    .reset(reset),
    .rs(\threads[3].sv2v_tmp_register_instance_rs ),
    .rt(\threads[3].sv2v_tmp_register_instance_rt )
  );
  assign \lsu_out[0]  = \threads[0].sv2v_tmp_lsu_instance_lsu_out ;
  assign \lsu_out[1]  = \threads[1].sv2v_tmp_lsu_instance_lsu_out ;
  assign \lsu_out[2]  = \threads[2].sv2v_tmp_lsu_instance_lsu_out ;
  assign \lsu_out[3]  = \threads[3].sv2v_tmp_lsu_instance_lsu_out ;
  assign lsu_state = { \threads[3].sv2v_tmp_lsu_instance_lsu_state , \threads[2].sv2v_tmp_lsu_instance_lsu_state , \threads[1].sv2v_tmp_lsu_instance_lsu_state , \threads[0].sv2v_tmp_lsu_instance_lsu_state  };
  assign \rs[0]  = \threads[0].sv2v_tmp_register_instance_rs ;
  assign \rs[1]  = \threads[1].sv2v_tmp_register_instance_rs ;
  assign \rs[2]  = \threads[2].sv2v_tmp_register_instance_rs ;
  assign \rs[3]  = \threads[3].sv2v_tmp_register_instance_rs ;
  assign \rt[0]  = \threads[0].sv2v_tmp_register_instance_rt ;
  assign \rt[1]  = \threads[1].sv2v_tmp_register_instance_rt ;
  assign \rt[2]  = \threads[2].sv2v_tmp_register_instance_rt ;
  assign \rt[3]  = \threads[3].sv2v_tmp_register_instance_rt ;
  assign sv2v_tmp_decoder_instance_decoded_alu_arithmetic_mux = decoded_alu_arithmetic_mux;
  assign sv2v_tmp_decoder_instance_decoded_alu_output_mux = decoded_alu_output_mux;
  assign sv2v_tmp_decoder_instance_decoded_immediate = decoded_immediate;
  assign sv2v_tmp_decoder_instance_decoded_mem_read_enable = decoded_mem_read_enable;
  assign sv2v_tmp_decoder_instance_decoded_mem_write_enable = decoded_mem_write_enable;
  assign sv2v_tmp_decoder_instance_decoded_nzp = decoded_nzp;
  assign sv2v_tmp_decoder_instance_decoded_nzp_write_enable = decoded_nzp_write_enable;
  assign sv2v_tmp_decoder_instance_decoded_pc_mux = decoded_pc_mux;
  assign sv2v_tmp_decoder_instance_decoded_rd_address = decoded_rd_address;
  assign sv2v_tmp_decoder_instance_decoded_reg_input_mux = decoded_reg_input_mux;
  assign sv2v_tmp_decoder_instance_decoded_reg_write_enable = decoded_reg_write_enable;
  assign sv2v_tmp_decoder_instance_decoded_ret = decoded_ret;
  assign sv2v_tmp_decoder_instance_decoded_rs_address = decoded_rs_address;
  assign sv2v_tmp_decoder_instance_decoded_rt_address = decoded_rt_address;
  assign sv2v_tmp_fetcher_instance_fetcher_state = fetcher_state;
  assign sv2v_tmp_fetcher_instance_instruction = instruction;
  assign sv2v_tmp_scheduler_instance_core_state = core_state;
  assign sv2v_tmp_scheduler_instance_current_pc = current_pc;
endmodule

(* dynports =  1  *)
(* hdlname = "ducttape2cores" *)
(* src = "../build/gpu.v:853.1-982.10" *)
module \$paramod$787a5da62fabe7841ceed3cf3518dd70b3e7c326\ducttape2cores (clk, reset, start, done, block_id, thread_count, program_mem_read_valid, program_mem_read_address, program_mem_read_ready, program_mem_read_data, data_mem_read_valid, data_mem_read_address, data_mem_read_ready, data_mem_read_data, data_mem_write_valid, data_mem_write_address, data_mem_write_ready, data_mem_write_data, reset_2, start_2, done_2
, block_id_2, thread_count_2, program_mem_2_read_valid, program_mem_2_read_address, program_mem_2_read_ready, program_mem_2_read_data, data_mem_2_read_valid, data_mem_2_read_address, data_mem_2_read_ready, data_mem_2_read_data, data_mem_2_write_valid, data_mem_2_write_address, data_mem_2_write_ready, data_mem_2_write_data);
  (* src = "../build/gpu.v:899.19-899.27" *)
  input [7:0] block_id;
  wire [7:0] block_id;
  (* src = "../build/gpu.v:916.19-916.29" *)
  input [7:0] block_id_2;
  wire [7:0] block_id_2;
  (* src = "../build/gpu.v:895.13-895.16" *)
  input clk;
  wire clk;
  (* src = "../build/gpu.v:923.63-923.86" *)
  output [31:0] data_mem_2_read_address;
  wire [31:0] data_mem_2_read_address;
  (* src = "../build/gpu.v:925.62-925.82" *)
  input [31:0] data_mem_2_read_data;
  wire [31:0] data_mem_2_read_data;
  (* src = "../build/gpu.v:924.39-924.60" *)
  input [3:0] data_mem_2_read_ready;
  wire [3:0] data_mem_2_read_ready;
  (* src = "../build/gpu.v:922.40-922.61" *)
  output [3:0] data_mem_2_read_valid;
  wire [3:0] data_mem_2_read_valid;
  (* src = "../build/gpu.v:927.63-927.87" *)
  output [31:0] data_mem_2_write_address;
  wire [31:0] data_mem_2_write_address;
  (* src = "../build/gpu.v:929.63-929.84" *)
  output [31:0] data_mem_2_write_data;
  wire [31:0] data_mem_2_write_data;
  (* src = "../build/gpu.v:928.39-928.61" *)
  input [3:0] data_mem_2_write_ready;
  wire [3:0] data_mem_2_write_ready;
  (* src = "../build/gpu.v:926.40-926.62" *)
  output [3:0] data_mem_2_write_valid;
  wire [3:0] data_mem_2_write_valid;
  (* src = "../build/gpu.v:906.63-906.84" *)
  output [31:0] data_mem_read_address;
  wire [31:0] data_mem_read_address;
  (* src = "../build/gpu.v:908.62-908.80" *)
  input [31:0] data_mem_read_data;
  wire [31:0] data_mem_read_data;
  (* src = "../build/gpu.v:907.39-907.58" *)
  input [3:0] data_mem_read_ready;
  wire [3:0] data_mem_read_ready;
  (* src = "../build/gpu.v:905.40-905.59" *)
  output [3:0] data_mem_read_valid;
  wire [3:0] data_mem_read_valid;
  (* src = "../build/gpu.v:910.63-910.85" *)
  output [31:0] data_mem_write_address;
  wire [31:0] data_mem_write_address;
  (* src = "../build/gpu.v:912.63-912.82" *)
  output [31:0] data_mem_write_data;
  wire [31:0] data_mem_write_data;
  (* src = "../build/gpu.v:911.39-911.59" *)
  input [3:0] data_mem_write_ready;
  wire [3:0] data_mem_write_ready;
  (* src = "../build/gpu.v:909.40-909.60" *)
  output [3:0] data_mem_write_valid;
  wire [3:0] data_mem_write_valid;
  (* src = "../build/gpu.v:898.14-898.18" *)
  output done;
  wire done;
  (* src = "../build/gpu.v:915.14-915.20" *)
  output done_2;
  wire done_2;
  (* src = "../build/gpu.v:919.44-919.70" *)
  output [7:0] program_mem_2_read_address;
  wire [7:0] program_mem_2_read_address;
  (* src = "../build/gpu.v:921.43-921.66" *)
  input [15:0] program_mem_2_read_data;
  wire [15:0] program_mem_2_read_data;
  (* src = "../build/gpu.v:920.19-920.43" *)
  input program_mem_2_read_ready;
  wire program_mem_2_read_ready;
  (* src = "../build/gpu.v:918.20-918.44" *)
  output program_mem_2_read_valid;
  wire program_mem_2_read_valid;
  (* src = "../build/gpu.v:902.44-902.68" *)
  output [7:0] program_mem_read_address;
  wire [7:0] program_mem_read_address;
  (* src = "../build/gpu.v:904.43-904.64" *)
  input [15:0] program_mem_read_data;
  wire [15:0] program_mem_read_data;
  (* src = "../build/gpu.v:903.19-903.41" *)
  input program_mem_read_ready;
  wire program_mem_read_ready;
  (* src = "../build/gpu.v:901.20-901.42" *)
  output program_mem_read_valid;
  wire program_mem_read_valid;
  (* src = "../build/gpu.v:896.13-896.18" *)
  input reset;
  wire reset;
  (* src = "../build/gpu.v:913.13-913.20" *)
  input reset_2;
  wire reset_2;
  (* src = "../build/gpu.v:897.13-897.18" *)
  input start;
  wire start;
  (* src = "../build/gpu.v:914.13-914.20" *)
  input start_2;
  wire start_2;
  (* src = "../build/gpu.v:900.43-900.55" *)
  input [2:0] thread_count;
  wire [2:0] thread_count;
  (* src = "../build/gpu.v:917.43-917.57" *)
  input [2:0] thread_count_2;
  wire [2:0] thread_count_2;
  (* src = "../build/gpu.v:936.4-955.3" *)
  \$paramod$787a5da62fabe7841ceed3cf3518dd70b3e7c326\core  inner_core_instance_1 (
    .block_id(block_id),
    .clk(clk),
    .data_mem_read_address(data_mem_read_address),
    .data_mem_read_data(data_mem_read_data),
    .data_mem_read_ready(data_mem_read_ready),
    .data_mem_read_valid(data_mem_read_valid),
    .data_mem_write_address(data_mem_write_address),
    .data_mem_write_data(data_mem_write_data),
    .data_mem_write_ready(data_mem_write_ready),
    .data_mem_write_valid(data_mem_write_valid),
    .done(done),
    .program_mem_read_address(program_mem_read_address),
    .program_mem_read_data(program_mem_read_data),
    .program_mem_read_ready(program_mem_read_ready),
    .program_mem_read_valid(program_mem_read_valid),
    .reset(reset),
    .start(start),
    .thread_count(thread_count)
  );
  (* src = "../build/gpu.v:962.4-981.3" *)
  \$paramod$787a5da62fabe7841ceed3cf3518dd70b3e7c326\core  inner_core_instance_2 (
    .block_id(block_id_2),
    .clk(clk),
    .data_mem_read_address(data_mem_2_read_address),
    .data_mem_read_data(data_mem_2_read_data),
    .data_mem_read_ready(data_mem_2_read_ready),
    .data_mem_read_valid(data_mem_2_read_valid),
    .data_mem_write_address(data_mem_2_write_address),
    .data_mem_write_data(data_mem_2_write_data),
    .data_mem_write_ready(data_mem_2_write_ready),
    .data_mem_write_valid(data_mem_2_write_valid),
    .done(done_2),
    .program_mem_read_address(program_mem_2_read_address),
    .program_mem_read_data(program_mem_2_read_data),
    .program_mem_read_ready(program_mem_2_read_ready),
    .program_mem_read_valid(program_mem_2_read_valid),
    .reset(reset_2),
    .start(start_2),
    .thread_count(thread_count_2)
  );
endmodule

(* dynports =  1  *)
(* hdlname = "dispatch" *)
(* src = "../build/gpu.v:771.1-851.10" *)
module \$paramod$7b6d06001638ea57df1f39f9a8db092ea6b39b0a\dispatch (clk, reset, start, thread_count, core_done, core_start, core_reset, core_block_id, core_thread_count, done);
  (* src = "../build/gpu.v:800.2-850.6" *)
  wire [7:0] _000_;
  (* src = "../build/gpu.v:800.2-850.6" *)
  wire [7:0] _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  wire _264_;
  wire _265_;
  wire _266_;
  wire _267_;
  wire _268_;
  wire _269_;
  wire _270_;
  wire _271_;
  wire _272_;
  wire _273_;
  wire _274_;
  wire _275_;
  wire _276_;
  wire _277_;
  wire _278_;
  wire _279_;
  wire _280_;
  wire _281_;
  wire _282_;
  wire _283_;
  wire _284_;
  wire _285_;
  wire _286_;
  wire _287_;
  wire _288_;
  wire _289_;
  wire _290_;
  (* src = "../build/gpu.v:836.299-836.415" *)
  wire _291_;
  (* src = "../build/gpu.v:836.299-836.415" *)
  wire _292_;
  (* src = "../build/gpu.v:836.299-836.415" *)
  wire _293_;
  (* src = "../build/gpu.v:836.299-836.415" *)
  wire _294_;
  (* src = "../build/gpu.v:836.299-836.415" *)
  wire _295_;
  (* src = "../build/gpu.v:836.299-836.415" *)
  wire _296_;
  (* force_downto = 32'd1 *)
  (* src = "../build/gpu.v:833.11-833.43|/usr/bin/../share/yosys/techmap.v:266.22-266.23" *)
  wire [7:0] _297_;
  (* src = "../build/gpu.v:797.12-797.29" *)
  reg [7:0] blocks_dispatched;
  (* src = "../build/gpu.v:798.12-798.23" *)
  reg [7:0] blocks_done;
  (* src = "../build/gpu.v:785.13-785.16" *)
  input clk;
  wire clk;
  (* src = "../build/gpu.v:792.45-792.58" *)
  output [15:0] core_block_id;
  reg [15:0] core_block_id;
  (* src = "../build/gpu.v:789.39-789.48" *)
  input [1:0] core_done;
  wire [1:0] core_done;
  (* src = "../build/gpu.v:791.39-791.49" *)
  output [1:0] core_reset;
  reg [1:0] core_reset;
  (* src = "../build/gpu.v:790.39-790.49" *)
  output [1:0] core_start;
  reg [1:0] core_start;
  (* src = "../build/gpu.v:793.267-793.284" *)
  output [5:0] core_thread_count;
  reg [5:0] core_thread_count;
  (* src = "../build/gpu.v:794.13-794.17" *)
  output done;
  reg done;
  (* src = "../build/gpu.v:786.13-786.18" *)
  input reset;
  wire reset;
  (* src = "../build/gpu.v:787.13-787.18" *)
  input start;
  wire start;
  (* src = "../build/gpu.v:799.6-799.21" *)
  reg start_execution;
  (* src = "../build/gpu.v:788.19-788.31" *)
  input [7:0] thread_count;
  wire [7:0] thread_count;
  (* src = "../build/gpu.v:795.13-795.25" *)
  (* unused_bits = "0 1 2 3 4 5 6" *)
  wire [7:0] total_blocks;
  assign _259_ = ~core_reset[0];
  assign _260_ = ~blocks_dispatched[7];
  assign _261_ = ~blocks_dispatched[6];
  assign _262_ = blocks_dispatched[5] & blocks_dispatched[4];
  assign _263_ = blocks_dispatched[3] & blocks_dispatched[2];
  assign _264_ = blocks_dispatched[1] & blocks_dispatched[0];
  assign _265_ = _264_ & _263_;
  assign _266_ = _265_ & _262_;
  assign _267_ = _266_ & ~(_261_);
  assign _268_ = _267_ ^ _260_;
  assign _269_ = ~_268_;
  assign _270_ = thread_count[7] & thread_count[6];
  assign _271_ = ~(thread_count[5] & thread_count[4]);
  assign _272_ = _270_ & ~(_271_);
  assign _273_ = ~(thread_count[3] & thread_count[2]);
  assign _274_ = ~(thread_count[0] | thread_count[1]);
  assign _275_ = _274_ | _273_;
  assign _276_ = _272_ & ~(_275_);
  assign _277_ = ~(_276_ & _261_);
  assign _278_ = _277_ | blocks_dispatched[7];
  assign _279_ = _276_ ^ blocks_dispatched[6];
  assign _280_ = _260_ & ~(_279_);
  assign _281_ = ~thread_count[6];
  assign _282_ = ~(_275_ | _271_);
  assign _283_ = _282_ & ~(_281_);
  assign _284_ = ~(_283_ ^ thread_count[7]);
  assign _285_ = _284_ | blocks_dispatched[5];
  assign _286_ = ~blocks_dispatched[5];
  assign _007_ = _284_ ^ _286_;
  assign _008_ = ~blocks_dispatched[4];
  assign _009_ = _282_ ^ _281_;
  assign _010_ = _008_ & ~(_009_);
  assign _011_ = _010_ & ~(_007_);
  assign _012_ = _285_ & ~(_011_);
  assign _013_ = _280_ & ~(_012_);
  assign _014_ = _278_ & ~(_013_);
  assign _015_ = _009_ ^ _008_;
  assign _016_ = _015_ | _007_;
  assign _017_ = _280_ & ~(_016_);
  assign _018_ = thread_count[4] & ~(_275_);
  assign _019_ = ~(_018_ ^ thread_count[5]);
  assign _020_ = _019_ | blocks_dispatched[3];
  assign _021_ = _019_ ^ blocks_dispatched[3];
  assign _022_ = _275_ ^ thread_count[4];
  assign _023_ = _022_ | blocks_dispatched[2];
  assign _024_ = _021_ & ~(_023_);
  assign _025_ = _020_ & ~(_024_);
  assign _026_ = ~blocks_dispatched[2];
  assign _027_ = _022_ ^ _026_;
  assign _028_ = _027_ | ~(_021_);
  assign _029_ = thread_count[2] & ~(_274_);
  assign _030_ = ~(_029_ ^ thread_count[3]);
  assign _031_ = _030_ | blocks_dispatched[1];
  assign _032_ = ~blocks_dispatched[1];
  assign _033_ = _030_ ^ _032_;
  assign _034_ = ~blocks_dispatched[0];
  assign _035_ = ~thread_count[2];
  assign _036_ = _274_ ^ _035_;
  assign _037_ = _036_ | _034_;
  assign _038_ = _037_ & ~(_033_);
  assign _039_ = _038_ | ~(_031_);
  assign _040_ = _039_ & ~(_028_);
  assign _041_ = _025_ & ~(_040_);
  assign _042_ = _017_ & ~(_041_);
  assign _043_ = _014_ & ~(_042_);
  assign _044_ = _036_ ^ blocks_dispatched[0];
  assign _045_ = _044_ | _033_;
  assign _046_ = _045_ | _028_;
  assign _047_ = _017_ & ~(_046_);
  assign _048_ = _047_ | _043_;
  assign _049_ = _048_ ? blocks_dispatched[7] : _269_;
  assign _297_[7] = core_reset[0] ? _049_ : blocks_dispatched[7];
  assign _050_ = core_done[0] & core_start[0];
  assign _051_ = _259_ & ~(_050_);
  assign _052_ = start & ~(_051_);
  assign _288_ = ~_050_;
  assign _053_ = ~(_048_ & core_reset[0]);
  assign _054_ = _288_ & ~(_053_);
  assign _004_ = _052_ & ~(_054_);
  assign _055_ = ~(start & core_reset[0]);
  assign _002_ = ~(_055_ | _048_);
  assign _056_ = start & core_reset[1];
  assign _057_ = ~_276_;
  assign _058_ = _266_ ^ _261_;
  assign _059_ = _048_ ? _261_ : _058_;
  assign _060_ = core_reset[0] ? _059_ : _261_;
  assign _061_ = _057_ & ~(_060_);
  assign _062_ = _061_ | _297_[7];
  assign _063_ = _060_ ^ _276_;
  assign _064_ = _063_ & ~(_297_[7]);
  assign _065_ = _265_ & ~(_008_);
  assign _066_ = _065_ ^ _286_;
  assign _067_ = _048_ ? _286_ : _066_;
  assign _068_ = core_reset[0] ? _067_ : _286_;
  assign _069_ = _068_ | ~(_284_);
  assign _070_ = _068_ ^ _284_;
  assign _071_ = _265_ ^ _008_;
  assign _072_ = _048_ ? _008_ : _071_;
  assign _073_ = core_reset[0] ? _072_ : _008_;
  assign _074_ = _009_ & ~(_073_);
  assign _075_ = _074_ & ~(_070_);
  assign _076_ = _069_ & ~(_075_);
  assign _077_ = _064_ & ~(_076_);
  assign _078_ = _077_ | _062_;
  assign _079_ = _073_ ^ _009_;
  assign _080_ = _079_ | _070_;
  assign _081_ = _064_ & ~(_080_);
  assign _082_ = ~_019_;
  assign _083_ = ~blocks_dispatched[3];
  assign _084_ = _264_ & ~(_026_);
  assign _085_ = _084_ ^ _083_;
  assign _086_ = _048_ ? _083_ : _085_;
  assign _087_ = core_reset[0] ? _086_ : _083_;
  assign _088_ = _087_ | _082_;
  assign _089_ = _087_ ^ _082_;
  assign _090_ = ~_022_;
  assign _091_ = _264_ ^ _026_;
  assign _092_ = _048_ ? _026_ : _091_;
  assign _093_ = core_reset[0] ? _092_ : _026_;
  assign _094_ = _093_ | _090_;
  assign _095_ = _089_ & ~(_094_);
  assign _096_ = _088_ & ~(_095_);
  assign _097_ = _093_ ^ _022_;
  assign _098_ = _089_ & ~(_097_);
  assign _099_ = ~_030_;
  assign _100_ = ~(blocks_dispatched[1] ^ blocks_dispatched[0]);
  assign _101_ = _048_ ? _032_ : _100_;
  assign _102_ = core_reset[0] ? _101_ : _032_;
  assign _103_ = _102_ | _099_;
  assign _104_ = _102_ ^ _099_;
  assign _105_ = _048_ ^ _034_;
  assign _297_[0] = core_reset[0] ? _105_ : blocks_dispatched[0];
  assign _106_ = _036_ & ~(_297_[0]);
  assign _107_ = _104_ & ~(_106_);
  assign _108_ = _103_ & ~(_107_);
  assign _109_ = _098_ & ~(_108_);
  assign _110_ = _096_ & ~(_109_);
  assign _111_ = _081_ & ~(_110_);
  assign _112_ = _111_ | _078_;
  assign _003_ = _056_ & ~(_112_);
  assign _113_ = ~core_reset[1];
  assign _114_ = core_done[1] & core_start[1];
  assign _115_ = _113_ & ~(_114_);
  assign _116_ = start & ~(_115_);
  assign _290_ = ~_114_;
  assign _117_ = ~(_112_ & core_reset[1]);
  assign _118_ = _290_ & ~(_117_);
  assign _005_ = _116_ & ~(_118_);
  assign _119_ = _036_ ^ blocks_done[0];
  assign _120_ = ~blocks_done[1];
  assign _121_ = _030_ ^ _120_;
  assign _122_ = _121_ | _119_;
  assign _123_ = ~blocks_done[2];
  assign _124_ = _022_ ^ _123_;
  assign _125_ = ~blocks_done[3];
  assign _126_ = _019_ ^ _125_;
  assign _127_ = _126_ | _124_;
  assign _128_ = _127_ | _122_;
  assign _129_ = ~blocks_done[4];
  assign _130_ = _009_ ^ _129_;
  assign _131_ = ~blocks_done[5];
  assign _132_ = _284_ ^ _131_;
  assign _133_ = _132_ | _130_;
  assign _134_ = _276_ ^ blocks_done[6];
  assign _135_ = _134_ | blocks_done[7];
  assign _136_ = _135_ | _133_;
  assign _137_ = _136_ | _128_;
  assign _006_ = start & ~(_137_);
  assign _138_ = ~(_036_ ^ _030_);
  assign _139_ = _138_ ^ blocks_dispatched[1];
  assign _140_ = ~(_139_ & _044_);
  assign _141_ = _030_ & ~(_036_);
  assign _142_ = _141_ ^ _022_;
  assign _143_ = _142_ ^ _026_;
  assign _144_ = _141_ & ~(_090_);
  assign _145_ = _144_ ^ _019_;
  assign _146_ = _145_ ^ _083_;
  assign _147_ = _146_ | _143_;
  assign _148_ = _147_ | _140_;
  assign _149_ = _019_ & ~(_090_);
  assign _150_ = _149_ & ~(_141_);
  assign _151_ = _149_ & ~(_150_);
  assign _152_ = _151_ ^ _009_;
  assign _153_ = _152_ ^ _008_;
  assign _154_ = _151_ & _009_;
  assign _155_ = _154_ ^ _284_;
  assign _156_ = _155_ ^ _286_;
  assign _157_ = _156_ | _153_;
  assign _158_ = ~(_009_ & _284_);
  assign _159_ = ~(_158_ | _151_);
  assign _160_ = ~(_159_ | _158_);
  assign _161_ = _160_ ^ _057_;
  assign _162_ = _161_ ^ _261_;
  assign _163_ = _160_ & ~(_276_);
  assign _164_ = _163_ ^ blocks_dispatched[7];
  assign _165_ = _164_ | _162_;
  assign _166_ = _165_ | _157_;
  assign _167_ = _166_ | _148_;
  assign _168_ = _057_ & ~(_158_);
  assign _169_ = _168_ & ~(_151_);
  assign _170_ = _168_ & ~(_169_);
  assign _171_ = _170_ | _167_;
  assign _291_ = thread_count[0] & ~(_171_);
  assign _292_ = thread_count[1] & ~(_171_);
  assign _172_ = thread_count[2] ^ blocks_dispatched[0];
  assign _293_ = _172_ | _171_;
  assign _173_ = ~(_297_[0] ^ _036_);
  assign _174_ = _138_ ^ _102_;
  assign _175_ = _174_ | _173_;
  assign _176_ = _142_ ^ _093_;
  assign _177_ = _145_ ^ _087_;
  assign _178_ = _177_ | _176_;
  assign _179_ = _178_ | _175_;
  assign _180_ = _152_ ^ _073_;
  assign _181_ = _155_ ^ _068_;
  assign _182_ = _181_ | _180_;
  assign _183_ = _161_ ^ _060_;
  assign _184_ = _163_ ^ _297_[7];
  assign _185_ = _184_ | _183_;
  assign _186_ = _185_ | _182_;
  assign _187_ = _186_ | _179_;
  assign _188_ = _187_ | _170_;
  assign _294_ = thread_count[0] & ~(_188_);
  assign _295_ = thread_count[1] & ~(_188_);
  assign _189_ = _297_[0] ^ thread_count[2];
  assign _296_ = _189_ | _188_;
  assign _190_ = ~(_050_ ^ blocks_done[0]);
  assign _000_[0] = _190_ ^ _290_;
  assign _191_ = ~(blocks_done[1] ^ blocks_done[0]);
  assign _192_ = _050_ ? _191_ : _120_;
  assign _193_ = ~_192_;
  assign _194_ = _192_ ^ _190_;
  assign _000_[1] = _114_ ? _194_ : _193_;
  assign _195_ = blocks_done[1] & blocks_done[0];
  assign _196_ = _195_ ^ _123_;
  assign _197_ = _050_ ? _196_ : _123_;
  assign _198_ = ~_197_;
  assign _199_ = ~(_192_ | _190_);
  assign _200_ = ~(_199_ ^ _197_);
  assign _000_[2] = _114_ ? _200_ : _198_;
  assign _201_ = _195_ & ~(_123_);
  assign _202_ = _201_ ^ _125_;
  assign _203_ = _050_ ? _202_ : _125_;
  assign _204_ = ~_203_;
  assign _205_ = _197_ | ~(_199_);
  assign _206_ = _205_ ^ _203_;
  assign _000_[3] = _114_ ? _206_ : _204_;
  assign _207_ = ~(blocks_done[3] & blocks_done[2]);
  assign _208_ = _195_ & ~(_207_);
  assign _209_ = _208_ ^ _129_;
  assign _210_ = _050_ ? _209_ : _129_;
  assign _211_ = ~_210_;
  assign _212_ = _203_ | _197_;
  assign _213_ = _199_ & ~(_212_);
  assign _214_ = _213_ ^ _211_;
  assign _000_[4] = _114_ ? _214_ : _211_;
  assign _215_ = _208_ & ~(_129_);
  assign _216_ = _215_ ^ _131_;
  assign _217_ = _050_ ? _216_ : _131_;
  assign _218_ = ~_217_;
  assign _219_ = _213_ & ~(_210_);
  assign _220_ = _219_ ^ _218_;
  assign _000_[5] = _114_ ? _220_ : _218_;
  assign _221_ = ~(blocks_done[5] & blocks_done[4]);
  assign _222_ = _208_ & ~(_221_);
  assign _223_ = _222_ ^ blocks_done[6];
  assign _224_ = _050_ ? _223_ : blocks_done[6];
  assign _225_ = _217_ | _210_;
  assign _226_ = _213_ & ~(_225_);
  assign _227_ = _226_ ^ _224_;
  assign _000_[6] = _114_ ? _227_ : _224_;
  assign _228_ = _222_ & blocks_done[6];
  assign _229_ = _228_ ^ blocks_done[7];
  assign _230_ = _050_ ? _229_ : blocks_done[7];
  assign _231_ = _226_ & _224_;
  assign _232_ = _231_ ^ _230_;
  assign _000_[7] = _114_ ? _232_ : _230_;
  assign _297_[1] = ~_102_;
  assign _297_[2] = ~_093_;
  assign _297_[3] = ~_087_;
  assign _297_[4] = ~_073_;
  assign _297_[5] = ~_068_;
  assign _297_[6] = ~_060_;
  assign _233_ = ~_297_[0];
  assign _234_ = _112_ ^ _233_;
  assign _001_[0] = core_reset[1] ? _234_ : _297_[0];
  assign _235_ = ~(_297_[0] ^ _102_);
  assign _236_ = _112_ ? _297_[1] : _235_;
  assign _001_[1] = core_reset[1] ? _236_ : _297_[1];
  assign _237_ = _297_[0] & ~(_102_);
  assign _238_ = _237_ ^ _297_[2];
  assign _239_ = _112_ ? _297_[2] : _238_;
  assign _001_[2] = core_reset[1] ? _239_ : _297_[2];
  assign _240_ = _237_ & ~(_093_);
  assign _241_ = _240_ ^ _297_[3];
  assign _242_ = _112_ ? _297_[3] : _241_;
  assign _001_[3] = core_reset[1] ? _242_ : _297_[3];
  assign _243_ = _093_ | _087_;
  assign _244_ = _237_ & ~(_243_);
  assign _245_ = _244_ ^ _297_[4];
  assign _246_ = _112_ ? _297_[4] : _245_;
  assign _001_[4] = core_reset[1] ? _246_ : _297_[4];
  assign _247_ = _244_ & ~(_073_);
  assign _248_ = _247_ ^ _297_[5];
  assign _249_ = _112_ ? _297_[5] : _248_;
  assign _001_[5] = core_reset[1] ? _249_ : _297_[5];
  assign _250_ = ~(_073_ | _068_);
  assign _251_ = ~(_250_ & _244_);
  assign _252_ = _251_ ^ _060_;
  assign _253_ = _112_ ? _297_[6] : _252_;
  assign _001_[6] = core_reset[1] ? _253_ : _297_[6];
  assign _254_ = _297_[6] & ~(_251_);
  assign _255_ = _254_ ^ _297_[7];
  assign _256_ = _112_ ? _297_[7] : _255_;
  assign _001_[7] = core_reset[1] ? _256_ : _297_[7];
  assign _257_ = ~(start_execution | core_reset[0]);
  assign _287_ = _257_ | _050_;
  assign _258_ = ~(start_execution | core_reset[1]);
  assign _289_ = _258_ | _114_;
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_thread_count[3] <= 1'h0;
    else if (_003_) core_thread_count[3] <= _294_;
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_thread_count[4] <= 1'h0;
    else if (_003_) core_thread_count[4] <= _295_;
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_thread_count[5] <= 1'h1;
    else if (_003_) core_thread_count[5] <= _296_;
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_block_id[8] <= 1'h0;
    else if (_003_) core_block_id[8] <= _297_[0];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_block_id[9] <= 1'h0;
    else if (_003_) core_block_id[9] <= _297_[1];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_block_id[10] <= 1'h0;
    else if (_003_) core_block_id[10] <= _297_[2];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_block_id[11] <= 1'h0;
    else if (_003_) core_block_id[11] <= _297_[3];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_block_id[12] <= 1'h0;
    else if (_003_) core_block_id[12] <= _297_[4];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_block_id[13] <= 1'h0;
    else if (_003_) core_block_id[13] <= _297_[5];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_block_id[14] <= 1'h0;
    else if (_003_) core_block_id[14] <= _297_[6];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_block_id[15] <= 1'h0;
    else if (_003_) core_block_id[15] <= _297_[7];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_start[1] <= 1'h0;
    else if (_005_) core_start[1] <= _290_;
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) done <= 1'h0;
    else if (_006_) done <= 1'h1;
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_start[0] <= 1'h0;
    else if (_004_) core_start[0] <= _288_;
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_reset[0] <= 1'h1;
    else if (start) core_reset[0] <= _287_;
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_reset[1] <= 1'h1;
    else if (start) core_reset[1] <= _289_;
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_block_id[0] <= 1'h0;
    else if (_002_) core_block_id[0] <= blocks_dispatched[0];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_block_id[1] <= 1'h0;
    else if (_002_) core_block_id[1] <= blocks_dispatched[1];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_block_id[2] <= 1'h0;
    else if (_002_) core_block_id[2] <= blocks_dispatched[2];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_block_id[3] <= 1'h0;
    else if (_002_) core_block_id[3] <= blocks_dispatched[3];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_block_id[4] <= 1'h0;
    else if (_002_) core_block_id[4] <= blocks_dispatched[4];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_block_id[5] <= 1'h0;
    else if (_002_) core_block_id[5] <= blocks_dispatched[5];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_block_id[6] <= 1'h0;
    else if (_002_) core_block_id[6] <= blocks_dispatched[6];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_block_id[7] <= 1'h0;
    else if (_002_) core_block_id[7] <= blocks_dispatched[7];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_thread_count[0] <= 1'h0;
    else if (_002_) core_thread_count[0] <= _291_;
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_thread_count[1] <= 1'h0;
    else if (_002_) core_thread_count[1] <= _292_;
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) core_thread_count[2] <= 1'h1;
    else if (_002_) core_thread_count[2] <= _293_;
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) blocks_dispatched[0] <= 1'h0;
    else if (start) blocks_dispatched[0] <= _001_[0];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) blocks_dispatched[1] <= 1'h0;
    else if (start) blocks_dispatched[1] <= _001_[1];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) blocks_dispatched[2] <= 1'h0;
    else if (start) blocks_dispatched[2] <= _001_[2];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) blocks_dispatched[3] <= 1'h0;
    else if (start) blocks_dispatched[3] <= _001_[3];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) blocks_dispatched[4] <= 1'h0;
    else if (start) blocks_dispatched[4] <= _001_[4];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) blocks_dispatched[5] <= 1'h0;
    else if (start) blocks_dispatched[5] <= _001_[5];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) blocks_dispatched[6] <= 1'h0;
    else if (start) blocks_dispatched[6] <= _001_[6];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) blocks_dispatched[7] <= 1'h0;
    else if (start) blocks_dispatched[7] <= _001_[7];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) blocks_done[0] <= 1'h0;
    else if (start) blocks_done[0] <= _000_[0];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) blocks_done[1] <= 1'h0;
    else if (start) blocks_done[1] <= _000_[1];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) blocks_done[2] <= 1'h0;
    else if (start) blocks_done[2] <= _000_[2];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) blocks_done[3] <= 1'h0;
    else if (start) blocks_done[3] <= _000_[3];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) blocks_done[4] <= 1'h0;
    else if (start) blocks_done[4] <= _000_[4];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) blocks_done[5] <= 1'h0;
    else if (start) blocks_done[5] <= _000_[5];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) blocks_done[6] <= 1'h0;
    else if (start) blocks_done[6] <= _000_[6];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) blocks_done[7] <= 1'h0;
    else if (start) blocks_done[7] <= _000_[7];
  (* src = "../build/gpu.v:800.2-850.6" *)
  always @(posedge clk)
    if (reset) start_execution <= 1'h0;
    else if (start) start_execution <= 1'h1;
  assign total_blocks[7] = 1'h0;
endmodule

(* dynports =  1  *)
(* hdlname = "registers" *)
(* src = "../build/gpu.v:1474.1-1549.10" *)
module \$paramod$a747760de5c733b6f88bb63119f261e23521a1b9\registers (clk, reset, enable, block_id, core_state, decoded_rd_address, decoded_rs_address, decoded_rt_address, decoded_reg_write_enable, decoded_reg_input_mux, decoded_immediate, alu_out, lsu_out, rs, rt);
  wire [7:0] _000_;
  wire [7:0] _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  wire _264_;
  wire _265_;
  wire _266_;
  wire _267_;
  wire _268_;
  wire _269_;
  wire _270_;
  wire _271_;
  wire _272_;
  wire _273_;
  wire _274_;
  wire _275_;
  wire _276_;
  wire _277_;
  wire _278_;
  wire _279_;
  wire _280_;
  wire _281_;
  wire _282_;
  wire _283_;
  wire _284_;
  wire _285_;
  wire _286_;
  wire _287_;
  wire _288_;
  wire _289_;
  wire _290_;
  wire _291_;
  wire _292_;
  wire _293_;
  wire _294_;
  wire _295_;
  wire _296_;
  wire _297_;
  wire _298_;
  wire _299_;
  wire _300_;
  wire _301_;
  wire _302_;
  wire _303_;
  wire _304_;
  wire _305_;
  wire _306_;
  wire _307_;
  wire _308_;
  wire _309_;
  wire _310_;
  wire _311_;
  wire _312_;
  wire _313_;
  wire _314_;
  wire _315_;
  wire _316_;
  wire _317_;
  wire _318_;
  wire _319_;
  wire _320_;
  wire _321_;
  wire _322_;
  wire _323_;
  wire _324_;
  wire _325_;
  wire _326_;
  wire _327_;
  wire _328_;
  wire _329_;
  wire _330_;
  wire _331_;
  wire _332_;
  wire _333_;
  wire _334_;
  wire _335_;
  wire _336_;
  wire _337_;
  wire _338_;
  wire _339_;
  wire _340_;
  (* src = "../build/gpu.v:1505.31-1505.38" *)
  input [7:0] alu_out;
  wire [7:0] alu_out;
  (* src = "../build/gpu.v:1497.19-1497.27" *)
  input [7:0] block_id;
  wire [7:0] block_id;
  (* src = "../build/gpu.v:1494.13-1494.16" *)
  input clk;
  wire clk;
  (* src = "../build/gpu.v:1498.19-1498.29" *)
  input [2:0] core_state;
  wire [2:0] core_state;
  (* src = "../build/gpu.v:1504.31-1504.48" *)
  input [7:0] decoded_immediate;
  wire [7:0] decoded_immediate;
  (* src = "../build/gpu.v:1499.19-1499.37" *)
  input [3:0] decoded_rd_address;
  wire [3:0] decoded_rd_address;
  (* src = "../build/gpu.v:1503.19-1503.40" *)
  input [1:0] decoded_reg_input_mux;
  wire [1:0] decoded_reg_input_mux;
  (* src = "../build/gpu.v:1502.13-1502.37" *)
  input decoded_reg_write_enable;
  wire decoded_reg_write_enable;
  (* src = "../build/gpu.v:1500.19-1500.37" *)
  input [3:0] decoded_rs_address;
  wire [3:0] decoded_rs_address;
  (* src = "../build/gpu.v:1501.19-1501.37" *)
  input [3:0] decoded_rt_address;
  wire [3:0] decoded_rt_address;
  (* src = "../build/gpu.v:1496.13-1496.19" *)
  input enable;
  wire enable;
  (* src = "../build/gpu.v:1506.31-1506.38" *)
  input [7:0] lsu_out;
  wire [7:0] lsu_out;
  reg [7:0] \registers[0] ;
  reg [7:0] \registers[10] ;
  reg [7:0] \registers[11] ;
  reg [7:0] \registers[12] ;
  reg [7:0] \registers[13] ;
  reg [7:0] \registers[14] ;
  reg [7:0] \registers[15] ;
  reg [7:0] \registers[1] ;
  reg [7:0] \registers[2] ;
  reg [7:0] \registers[3] ;
  reg [7:0] \registers[4] ;
  reg [7:0] \registers[5] ;
  reg [7:0] \registers[6] ;
  reg [7:0] \registers[7] ;
  reg [7:0] \registers[8] ;
  reg [7:0] \registers[9] ;
  (* src = "../build/gpu.v:1495.13-1495.18" *)
  input reset;
  wire reset;
  (* src = "../build/gpu.v:1507.19-1507.21" *)
  output [7:0] rs;
  reg [7:0] rs;
  (* src = "../build/gpu.v:1508.19-1508.21" *)
  output [7:0] rt;
  reg [7:0] rt;
  assign _050_ = ~(decoded_rd_address[0] | decoded_rd_address[1]);
  assign _051_ = decoded_rd_address[3] & decoded_rd_address[2];
  assign _052_ = _051_ & _050_;
  assign _053_ = ~enable;
  assign _054_ = core_state[1] & ~(core_state[0]);
  assign _055_ = ~(_054_ & core_state[2]);
  assign _056_ = _050_ | ~(_051_);
  assign _057_ = ~(_056_ & decoded_reg_write_enable);
  assign _058_ = decoded_reg_input_mux[1] | decoded_reg_input_mux[0];
  assign _059_ = _058_ | _057_;
  assign _060_ = _059_ | _055_;
  assign _061_ = _060_ | _053_;
  assign _062_ = _061_ | reset;
  assign _063_ = decoded_reg_input_mux[1] | ~(decoded_reg_input_mux[0]);
  assign _064_ = _063_ | _057_;
  assign _065_ = _064_ | _055_;
  assign _066_ = _065_ | _053_;
  assign _067_ = _066_ | reset;
  assign _068_ = ~(_067_ & _062_);
  assign _069_ = decoded_reg_input_mux[0] | ~(decoded_reg_input_mux[1]);
  assign _070_ = _069_ | _057_;
  assign _071_ = _070_ | _055_;
  assign _072_ = enable & ~(_071_);
  assign _073_ = _072_ & ~(reset);
  assign _074_ = _073_ | _068_;
  assign _030_ = _074_ & _052_;
  assign _014_ = _030_ | reset;
  assign _075_ = decoded_rd_address[0] | ~(decoded_rd_address[1]);
  assign _076_ = decoded_rd_address[2] | ~(decoded_rd_address[3]);
  assign _077_ = _076_ | _075_;
  assign _028_ = _074_ & ~(_077_);
  assign _016_ = _028_ | reset;
  assign _078_ = decoded_rd_address[1] | ~(decoded_rd_address[0]);
  assign _079_ = _078_ | ~(_051_);
  assign _080_ = _074_ & ~(_079_);
  assign _081_ = enable | reset;
  assign _013_ = _081_ | _080_;
  assign _082_ = decoded_rd_address[3] | decoded_rd_address[2];
  assign _083_ = _082_ | _078_;
  assign _033_ = _074_ & ~(_083_);
  assign _010_ = _033_ | reset;
  assign _084_ = _075_ | ~(_051_);
  assign _031_ = _074_ & ~(_084_);
  assign _012_ = _031_ | reset;
  assign _085_ = ~(decoded_rd_address[0] & decoded_rd_address[1]);
  assign _086_ = _085_ | ~(_051_);
  assign _032_ = _074_ & ~(_086_);
  assign _011_ = _032_ | reset;
  assign _087_ = _085_ | _076_;
  assign _029_ = _074_ & ~(_087_);
  assign _015_ = _029_ | reset;
  assign _088_ = _082_ | ~(_050_);
  assign _027_ = _074_ & ~(_088_);
  assign _017_ = _027_ | reset;
  assign _089_ = _082_ | _075_;
  assign _034_ = _074_ & ~(_089_);
  assign _009_ = _034_ | reset;
  assign _090_ = _085_ | _082_;
  assign _035_ = _074_ & ~(_090_);
  assign _008_ = _035_ | reset;
  assign _091_ = decoded_rd_address[3] | ~(decoded_rd_address[2]);
  assign _092_ = _091_ | ~(_050_);
  assign _036_ = _074_ & ~(_092_);
  assign _007_ = _036_ | reset;
  assign _093_ = _091_ | _078_;
  assign _037_ = _074_ & ~(_093_);
  assign _006_ = _037_ | reset;
  assign _094_ = _091_ | _075_;
  assign _038_ = _074_ & ~(_094_);
  assign _005_ = _038_ | reset;
  assign _095_ = _076_ | _078_;
  assign _041_ = _074_ & ~(_095_);
  assign _002_ = _041_ | reset;
  assign _096_ = _091_ | _085_;
  assign _039_ = _074_ & ~(_096_);
  assign _004_ = _039_ | reset;
  assign _097_ = _076_ | ~(_050_);
  assign _040_ = _074_ & ~(_097_);
  assign _003_ = _040_ | reset;
  assign _098_ = ~(core_state[0] & core_state[1]);
  assign _099_ = _098_ | core_state[2];
  assign _018_ = enable & ~(_099_);
  assign _100_ = decoded_rt_address[0] ? \registers[1] [0] : \registers[0] [0];
  assign _101_ = decoded_rt_address[0] ? \registers[3] [0] : \registers[2] [0];
  assign _102_ = decoded_rt_address[1] ? _101_ : _100_;
  assign _103_ = decoded_rt_address[0] ? \registers[5] [0] : \registers[4] [0];
  assign _104_ = decoded_rt_address[0] ? \registers[7] [0] : \registers[6] [0];
  assign _105_ = decoded_rt_address[1] ? _104_ : _103_;
  assign _106_ = decoded_rt_address[2] ? _105_ : _102_;
  assign _107_ = decoded_rt_address[0] ? \registers[9] [0] : \registers[8] [0];
  assign _108_ = decoded_rt_address[0] ? \registers[11] [0] : \registers[10] [0];
  assign _109_ = decoded_rt_address[1] ? _108_ : _107_;
  assign _110_ = decoded_rt_address[0] ? \registers[13] [0] : \registers[12] [0];
  assign _111_ = decoded_rt_address[0] ? \registers[15] [0] : \registers[14] [0];
  assign _112_ = decoded_rt_address[1] ? _111_ : _110_;
  assign _113_ = decoded_rt_address[2] ? _112_ : _109_;
  assign _000_[0] = decoded_rt_address[3] ? _113_ : _106_;
  assign _114_ = decoded_rt_address[0] ? \registers[1] [1] : \registers[0] [1];
  assign _115_ = decoded_rt_address[0] ? \registers[3] [1] : \registers[2] [1];
  assign _116_ = decoded_rt_address[1] ? _115_ : _114_;
  assign _117_ = decoded_rt_address[0] ? \registers[5] [1] : \registers[4] [1];
  assign _118_ = decoded_rt_address[0] ? \registers[7] [1] : \registers[6] [1];
  assign _119_ = decoded_rt_address[1] ? _118_ : _117_;
  assign _120_ = decoded_rt_address[2] ? _119_ : _116_;
  assign _121_ = decoded_rt_address[0] ? \registers[9] [1] : \registers[8] [1];
  assign _122_ = decoded_rt_address[0] ? \registers[11] [1] : \registers[10] [1];
  assign _123_ = decoded_rt_address[1] ? _122_ : _121_;
  assign _124_ = decoded_rt_address[0] ? \registers[13] [1] : \registers[12] [1];
  assign _125_ = decoded_rt_address[0] ? \registers[15] [1] : \registers[14] [1];
  assign _126_ = decoded_rt_address[1] ? _125_ : _124_;
  assign _127_ = decoded_rt_address[2] ? _126_ : _123_;
  assign _000_[1] = decoded_rt_address[3] ? _127_ : _120_;
  assign _128_ = decoded_rt_address[0] ? \registers[1] [2] : \registers[0] [2];
  assign _129_ = decoded_rt_address[0] ? \registers[3] [2] : \registers[2] [2];
  assign _130_ = decoded_rt_address[1] ? _129_ : _128_;
  assign _131_ = decoded_rt_address[0] ? \registers[5] [2] : \registers[4] [2];
  assign _132_ = decoded_rt_address[0] ? \registers[7] [2] : \registers[6] [2];
  assign _133_ = decoded_rt_address[1] ? _132_ : _131_;
  assign _134_ = decoded_rt_address[2] ? _133_ : _130_;
  assign _135_ = decoded_rt_address[0] ? \registers[9] [2] : \registers[8] [2];
  assign _136_ = decoded_rt_address[0] ? \registers[11] [2] : \registers[10] [2];
  assign _137_ = decoded_rt_address[1] ? _136_ : _135_;
  assign _138_ = decoded_rt_address[0] ? \registers[13] [2] : \registers[12] [2];
  assign _139_ = decoded_rt_address[0] ? \registers[15] [2] : \registers[14] [2];
  assign _140_ = decoded_rt_address[1] ? _139_ : _138_;
  assign _141_ = decoded_rt_address[2] ? _140_ : _137_;
  assign _000_[2] = decoded_rt_address[3] ? _141_ : _134_;
  assign _142_ = decoded_rt_address[0] ? \registers[1] [3] : \registers[0] [3];
  assign _143_ = decoded_rt_address[0] ? \registers[3] [3] : \registers[2] [3];
  assign _144_ = decoded_rt_address[1] ? _143_ : _142_;
  assign _145_ = decoded_rt_address[0] ? \registers[5] [3] : \registers[4] [3];
  assign _146_ = decoded_rt_address[0] ? \registers[7] [3] : \registers[6] [3];
  assign _147_ = decoded_rt_address[1] ? _146_ : _145_;
  assign _148_ = decoded_rt_address[2] ? _147_ : _144_;
  assign _149_ = decoded_rt_address[0] ? \registers[9] [3] : \registers[8] [3];
  assign _150_ = decoded_rt_address[0] ? \registers[11] [3] : \registers[10] [3];
  assign _151_ = decoded_rt_address[1] ? _150_ : _149_;
  assign _152_ = decoded_rt_address[0] ? \registers[13] [3] : \registers[12] [3];
  assign _153_ = decoded_rt_address[0] ? \registers[15] [3] : \registers[14] [3];
  assign _154_ = decoded_rt_address[1] ? _153_ : _152_;
  assign _155_ = decoded_rt_address[2] ? _154_ : _151_;
  assign _000_[3] = decoded_rt_address[3] ? _155_ : _148_;
  assign _156_ = decoded_rt_address[0] ? \registers[1] [4] : \registers[0] [4];
  assign _157_ = decoded_rt_address[0] ? \registers[3] [4] : \registers[2] [4];
  assign _158_ = decoded_rt_address[1] ? _157_ : _156_;
  assign _159_ = decoded_rt_address[0] ? \registers[5] [4] : \registers[4] [4];
  assign _160_ = decoded_rt_address[0] ? \registers[7] [4] : \registers[6] [4];
  assign _161_ = decoded_rt_address[1] ? _160_ : _159_;
  assign _162_ = decoded_rt_address[2] ? _161_ : _158_;
  assign _163_ = decoded_rt_address[0] ? \registers[9] [4] : \registers[8] [4];
  assign _164_ = decoded_rt_address[0] ? \registers[11] [4] : \registers[10] [4];
  assign _165_ = decoded_rt_address[1] ? _164_ : _163_;
  assign _166_ = decoded_rt_address[0] ? \registers[13] [4] : \registers[12] [4];
  assign _167_ = decoded_rt_address[0] ? \registers[15] [4] : \registers[14] [4];
  assign _168_ = decoded_rt_address[1] ? _167_ : _166_;
  assign _169_ = decoded_rt_address[2] ? _168_ : _165_;
  assign _000_[4] = decoded_rt_address[3] ? _169_ : _162_;
  assign _170_ = decoded_rt_address[0] ? \registers[1] [5] : \registers[0] [5];
  assign _171_ = decoded_rt_address[0] ? \registers[3] [5] : \registers[2] [5];
  assign _172_ = decoded_rt_address[1] ? _171_ : _170_;
  assign _173_ = decoded_rt_address[0] ? \registers[5] [5] : \registers[4] [5];
  assign _174_ = decoded_rt_address[0] ? \registers[7] [5] : \registers[6] [5];
  assign _175_ = decoded_rt_address[1] ? _174_ : _173_;
  assign _176_ = decoded_rt_address[2] ? _175_ : _172_;
  assign _177_ = decoded_rt_address[0] ? \registers[9] [5] : \registers[8] [5];
  assign _178_ = decoded_rt_address[0] ? \registers[11] [5] : \registers[10] [5];
  assign _179_ = decoded_rt_address[1] ? _178_ : _177_;
  assign _180_ = decoded_rt_address[0] ? \registers[13] [5] : \registers[12] [5];
  assign _181_ = decoded_rt_address[0] ? \registers[15] [5] : \registers[14] [5];
  assign _182_ = decoded_rt_address[1] ? _181_ : _180_;
  assign _183_ = decoded_rt_address[2] ? _182_ : _179_;
  assign _000_[5] = decoded_rt_address[3] ? _183_ : _176_;
  assign _184_ = decoded_rt_address[0] ? \registers[1] [6] : \registers[0] [6];
  assign _185_ = decoded_rt_address[0] ? \registers[3] [6] : \registers[2] [6];
  assign _186_ = decoded_rt_address[1] ? _185_ : _184_;
  assign _187_ = decoded_rt_address[0] ? \registers[5] [6] : \registers[4] [6];
  assign _188_ = decoded_rt_address[0] ? \registers[7] [6] : \registers[6] [6];
  assign _189_ = decoded_rt_address[1] ? _188_ : _187_;
  assign _190_ = decoded_rt_address[2] ? _189_ : _186_;
  assign _191_ = decoded_rt_address[0] ? \registers[9] [6] : \registers[8] [6];
  assign _192_ = decoded_rt_address[0] ? \registers[11] [6] : \registers[10] [6];
  assign _193_ = decoded_rt_address[1] ? _192_ : _191_;
  assign _194_ = decoded_rt_address[0] ? \registers[13] [6] : \registers[12] [6];
  assign _195_ = decoded_rt_address[0] ? \registers[15] [6] : \registers[14] [6];
  assign _196_ = decoded_rt_address[1] ? _195_ : _194_;
  assign _197_ = decoded_rt_address[2] ? _196_ : _193_;
  assign _000_[6] = decoded_rt_address[3] ? _197_ : _190_;
  assign _198_ = decoded_rt_address[0] ? \registers[1] [7] : \registers[0] [7];
  assign _199_ = decoded_rt_address[0] ? \registers[3] [7] : \registers[2] [7];
  assign _200_ = decoded_rt_address[1] ? _199_ : _198_;
  assign _201_ = decoded_rt_address[0] ? \registers[5] [7] : \registers[4] [7];
  assign _202_ = decoded_rt_address[0] ? \registers[7] [7] : \registers[6] [7];
  assign _203_ = decoded_rt_address[1] ? _202_ : _201_;
  assign _204_ = decoded_rt_address[2] ? _203_ : _200_;
  assign _205_ = decoded_rt_address[0] ? \registers[9] [7] : \registers[8] [7];
  assign _206_ = decoded_rt_address[0] ? \registers[11] [7] : \registers[10] [7];
  assign _207_ = decoded_rt_address[1] ? _206_ : _205_;
  assign _208_ = decoded_rt_address[0] ? \registers[13] [7] : \registers[12] [7];
  assign _209_ = decoded_rt_address[0] ? \registers[15] [7] : \registers[14] [7];
  assign _210_ = decoded_rt_address[1] ? _209_ : _208_;
  assign _211_ = decoded_rt_address[2] ? _210_ : _207_;
  assign _000_[7] = decoded_rt_address[3] ? _211_ : _204_;
  assign _212_ = _067_ ? alu_out[0] : lsu_out[0];
  assign _019_ = _073_ ? decoded_immediate[0] : _212_;
  assign _213_ = reset | ~(enable);
  assign _214_ = block_id[0] & ~(_213_);
  assign _042_ = _080_ ? _019_ : _214_;
  assign _215_ = _067_ ? alu_out[1] : lsu_out[1];
  assign _020_ = _073_ ? decoded_immediate[1] : _215_;
  assign _216_ = block_id[1] & ~(_213_);
  assign _043_ = _080_ ? _020_ : _216_;
  assign _217_ = _067_ ? alu_out[2] : lsu_out[2];
  assign _021_ = _073_ ? decoded_immediate[2] : _217_;
  assign _218_ = block_id[2] & ~(_213_);
  assign _044_ = _080_ ? _021_ : _218_;
  assign _219_ = _067_ ? alu_out[3] : lsu_out[3];
  assign _022_ = _073_ ? decoded_immediate[3] : _219_;
  assign _220_ = block_id[3] & ~(_213_);
  assign _045_ = _080_ ? _022_ : _220_;
  assign _221_ = _067_ ? alu_out[4] : lsu_out[4];
  assign _023_ = _073_ ? decoded_immediate[4] : _221_;
  assign _222_ = block_id[4] & ~(_213_);
  assign _046_ = _080_ ? _023_ : _222_;
  assign _223_ = _067_ ? alu_out[5] : lsu_out[5];
  assign _024_ = _073_ ? decoded_immediate[5] : _223_;
  assign _224_ = block_id[5] & ~(_213_);
  assign _047_ = _080_ ? _024_ : _224_;
  assign _225_ = _067_ ? alu_out[6] : lsu_out[6];
  assign _025_ = _073_ ? decoded_immediate[6] : _225_;
  assign _226_ = block_id[6] & ~(_213_);
  assign _048_ = _080_ ? _025_ : _226_;
  assign _227_ = _067_ ? alu_out[7] : lsu_out[7];
  assign _026_ = _073_ ? decoded_immediate[7] : _227_;
  assign _228_ = block_id[7] & ~(_213_);
  assign _049_ = _080_ ? _026_ : _228_;
  assign _229_ = decoded_rs_address[0] ? \registers[1] [0] : \registers[0] [0];
  assign _230_ = decoded_rs_address[0] ? \registers[3] [0] : \registers[2] [0];
  assign _231_ = decoded_rs_address[1] ? _230_ : _229_;
  assign _232_ = decoded_rs_address[0] ? \registers[5] [0] : \registers[4] [0];
  assign _233_ = decoded_rs_address[0] ? \registers[7] [0] : \registers[6] [0];
  assign _234_ = decoded_rs_address[1] ? _233_ : _232_;
  assign _235_ = decoded_rs_address[2] ? _234_ : _231_;
  assign _236_ = decoded_rs_address[0] ? \registers[9] [0] : \registers[8] [0];
  assign _237_ = decoded_rs_address[0] ? \registers[11] [0] : \registers[10] [0];
  assign _238_ = decoded_rs_address[1] ? _237_ : _236_;
  assign _239_ = decoded_rs_address[0] ? \registers[13] [0] : \registers[12] [0];
  assign _240_ = decoded_rs_address[0] ? \registers[15] [0] : \registers[14] [0];
  assign _241_ = decoded_rs_address[1] ? _240_ : _239_;
  assign _242_ = decoded_rs_address[2] ? _241_ : _238_;
  assign _001_[0] = decoded_rs_address[3] ? _242_ : _235_;
  assign _243_ = decoded_rs_address[0] ? \registers[1] [1] : \registers[0] [1];
  assign _244_ = decoded_rs_address[0] ? \registers[3] [1] : \registers[2] [1];
  assign _245_ = decoded_rs_address[1] ? _244_ : _243_;
  assign _246_ = decoded_rs_address[0] ? \registers[5] [1] : \registers[4] [1];
  assign _247_ = decoded_rs_address[0] ? \registers[7] [1] : \registers[6] [1];
  assign _248_ = decoded_rs_address[1] ? _247_ : _246_;
  assign _249_ = decoded_rs_address[2] ? _248_ : _245_;
  assign _250_ = decoded_rs_address[0] ? \registers[9] [1] : \registers[8] [1];
  assign _251_ = decoded_rs_address[0] ? \registers[11] [1] : \registers[10] [1];
  assign _252_ = decoded_rs_address[1] ? _251_ : _250_;
  assign _253_ = decoded_rs_address[0] ? \registers[13] [1] : \registers[12] [1];
  assign _254_ = decoded_rs_address[0] ? \registers[15] [1] : \registers[14] [1];
  assign _255_ = decoded_rs_address[1] ? _254_ : _253_;
  assign _256_ = decoded_rs_address[2] ? _255_ : _252_;
  assign _001_[1] = decoded_rs_address[3] ? _256_ : _249_;
  assign _257_ = decoded_rs_address[0] ? \registers[1] [2] : \registers[0] [2];
  assign _258_ = decoded_rs_address[0] ? \registers[3] [2] : \registers[2] [2];
  assign _259_ = decoded_rs_address[1] ? _258_ : _257_;
  assign _260_ = decoded_rs_address[0] ? \registers[5] [2] : \registers[4] [2];
  assign _261_ = decoded_rs_address[0] ? \registers[7] [2] : \registers[6] [2];
  assign _262_ = decoded_rs_address[1] ? _261_ : _260_;
  assign _263_ = decoded_rs_address[2] ? _262_ : _259_;
  assign _264_ = decoded_rs_address[0] ? \registers[9] [2] : \registers[8] [2];
  assign _265_ = decoded_rs_address[0] ? \registers[11] [2] : \registers[10] [2];
  assign _266_ = decoded_rs_address[1] ? _265_ : _264_;
  assign _267_ = decoded_rs_address[0] ? \registers[13] [2] : \registers[12] [2];
  assign _268_ = decoded_rs_address[0] ? \registers[15] [2] : \registers[14] [2];
  assign _269_ = decoded_rs_address[1] ? _268_ : _267_;
  assign _270_ = decoded_rs_address[2] ? _269_ : _266_;
  assign _001_[2] = decoded_rs_address[3] ? _270_ : _263_;
  assign _271_ = decoded_rs_address[0] ? \registers[1] [3] : \registers[0] [3];
  assign _272_ = decoded_rs_address[0] ? \registers[3] [3] : \registers[2] [3];
  assign _273_ = decoded_rs_address[1] ? _272_ : _271_;
  assign _274_ = decoded_rs_address[0] ? \registers[5] [3] : \registers[4] [3];
  assign _275_ = decoded_rs_address[0] ? \registers[7] [3] : \registers[6] [3];
  assign _276_ = decoded_rs_address[1] ? _275_ : _274_;
  assign _277_ = decoded_rs_address[2] ? _276_ : _273_;
  assign _278_ = decoded_rs_address[0] ? \registers[9] [3] : \registers[8] [3];
  assign _279_ = decoded_rs_address[0] ? \registers[11] [3] : \registers[10] [3];
  assign _280_ = decoded_rs_address[1] ? _279_ : _278_;
  assign _281_ = decoded_rs_address[0] ? \registers[13] [3] : \registers[12] [3];
  assign _282_ = decoded_rs_address[0] ? \registers[15] [3] : \registers[14] [3];
  assign _283_ = decoded_rs_address[1] ? _282_ : _281_;
  assign _284_ = decoded_rs_address[2] ? _283_ : _280_;
  assign _001_[3] = decoded_rs_address[3] ? _284_ : _277_;
  assign _285_ = decoded_rs_address[0] ? \registers[1] [4] : \registers[0] [4];
  assign _286_ = decoded_rs_address[0] ? \registers[3] [4] : \registers[2] [4];
  assign _287_ = decoded_rs_address[1] ? _286_ : _285_;
  assign _288_ = decoded_rs_address[0] ? \registers[5] [4] : \registers[4] [4];
  assign _289_ = decoded_rs_address[0] ? \registers[7] [4] : \registers[6] [4];
  assign _290_ = decoded_rs_address[1] ? _289_ : _288_;
  assign _291_ = decoded_rs_address[2] ? _290_ : _287_;
  assign _292_ = decoded_rs_address[0] ? \registers[9] [4] : \registers[8] [4];
  assign _293_ = decoded_rs_address[0] ? \registers[11] [4] : \registers[10] [4];
  assign _294_ = decoded_rs_address[1] ? _293_ : _292_;
  assign _295_ = decoded_rs_address[0] ? \registers[13] [4] : \registers[12] [4];
  assign _296_ = decoded_rs_address[0] ? \registers[15] [4] : \registers[14] [4];
  assign _297_ = decoded_rs_address[1] ? _296_ : _295_;
  assign _298_ = decoded_rs_address[2] ? _297_ : _294_;
  assign _001_[4] = decoded_rs_address[3] ? _298_ : _291_;
  assign _299_ = decoded_rs_address[0] ? \registers[1] [5] : \registers[0] [5];
  assign _300_ = decoded_rs_address[0] ? \registers[3] [5] : \registers[2] [5];
  assign _301_ = decoded_rs_address[1] ? _300_ : _299_;
  assign _302_ = decoded_rs_address[0] ? \registers[5] [5] : \registers[4] [5];
  assign _303_ = decoded_rs_address[0] ? \registers[7] [5] : \registers[6] [5];
  assign _304_ = decoded_rs_address[1] ? _303_ : _302_;
  assign _305_ = decoded_rs_address[2] ? _304_ : _301_;
  assign _306_ = decoded_rs_address[0] ? \registers[9] [5] : \registers[8] [5];
  assign _307_ = decoded_rs_address[0] ? \registers[11] [5] : \registers[10] [5];
  assign _308_ = decoded_rs_address[1] ? _307_ : _306_;
  assign _309_ = decoded_rs_address[0] ? \registers[13] [5] : \registers[12] [5];
  assign _310_ = decoded_rs_address[0] ? \registers[15] [5] : \registers[14] [5];
  assign _311_ = decoded_rs_address[1] ? _310_ : _309_;
  assign _312_ = decoded_rs_address[2] ? _311_ : _308_;
  assign _001_[5] = decoded_rs_address[3] ? _312_ : _305_;
  assign _313_ = decoded_rs_address[0] ? \registers[1] [6] : \registers[0] [6];
  assign _314_ = decoded_rs_address[0] ? \registers[3] [6] : \registers[2] [6];
  assign _315_ = decoded_rs_address[1] ? _314_ : _313_;
  assign _316_ = decoded_rs_address[0] ? \registers[5] [6] : \registers[4] [6];
  assign _317_ = decoded_rs_address[0] ? \registers[7] [6] : \registers[6] [6];
  assign _318_ = decoded_rs_address[1] ? _317_ : _316_;
  assign _319_ = decoded_rs_address[2] ? _318_ : _315_;
  assign _320_ = decoded_rs_address[0] ? \registers[9] [6] : \registers[8] [6];
  assign _321_ = decoded_rs_address[0] ? \registers[11] [6] : \registers[10] [6];
  assign _322_ = decoded_rs_address[1] ? _321_ : _320_;
  assign _323_ = decoded_rs_address[0] ? \registers[13] [6] : \registers[12] [6];
  assign _324_ = decoded_rs_address[0] ? \registers[15] [6] : \registers[14] [6];
  assign _325_ = decoded_rs_address[1] ? _324_ : _323_;
  assign _326_ = decoded_rs_address[2] ? _325_ : _322_;
  assign _001_[6] = decoded_rs_address[3] ? _326_ : _319_;
  assign _327_ = decoded_rs_address[0] ? \registers[1] [7] : \registers[0] [7];
  assign _328_ = decoded_rs_address[0] ? \registers[3] [7] : \registers[2] [7];
  assign _329_ = decoded_rs_address[1] ? _328_ : _327_;
  assign _330_ = decoded_rs_address[0] ? \registers[5] [7] : \registers[4] [7];
  assign _331_ = decoded_rs_address[0] ? \registers[7] [7] : \registers[6] [7];
  assign _332_ = decoded_rs_address[1] ? _331_ : _330_;
  assign _333_ = decoded_rs_address[2] ? _332_ : _329_;
  assign _334_ = decoded_rs_address[0] ? \registers[9] [7] : \registers[8] [7];
  assign _335_ = decoded_rs_address[0] ? \registers[11] [7] : \registers[10] [7];
  assign _336_ = decoded_rs_address[1] ? _335_ : _334_;
  assign _337_ = decoded_rs_address[0] ? \registers[13] [7] : \registers[12] [7];
  assign _338_ = decoded_rs_address[0] ? \registers[15] [7] : \registers[14] [7];
  assign _339_ = decoded_rs_address[1] ? _338_ : _337_;
  assign _340_ = decoded_rs_address[2] ? _339_ : _336_;
  assign _001_[7] = decoded_rs_address[3] ? _340_ : _333_;
  always @(posedge clk)
    if (reset) rs[0] <= 1'h0;
    else if (_018_) rs[0] <= _001_[0];
  always @(posedge clk)
    if (reset) rs[1] <= 1'h0;
    else if (_018_) rs[1] <= _001_[1];
  always @(posedge clk)
    if (reset) rs[2] <= 1'h0;
    else if (_018_) rs[2] <= _001_[2];
  always @(posedge clk)
    if (reset) rs[3] <= 1'h0;
    else if (_018_) rs[3] <= _001_[3];
  always @(posedge clk)
    if (reset) rs[4] <= 1'h0;
    else if (_018_) rs[4] <= _001_[4];
  always @(posedge clk)
    if (reset) rs[5] <= 1'h0;
    else if (_018_) rs[5] <= _001_[5];
  always @(posedge clk)
    if (reset) rs[6] <= 1'h0;
    else if (_018_) rs[6] <= _001_[6];
  always @(posedge clk)
    if (reset) rs[7] <= 1'h0;
    else if (_018_) rs[7] <= _001_[7];
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [0] <= 1'h0;
      else \registers[7] [0] <= _019_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [1] <= 1'h0;
      else \registers[7] [1] <= _020_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [2] <= 1'h0;
      else \registers[7] [2] <= _021_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [3] <= 1'h0;
      else \registers[7] [3] <= _022_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [4] <= 1'h0;
      else \registers[7] [4] <= _023_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [5] <= 1'h0;
      else \registers[7] [5] <= _024_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [6] <= 1'h0;
      else \registers[7] [6] <= _025_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [7] <= 1'h0;
      else \registers[7] [7] <= _026_;
  always @(posedge clk)
    if (_013_) \registers[13] [0] <= _042_;
  always @(posedge clk)
    if (_013_) \registers[13] [1] <= _043_;
  always @(posedge clk)
    if (_013_) \registers[13] [2] <= _044_;
  always @(posedge clk)
    if (_013_) \registers[13] [3] <= _045_;
  always @(posedge clk)
    if (_013_) \registers[13] [4] <= _046_;
  always @(posedge clk)
    if (_013_) \registers[13] [5] <= _047_;
  always @(posedge clk)
    if (_013_) \registers[13] [6] <= _048_;
  always @(posedge clk)
    if (_013_) \registers[13] [7] <= _049_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [0] <= 1'h0;
      else \registers[12] [0] <= _019_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [1] <= 1'h0;
      else \registers[12] [1] <= _020_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [2] <= 1'h0;
      else \registers[12] [2] <= _021_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [3] <= 1'h0;
      else \registers[12] [3] <= _022_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [4] <= 1'h0;
      else \registers[12] [4] <= _023_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [5] <= 1'h0;
      else \registers[12] [5] <= _024_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [6] <= 1'h0;
      else \registers[12] [6] <= _025_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [7] <= 1'h0;
      else \registers[12] [7] <= _026_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [0] <= 1'h0;
      else \registers[11] [0] <= _019_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [1] <= 1'h0;
      else \registers[11] [1] <= _020_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [2] <= 1'h0;
      else \registers[11] [2] <= _021_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [3] <= 1'h0;
      else \registers[11] [3] <= _022_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [4] <= 1'h0;
      else \registers[11] [4] <= _023_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [5] <= 1'h0;
      else \registers[11] [5] <= _024_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [6] <= 1'h0;
      else \registers[11] [6] <= _025_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [7] <= 1'h0;
      else \registers[11] [7] <= _026_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [0] <= 1'h0;
      else \registers[10] [0] <= _019_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [1] <= 1'h0;
      else \registers[10] [1] <= _020_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [2] <= 1'h0;
      else \registers[10] [2] <= _021_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [3] <= 1'h0;
      else \registers[10] [3] <= _022_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [4] <= 1'h0;
      else \registers[10] [4] <= _023_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [5] <= 1'h0;
      else \registers[10] [5] <= _024_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [6] <= 1'h0;
      else \registers[10] [6] <= _025_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [7] <= 1'h0;
      else \registers[10] [7] <= _026_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [0] <= 1'h0;
      else \registers[14] [0] <= _019_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [1] <= 1'h0;
      else \registers[14] [1] <= _020_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [2] <= 1'h1;
      else \registers[14] [2] <= _021_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [3] <= 1'h0;
      else \registers[14] [3] <= _022_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [4] <= 1'h0;
      else \registers[14] [4] <= _023_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [5] <= 1'h0;
      else \registers[14] [5] <= _024_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [6] <= 1'h0;
      else \registers[14] [6] <= _025_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [7] <= 1'h0;
      else \registers[14] [7] <= _026_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [0] <= 1'h0;
      else \registers[6] [0] <= _019_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [1] <= 1'h0;
      else \registers[6] [1] <= _020_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [2] <= 1'h0;
      else \registers[6] [2] <= _021_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [3] <= 1'h0;
      else \registers[6] [3] <= _022_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [4] <= 1'h0;
      else \registers[6] [4] <= _023_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [5] <= 1'h0;
      else \registers[6] [5] <= _024_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [6] <= 1'h0;
      else \registers[6] [6] <= _025_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [7] <= 1'h0;
      else \registers[6] [7] <= _026_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [0] <= 1'h0;
      else \registers[8] [0] <= _019_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [1] <= 1'h0;
      else \registers[8] [1] <= _020_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [2] <= 1'h0;
      else \registers[8] [2] <= _021_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [3] <= 1'h0;
      else \registers[8] [3] <= _022_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [4] <= 1'h0;
      else \registers[8] [4] <= _023_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [5] <= 1'h0;
      else \registers[8] [5] <= _024_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [6] <= 1'h0;
      else \registers[8] [6] <= _025_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [7] <= 1'h0;
      else \registers[8] [7] <= _026_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [0] <= 1'h0;
      else \registers[2] [0] <= _019_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [1] <= 1'h0;
      else \registers[2] [1] <= _020_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [2] <= 1'h0;
      else \registers[2] [2] <= _021_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [3] <= 1'h0;
      else \registers[2] [3] <= _022_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [4] <= 1'h0;
      else \registers[2] [4] <= _023_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [5] <= 1'h0;
      else \registers[2] [5] <= _024_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [6] <= 1'h0;
      else \registers[2] [6] <= _025_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [7] <= 1'h0;
      else \registers[2] [7] <= _026_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [0] <= 1'h0;
      else \registers[1] [0] <= _019_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [1] <= 1'h0;
      else \registers[1] [1] <= _020_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [2] <= 1'h0;
      else \registers[1] [2] <= _021_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [3] <= 1'h0;
      else \registers[1] [3] <= _022_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [4] <= 1'h0;
      else \registers[1] [4] <= _023_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [5] <= 1'h0;
      else \registers[1] [5] <= _024_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [6] <= 1'h0;
      else \registers[1] [6] <= _025_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [7] <= 1'h0;
      else \registers[1] [7] <= _026_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [0] <= 1'h0;
      else \registers[15] [0] <= _019_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [1] <= 1'h1;
      else \registers[15] [1] <= _020_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [2] <= 1'h0;
      else \registers[15] [2] <= _021_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [3] <= 1'h0;
      else \registers[15] [3] <= _022_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [4] <= 1'h0;
      else \registers[15] [4] <= _023_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [5] <= 1'h0;
      else \registers[15] [5] <= _024_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [6] <= 1'h0;
      else \registers[15] [6] <= _025_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [7] <= 1'h0;
      else \registers[15] [7] <= _026_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [0] <= 1'h0;
      else \registers[9] [0] <= _019_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [1] <= 1'h0;
      else \registers[9] [1] <= _020_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [2] <= 1'h0;
      else \registers[9] [2] <= _021_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [3] <= 1'h0;
      else \registers[9] [3] <= _022_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [4] <= 1'h0;
      else \registers[9] [4] <= _023_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [5] <= 1'h0;
      else \registers[9] [5] <= _024_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [6] <= 1'h0;
      else \registers[9] [6] <= _025_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [7] <= 1'h0;
      else \registers[9] [7] <= _026_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [0] <= 1'h0;
      else \registers[0] [0] <= _019_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [1] <= 1'h0;
      else \registers[0] [1] <= _020_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [2] <= 1'h0;
      else \registers[0] [2] <= _021_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [3] <= 1'h0;
      else \registers[0] [3] <= _022_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [4] <= 1'h0;
      else \registers[0] [4] <= _023_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [5] <= 1'h0;
      else \registers[0] [5] <= _024_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [6] <= 1'h0;
      else \registers[0] [6] <= _025_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [7] <= 1'h0;
      else \registers[0] [7] <= _026_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [0] <= 1'h0;
      else \registers[3] [0] <= _019_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [1] <= 1'h0;
      else \registers[3] [1] <= _020_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [2] <= 1'h0;
      else \registers[3] [2] <= _021_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [3] <= 1'h0;
      else \registers[3] [3] <= _022_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [4] <= 1'h0;
      else \registers[3] [4] <= _023_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [5] <= 1'h0;
      else \registers[3] [5] <= _024_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [6] <= 1'h0;
      else \registers[3] [6] <= _025_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [7] <= 1'h0;
      else \registers[3] [7] <= _026_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [0] <= 1'h0;
      else \registers[5] [0] <= _019_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [1] <= 1'h0;
      else \registers[5] [1] <= _020_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [2] <= 1'h0;
      else \registers[5] [2] <= _021_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [3] <= 1'h0;
      else \registers[5] [3] <= _022_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [4] <= 1'h0;
      else \registers[5] [4] <= _023_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [5] <= 1'h0;
      else \registers[5] [5] <= _024_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [6] <= 1'h0;
      else \registers[5] [6] <= _025_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [7] <= 1'h0;
      else \registers[5] [7] <= _026_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [0] <= 1'h0;
      else \registers[4] [0] <= _019_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [1] <= 1'h0;
      else \registers[4] [1] <= _020_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [2] <= 1'h0;
      else \registers[4] [2] <= _021_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [3] <= 1'h0;
      else \registers[4] [3] <= _022_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [4] <= 1'h0;
      else \registers[4] [4] <= _023_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [5] <= 1'h0;
      else \registers[4] [5] <= _024_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [6] <= 1'h0;
      else \registers[4] [6] <= _025_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [7] <= 1'h0;
      else \registers[4] [7] <= _026_;
  always @(posedge clk)
    if (reset) rt[0] <= 1'h0;
    else if (_018_) rt[0] <= _000_[0];
  always @(posedge clk)
    if (reset) rt[1] <= 1'h0;
    else if (_018_) rt[1] <= _000_[1];
  always @(posedge clk)
    if (reset) rt[2] <= 1'h0;
    else if (_018_) rt[2] <= _000_[2];
  always @(posedge clk)
    if (reset) rt[3] <= 1'h0;
    else if (_018_) rt[3] <= _000_[3];
  always @(posedge clk)
    if (reset) rt[4] <= 1'h0;
    else if (_018_) rt[4] <= _000_[4];
  always @(posedge clk)
    if (reset) rt[5] <= 1'h0;
    else if (_018_) rt[5] <= _000_[5];
  always @(posedge clk)
    if (reset) rt[6] <= 1'h0;
    else if (_018_) rt[6] <= _000_[6];
  always @(posedge clk)
    if (reset) rt[7] <= 1'h0;
    else if (_018_) rt[7] <= _000_[7];
endmodule

(* dynports =  1  *)
(* hdlname = "fetcher" *)
(* src = "../build/gpu.v:984.1-1060.10" *)
module \$paramod$beb00772bac1a1e06ce8ff4195cf7b0af620cd82\fetcher (clk, reset, core_state, current_pc, mem_read_valid, mem_read_address, mem_read_ready, mem_read_data, fetcher_state, instruction);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  (* force_downto = 32'd1 *)
  (* src = "../build/gpu.v:0.0-0.0|../build/gpu.v:1043.4-1059.11|/usr/bin/../share/yosys/techmap.v:575.21-575.22" *)
  wire [1:0] _16_;
  (* src = "../build/gpu.v:998.13-998.16" *)
  input clk;
  wire clk;
  (* src = "../build/gpu.v:1000.19-1000.29" *)
  input [2:0] core_state;
  wire [2:0] core_state;
  (* src = "../build/gpu.v:1001.19-1001.29" *)
  input [7:0] current_pc;
  wire [7:0] current_pc;
  (* src = "../build/gpu.v:1006.19-1006.32" *)
  output [2:0] fetcher_state;
  wire [2:0] fetcher_state;
  (* src = "../build/gpu.v:1007.43-1007.54" *)
  output [15:0] instruction;
  reg [15:0] instruction;
  (* src = "../build/gpu.v:1018.26-1018.38" *)
  reg [7:0] \mem_if.read_address ;
  (* src = "../build/gpu.v:1020.27-1020.36" *)
  wire [15:0] \mem_if.read_data ;
  (* src = "../build/gpu.v:1019.9-1019.19" *)
  wire \mem_if.read_ready ;
  (* src = "../build/gpu.v:1017.8-1017.18" *)
  reg \mem_if.read_valid ;
  (* src = "../build/gpu.v:1003.43-1003.59" *)
  output [7:0] mem_read_address;
  wire [7:0] mem_read_address;
  (* src = "../build/gpu.v:1005.43-1005.56" *)
  input [15:0] mem_read_data;
  wire [15:0] mem_read_data;
  (* src = "../build/gpu.v:1004.13-1004.27" *)
  input mem_read_ready;
  wire mem_read_ready;
  (* src = "../build/gpu.v:1002.13-1002.27" *)
  output mem_read_valid;
  wire mem_read_valid;
  (* src = "../build/gpu.v:999.13-999.18" *)
  input reset;
  wire reset;
  (* src = "../build/gpu.v:1030.33-1030.47" *)
  wire [8:1] sv2v_tmp_9FB2F;
  (* src = "../build/gpu.v:1027.13-1027.27" *)
  wire sv2v_tmp_AF88B;
  assign _04_ = fetcher_state[1] | ~(fetcher_state[0]);
  assign _02_ = mem_read_ready & ~(_04_);
  assign _05_ = _04_ | mem_read_ready;
  assign _06_ = core_state[1] | ~(core_state[0]);
  assign _07_ = ~(_06_ | core_state[2]);
  assign _08_ = ~(fetcher_state[0] | fetcher_state[1]);
  assign _09_ = _08_ & ~(_07_);
  assign _10_ = _05_ & ~(_09_);
  assign _11_ = core_state[0] | ~(core_state[1]);
  assign _12_ = _11_ | core_state[2];
  assign _13_ = fetcher_state[1] & ~(fetcher_state[0]);
  assign _14_ = _04_ & ~(_08_);
  assign _15_ = _13_ ? _12_ : _14_;
  assign _03_ = _10_ & ~(_15_);
  assign _00_ = _08_ & _07_;
  assign _01_ = _10_ & ~(_14_);
  assign _16_[0] = _04_ & ~(_13_);
  assign _16_[1] = fetcher_state[0] & ~(fetcher_state[1]);
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) instruction[0] <= 1'h0;
    else if (_02_) instruction[0] <= mem_read_data[0];
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) instruction[1] <= 1'h0;
    else if (_02_) instruction[1] <= mem_read_data[1];
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) instruction[2] <= 1'h0;
    else if (_02_) instruction[2] <= mem_read_data[2];
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) instruction[3] <= 1'h0;
    else if (_02_) instruction[3] <= mem_read_data[3];
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) instruction[4] <= 1'h0;
    else if (_02_) instruction[4] <= mem_read_data[4];
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) instruction[5] <= 1'h0;
    else if (_02_) instruction[5] <= mem_read_data[5];
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) instruction[6] <= 1'h0;
    else if (_02_) instruction[6] <= mem_read_data[6];
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) instruction[7] <= 1'h0;
    else if (_02_) instruction[7] <= mem_read_data[7];
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) instruction[8] <= 1'h0;
    else if (_02_) instruction[8] <= mem_read_data[8];
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) instruction[9] <= 1'h0;
    else if (_02_) instruction[9] <= mem_read_data[9];
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) instruction[10] <= 1'h0;
    else if (_02_) instruction[10] <= mem_read_data[10];
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) instruction[11] <= 1'h0;
    else if (_02_) instruction[11] <= mem_read_data[11];
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) instruction[12] <= 1'h0;
    else if (_02_) instruction[12] <= mem_read_data[12];
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) instruction[13] <= 1'h0;
    else if (_02_) instruction[13] <= mem_read_data[13];
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) instruction[14] <= 1'h0;
    else if (_02_) instruction[14] <= mem_read_data[14];
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) instruction[15] <= 1'h0;
    else if (_02_) instruction[15] <= mem_read_data[15];
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) \mem_if.read_valid  <= 1'h0;
    else if (_01_) \mem_if.read_valid  <= _04_;
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) \mem_if.read_address [0] <= 1'h0;
    else if (_00_) \mem_if.read_address [0] <= current_pc[0];
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) \mem_if.read_address [1] <= 1'h0;
    else if (_00_) \mem_if.read_address [1] <= current_pc[1];
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) \mem_if.read_address [2] <= 1'h0;
    else if (_00_) \mem_if.read_address [2] <= current_pc[2];
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) \mem_if.read_address [3] <= 1'h0;
    else if (_00_) \mem_if.read_address [3] <= current_pc[3];
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) \mem_if.read_address [4] <= 1'h0;
    else if (_00_) \mem_if.read_address [4] <= current_pc[4];
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) \mem_if.read_address [5] <= 1'h0;
    else if (_00_) \mem_if.read_address [5] <= current_pc[5];
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) \mem_if.read_address [6] <= 1'h0;
    else if (_00_) \mem_if.read_address [6] <= current_pc[6];
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) \mem_if.read_address [7] <= 1'h0;
    else if (_00_) \mem_if.read_address [7] <= current_pc[7];
  reg \fetcher_state_reg[0] ;
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) \fetcher_state_reg[0]  <= 1'h0;
    else if (_03_) \fetcher_state_reg[0]  <= _16_[0];
  assign fetcher_state[0] = \fetcher_state_reg[0] ;
  reg \fetcher_state_reg[1] ;
  (* src = "../build/gpu.v:1035.2-1059.11" *)
  always @(posedge clk)
    if (reset) \fetcher_state_reg[1]  <= 1'h0;
    else if (_03_) \fetcher_state_reg[1]  <= _16_[1];
  assign fetcher_state[1] = \fetcher_state_reg[1] ;
  assign fetcher_state[2] = 1'h0;
  assign \mem_if.read_data  = mem_read_data;
  assign \mem_if.read_ready  = mem_read_ready;
  assign mem_read_address = \mem_if.read_address ;
  assign mem_read_valid = \mem_if.read_valid ;
  assign sv2v_tmp_9FB2F = \mem_if.read_address ;
  assign sv2v_tmp_AF88B = \mem_if.read_valid ;
endmodule

(* dynports =  1  *)
(* hdlname = "registers" *)
(* src = "../build/gpu.v:1474.1-1549.10" *)
module \$paramod$c5a88488bedb7a9c9866110c9eda41ee27775c76\registers (clk, reset, enable, block_id, core_state, decoded_rd_address, decoded_rs_address, decoded_rt_address, decoded_reg_write_enable, decoded_reg_input_mux, decoded_immediate, alu_out, lsu_out, rs, rt);
  wire [7:0] _000_;
  wire [7:0] _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  wire _264_;
  wire _265_;
  wire _266_;
  wire _267_;
  wire _268_;
  wire _269_;
  wire _270_;
  wire _271_;
  wire _272_;
  wire _273_;
  wire _274_;
  wire _275_;
  wire _276_;
  wire _277_;
  wire _278_;
  wire _279_;
  wire _280_;
  wire _281_;
  wire _282_;
  wire _283_;
  wire _284_;
  wire _285_;
  wire _286_;
  wire _287_;
  wire _288_;
  wire _289_;
  wire _290_;
  wire _291_;
  wire _292_;
  wire _293_;
  wire _294_;
  wire _295_;
  wire _296_;
  wire _297_;
  wire _298_;
  wire _299_;
  wire _300_;
  wire _301_;
  wire _302_;
  wire _303_;
  wire _304_;
  wire _305_;
  wire _306_;
  wire _307_;
  wire _308_;
  wire _309_;
  wire _310_;
  wire _311_;
  wire _312_;
  wire _313_;
  wire _314_;
  wire _315_;
  wire _316_;
  wire _317_;
  wire _318_;
  wire _319_;
  wire _320_;
  wire _321_;
  wire _322_;
  wire _323_;
  wire _324_;
  wire _325_;
  wire _326_;
  wire _327_;
  wire _328_;
  wire _329_;
  wire _330_;
  wire _331_;
  wire _332_;
  wire _333_;
  wire _334_;
  wire _335_;
  wire _336_;
  wire _337_;
  wire _338_;
  wire _339_;
  wire _340_;
  wire _341_;
  (* src = "../build/gpu.v:1505.31-1505.38" *)
  input [7:0] alu_out;
  wire [7:0] alu_out;
  (* src = "../build/gpu.v:1497.19-1497.27" *)
  input [7:0] block_id;
  wire [7:0] block_id;
  (* src = "../build/gpu.v:1494.13-1494.16" *)
  input clk;
  wire clk;
  (* src = "../build/gpu.v:1498.19-1498.29" *)
  input [2:0] core_state;
  wire [2:0] core_state;
  (* src = "../build/gpu.v:1504.31-1504.48" *)
  input [7:0] decoded_immediate;
  wire [7:0] decoded_immediate;
  (* src = "../build/gpu.v:1499.19-1499.37" *)
  input [3:0] decoded_rd_address;
  wire [3:0] decoded_rd_address;
  (* src = "../build/gpu.v:1503.19-1503.40" *)
  input [1:0] decoded_reg_input_mux;
  wire [1:0] decoded_reg_input_mux;
  (* src = "../build/gpu.v:1502.13-1502.37" *)
  input decoded_reg_write_enable;
  wire decoded_reg_write_enable;
  (* src = "../build/gpu.v:1500.19-1500.37" *)
  input [3:0] decoded_rs_address;
  wire [3:0] decoded_rs_address;
  (* src = "../build/gpu.v:1501.19-1501.37" *)
  input [3:0] decoded_rt_address;
  wire [3:0] decoded_rt_address;
  (* src = "../build/gpu.v:1496.13-1496.19" *)
  input enable;
  wire enable;
  (* src = "../build/gpu.v:1506.31-1506.38" *)
  input [7:0] lsu_out;
  wire [7:0] lsu_out;
  reg [7:0] \registers[0] ;
  reg [7:0] \registers[10] ;
  reg [7:0] \registers[11] ;
  reg [7:0] \registers[12] ;
  reg [7:0] \registers[13] ;
  reg [7:0] \registers[14] ;
  reg [7:0] \registers[15] ;
  reg [7:0] \registers[1] ;
  reg [7:0] \registers[2] ;
  reg [7:0] \registers[3] ;
  reg [7:0] \registers[4] ;
  reg [7:0] \registers[5] ;
  reg [7:0] \registers[6] ;
  reg [7:0] \registers[7] ;
  reg [7:0] \registers[8] ;
  reg [7:0] \registers[9] ;
  (* src = "../build/gpu.v:1495.13-1495.18" *)
  input reset;
  wire reset;
  (* src = "../build/gpu.v:1507.19-1507.21" *)
  output [7:0] rs;
  reg [7:0] rs;
  (* src = "../build/gpu.v:1508.19-1508.21" *)
  output [7:0] rt;
  reg [7:0] rt;
  assign _050_ = decoded_rd_address[0] & ~(decoded_rd_address[1]);
  assign _051_ = decoded_rd_address[2] | ~(decoded_rd_address[3]);
  assign _052_ = _050_ & ~(_051_);
  assign _053_ = ~enable;
  assign _054_ = core_state[1] & ~(core_state[0]);
  assign _055_ = ~(_054_ & core_state[2]);
  assign _056_ = decoded_rd_address[3] & decoded_rd_address[2];
  assign _057_ = ~(decoded_rd_address[0] | decoded_rd_address[1]);
  assign _058_ = _057_ | ~(_056_);
  assign _059_ = ~(_058_ & decoded_reg_write_enable);
  assign _060_ = decoded_reg_input_mux[1] | decoded_reg_input_mux[0];
  assign _061_ = _060_ | _059_;
  assign _062_ = _061_ | _055_;
  assign _063_ = _062_ | _053_;
  assign _064_ = _063_ | reset;
  assign _065_ = decoded_reg_input_mux[1] | ~(decoded_reg_input_mux[0]);
  assign _066_ = _065_ | _059_;
  assign _067_ = _066_ | _055_;
  assign _068_ = _067_ | _053_;
  assign _069_ = _068_ | reset;
  assign _070_ = ~(_069_ & _064_);
  assign _071_ = decoded_reg_input_mux[0] | ~(decoded_reg_input_mux[1]);
  assign _072_ = _071_ | _059_;
  assign _073_ = _072_ | _055_;
  assign _074_ = enable & ~(_073_);
  assign _075_ = _074_ & ~(reset);
  assign _076_ = _075_ | _070_;
  assign _041_ = _076_ & _052_;
  assign _002_ = _041_ | reset;
  assign _077_ = decoded_rd_address[0] | decoded_rd_address[1];
  assign _078_ = _077_ | _051_;
  assign _040_ = _076_ & ~(_078_);
  assign _003_ = _040_ | reset;
  assign _079_ = ~(decoded_rd_address[0] & decoded_rd_address[1]);
  assign _080_ = _079_ | ~(_056_);
  assign _032_ = _076_ & ~(_080_);
  assign _011_ = _032_ | reset;
  assign _081_ = decoded_rd_address[3] | decoded_rd_address[2];
  assign _082_ = _081_ | ~(_050_);
  assign _033_ = _076_ & ~(_082_);
  assign _010_ = _033_ | reset;
  assign _083_ = decoded_rd_address[0] | ~(decoded_rd_address[1]);
  assign _084_ = _083_ | _081_;
  assign _034_ = _076_ & ~(_084_);
  assign _009_ = _034_ | reset;
  assign _085_ = _081_ | _079_;
  assign _035_ = _076_ & ~(_085_);
  assign _008_ = _035_ | reset;
  assign _086_ = _083_ | _051_;
  assign _028_ = _076_ & ~(_086_);
  assign _016_ = _028_ | reset;
  assign _087_ = decoded_rd_address[3] | ~(decoded_rd_address[2]);
  assign _088_ = _087_ | _077_;
  assign _036_ = _076_ & ~(_088_);
  assign _007_ = _036_ | reset;
  assign _089_ = _079_ | _051_;
  assign _029_ = _076_ & ~(_089_);
  assign _015_ = _029_ | reset;
  assign _090_ = _077_ | ~(_056_);
  assign _030_ = _076_ & ~(_090_);
  assign _014_ = _030_ | reset;
  assign _091_ = _087_ | ~(_050_);
  assign _037_ = _076_ & ~(_091_);
  assign _006_ = _037_ | reset;
  assign _092_ = ~(_056_ & _050_);
  assign _093_ = _076_ & ~(_092_);
  assign _094_ = enable | reset;
  assign _013_ = _094_ | _093_;
  assign _095_ = _081_ | _077_;
  assign _027_ = _076_ & ~(_095_);
  assign _017_ = _027_ | reset;
  assign _096_ = _083_ | ~(_056_);
  assign _031_ = _076_ & ~(_096_);
  assign _012_ = _031_ | reset;
  assign _097_ = _087_ | _083_;
  assign _038_ = _076_ & ~(_097_);
  assign _005_ = _038_ | reset;
  assign _098_ = _087_ | _079_;
  assign _039_ = _076_ & ~(_098_);
  assign _004_ = _039_ | reset;
  assign _099_ = ~(core_state[0] & core_state[1]);
  assign _100_ = _099_ | core_state[2];
  assign _018_ = enable & ~(_100_);
  assign _101_ = _069_ ? alu_out[0] : lsu_out[0];
  assign _019_ = _075_ ? decoded_immediate[0] : _101_;
  assign _102_ = reset | ~(enable);
  assign _103_ = block_id[0] & ~(_102_);
  assign _042_ = _093_ ? _019_ : _103_;
  assign _104_ = _069_ ? alu_out[1] : lsu_out[1];
  assign _020_ = _075_ ? decoded_immediate[1] : _104_;
  assign _105_ = block_id[1] & ~(_102_);
  assign _043_ = _093_ ? _020_ : _105_;
  assign _106_ = _069_ ? alu_out[2] : lsu_out[2];
  assign _021_ = _075_ ? decoded_immediate[2] : _106_;
  assign _107_ = block_id[2] & ~(_102_);
  assign _044_ = _093_ ? _021_ : _107_;
  assign _108_ = _069_ ? alu_out[3] : lsu_out[3];
  assign _022_ = _075_ ? decoded_immediate[3] : _108_;
  assign _109_ = block_id[3] & ~(_102_);
  assign _045_ = _093_ ? _022_ : _109_;
  assign _110_ = _069_ ? alu_out[4] : lsu_out[4];
  assign _023_ = _075_ ? decoded_immediate[4] : _110_;
  assign _111_ = block_id[4] & ~(_102_);
  assign _046_ = _093_ ? _023_ : _111_;
  assign _112_ = _069_ ? alu_out[5] : lsu_out[5];
  assign _024_ = _075_ ? decoded_immediate[5] : _112_;
  assign _113_ = block_id[5] & ~(_102_);
  assign _047_ = _093_ ? _024_ : _113_;
  assign _114_ = _069_ ? alu_out[6] : lsu_out[6];
  assign _025_ = _075_ ? decoded_immediate[6] : _114_;
  assign _115_ = block_id[6] & ~(_102_);
  assign _048_ = _093_ ? _025_ : _115_;
  assign _116_ = _069_ ? alu_out[7] : lsu_out[7];
  assign _026_ = _075_ ? decoded_immediate[7] : _116_;
  assign _117_ = block_id[7] & ~(_102_);
  assign _049_ = _093_ ? _026_ : _117_;
  assign _118_ = decoded_rs_address[0] ? \registers[1] [0] : \registers[0] [0];
  assign _119_ = decoded_rs_address[0] ? \registers[3] [0] : \registers[2] [0];
  assign _120_ = decoded_rs_address[1] ? _119_ : _118_;
  assign _121_ = decoded_rs_address[0] ? \registers[5] [0] : \registers[4] [0];
  assign _122_ = decoded_rs_address[0] ? \registers[7] [0] : \registers[6] [0];
  assign _123_ = decoded_rs_address[1] ? _122_ : _121_;
  assign _124_ = decoded_rs_address[2] ? _123_ : _120_;
  assign _125_ = decoded_rs_address[0] ? \registers[9] [0] : \registers[8] [0];
  assign _126_ = decoded_rs_address[0] ? \registers[11] [0] : \registers[10] [0];
  assign _127_ = decoded_rs_address[1] ? _126_ : _125_;
  assign _128_ = decoded_rs_address[0] ? \registers[13] [0] : \registers[12] [0];
  assign _129_ = decoded_rs_address[0] ? \registers[15] [0] : \registers[14] [0];
  assign _130_ = decoded_rs_address[1] ? _129_ : _128_;
  assign _131_ = decoded_rs_address[2] ? _130_ : _127_;
  assign _001_[0] = decoded_rs_address[3] ? _131_ : _124_;
  assign _132_ = decoded_rs_address[0] ? \registers[1] [1] : \registers[0] [1];
  assign _133_ = decoded_rs_address[0] ? \registers[3] [1] : \registers[2] [1];
  assign _134_ = decoded_rs_address[1] ? _133_ : _132_;
  assign _135_ = decoded_rs_address[0] ? \registers[5] [1] : \registers[4] [1];
  assign _136_ = decoded_rs_address[0] ? \registers[7] [1] : \registers[6] [1];
  assign _137_ = decoded_rs_address[1] ? _136_ : _135_;
  assign _138_ = decoded_rs_address[2] ? _137_ : _134_;
  assign _139_ = decoded_rs_address[0] ? \registers[9] [1] : \registers[8] [1];
  assign _140_ = decoded_rs_address[0] ? \registers[11] [1] : \registers[10] [1];
  assign _141_ = decoded_rs_address[1] ? _140_ : _139_;
  assign _142_ = decoded_rs_address[0] ? \registers[13] [1] : \registers[12] [1];
  assign _143_ = decoded_rs_address[0] ? \registers[15] [1] : \registers[14] [1];
  assign _144_ = decoded_rs_address[1] ? _143_ : _142_;
  assign _145_ = decoded_rs_address[2] ? _144_ : _141_;
  assign _001_[1] = decoded_rs_address[3] ? _145_ : _138_;
  assign _146_ = decoded_rs_address[0] ? \registers[1] [2] : \registers[0] [2];
  assign _147_ = decoded_rs_address[0] ? \registers[3] [2] : \registers[2] [2];
  assign _148_ = decoded_rs_address[1] ? _147_ : _146_;
  assign _149_ = decoded_rs_address[0] ? \registers[5] [2] : \registers[4] [2];
  assign _150_ = decoded_rs_address[0] ? \registers[7] [2] : \registers[6] [2];
  assign _151_ = decoded_rs_address[1] ? _150_ : _149_;
  assign _152_ = decoded_rs_address[2] ? _151_ : _148_;
  assign _153_ = decoded_rs_address[0] ? \registers[9] [2] : \registers[8] [2];
  assign _154_ = decoded_rs_address[0] ? \registers[11] [2] : \registers[10] [2];
  assign _155_ = decoded_rs_address[1] ? _154_ : _153_;
  assign _156_ = decoded_rs_address[0] ? \registers[13] [2] : \registers[12] [2];
  assign _157_ = decoded_rs_address[0] ? \registers[15] [2] : \registers[14] [2];
  assign _158_ = decoded_rs_address[1] ? _157_ : _156_;
  assign _159_ = decoded_rs_address[2] ? _158_ : _155_;
  assign _001_[2] = decoded_rs_address[3] ? _159_ : _152_;
  assign _160_ = decoded_rs_address[0] ? \registers[1] [3] : \registers[0] [3];
  assign _161_ = decoded_rs_address[0] ? \registers[3] [3] : \registers[2] [3];
  assign _162_ = decoded_rs_address[1] ? _161_ : _160_;
  assign _163_ = decoded_rs_address[0] ? \registers[5] [3] : \registers[4] [3];
  assign _164_ = decoded_rs_address[0] ? \registers[7] [3] : \registers[6] [3];
  assign _165_ = decoded_rs_address[1] ? _164_ : _163_;
  assign _166_ = decoded_rs_address[2] ? _165_ : _162_;
  assign _167_ = decoded_rs_address[0] ? \registers[9] [3] : \registers[8] [3];
  assign _168_ = decoded_rs_address[0] ? \registers[11] [3] : \registers[10] [3];
  assign _169_ = decoded_rs_address[1] ? _168_ : _167_;
  assign _170_ = decoded_rs_address[0] ? \registers[13] [3] : \registers[12] [3];
  assign _171_ = decoded_rs_address[0] ? \registers[15] [3] : \registers[14] [3];
  assign _172_ = decoded_rs_address[1] ? _171_ : _170_;
  assign _173_ = decoded_rs_address[2] ? _172_ : _169_;
  assign _001_[3] = decoded_rs_address[3] ? _173_ : _166_;
  assign _174_ = decoded_rs_address[0] ? \registers[1] [4] : \registers[0] [4];
  assign _175_ = decoded_rs_address[0] ? \registers[3] [4] : \registers[2] [4];
  assign _176_ = decoded_rs_address[1] ? _175_ : _174_;
  assign _177_ = decoded_rs_address[0] ? \registers[5] [4] : \registers[4] [4];
  assign _178_ = decoded_rs_address[0] ? \registers[7] [4] : \registers[6] [4];
  assign _179_ = decoded_rs_address[1] ? _178_ : _177_;
  assign _180_ = decoded_rs_address[2] ? _179_ : _176_;
  assign _181_ = decoded_rs_address[0] ? \registers[9] [4] : \registers[8] [4];
  assign _182_ = decoded_rs_address[0] ? \registers[11] [4] : \registers[10] [4];
  assign _183_ = decoded_rs_address[1] ? _182_ : _181_;
  assign _184_ = decoded_rs_address[0] ? \registers[13] [4] : \registers[12] [4];
  assign _185_ = decoded_rs_address[0] ? \registers[15] [4] : \registers[14] [4];
  assign _186_ = decoded_rs_address[1] ? _185_ : _184_;
  assign _187_ = decoded_rs_address[2] ? _186_ : _183_;
  assign _001_[4] = decoded_rs_address[3] ? _187_ : _180_;
  assign _188_ = decoded_rs_address[0] ? \registers[1] [5] : \registers[0] [5];
  assign _189_ = decoded_rs_address[0] ? \registers[3] [5] : \registers[2] [5];
  assign _190_ = decoded_rs_address[1] ? _189_ : _188_;
  assign _191_ = decoded_rs_address[0] ? \registers[5] [5] : \registers[4] [5];
  assign _192_ = decoded_rs_address[0] ? \registers[7] [5] : \registers[6] [5];
  assign _193_ = decoded_rs_address[1] ? _192_ : _191_;
  assign _194_ = decoded_rs_address[2] ? _193_ : _190_;
  assign _195_ = decoded_rs_address[0] ? \registers[9] [5] : \registers[8] [5];
  assign _196_ = decoded_rs_address[0] ? \registers[11] [5] : \registers[10] [5];
  assign _197_ = decoded_rs_address[1] ? _196_ : _195_;
  assign _198_ = decoded_rs_address[0] ? \registers[13] [5] : \registers[12] [5];
  assign _199_ = decoded_rs_address[0] ? \registers[15] [5] : \registers[14] [5];
  assign _200_ = decoded_rs_address[1] ? _199_ : _198_;
  assign _201_ = decoded_rs_address[2] ? _200_ : _197_;
  assign _001_[5] = decoded_rs_address[3] ? _201_ : _194_;
  assign _202_ = decoded_rs_address[0] ? \registers[1] [6] : \registers[0] [6];
  assign _203_ = decoded_rs_address[0] ? \registers[3] [6] : \registers[2] [6];
  assign _204_ = decoded_rs_address[1] ? _203_ : _202_;
  assign _205_ = decoded_rs_address[0] ? \registers[5] [6] : \registers[4] [6];
  assign _206_ = decoded_rs_address[0] ? \registers[7] [6] : \registers[6] [6];
  assign _207_ = decoded_rs_address[1] ? _206_ : _205_;
  assign _208_ = decoded_rs_address[2] ? _207_ : _204_;
  assign _209_ = decoded_rs_address[0] ? \registers[9] [6] : \registers[8] [6];
  assign _210_ = decoded_rs_address[0] ? \registers[11] [6] : \registers[10] [6];
  assign _211_ = decoded_rs_address[1] ? _210_ : _209_;
  assign _212_ = decoded_rs_address[0] ? \registers[13] [6] : \registers[12] [6];
  assign _213_ = decoded_rs_address[0] ? \registers[15] [6] : \registers[14] [6];
  assign _214_ = decoded_rs_address[1] ? _213_ : _212_;
  assign _215_ = decoded_rs_address[2] ? _214_ : _211_;
  assign _001_[6] = decoded_rs_address[3] ? _215_ : _208_;
  assign _216_ = decoded_rs_address[0] ? \registers[1] [7] : \registers[0] [7];
  assign _217_ = decoded_rs_address[0] ? \registers[3] [7] : \registers[2] [7];
  assign _218_ = decoded_rs_address[1] ? _217_ : _216_;
  assign _219_ = decoded_rs_address[0] ? \registers[5] [7] : \registers[4] [7];
  assign _220_ = decoded_rs_address[0] ? \registers[7] [7] : \registers[6] [7];
  assign _221_ = decoded_rs_address[1] ? _220_ : _219_;
  assign _222_ = decoded_rs_address[2] ? _221_ : _218_;
  assign _223_ = decoded_rs_address[0] ? \registers[9] [7] : \registers[8] [7];
  assign _224_ = decoded_rs_address[0] ? \registers[11] [7] : \registers[10] [7];
  assign _225_ = decoded_rs_address[1] ? _224_ : _223_;
  assign _226_ = decoded_rs_address[0] ? \registers[13] [7] : \registers[12] [7];
  assign _227_ = decoded_rs_address[0] ? \registers[15] [7] : \registers[14] [7];
  assign _228_ = decoded_rs_address[1] ? _227_ : _226_;
  assign _229_ = decoded_rs_address[2] ? _228_ : _225_;
  assign _001_[7] = decoded_rs_address[3] ? _229_ : _222_;
  assign _230_ = decoded_rt_address[0] ? \registers[1] [0] : \registers[0] [0];
  assign _231_ = decoded_rt_address[0] ? \registers[3] [0] : \registers[2] [0];
  assign _232_ = decoded_rt_address[1] ? _231_ : _230_;
  assign _233_ = decoded_rt_address[0] ? \registers[5] [0] : \registers[4] [0];
  assign _234_ = decoded_rt_address[0] ? \registers[7] [0] : \registers[6] [0];
  assign _235_ = decoded_rt_address[1] ? _234_ : _233_;
  assign _236_ = decoded_rt_address[2] ? _235_ : _232_;
  assign _237_ = decoded_rt_address[0] ? \registers[9] [0] : \registers[8] [0];
  assign _238_ = decoded_rt_address[0] ? \registers[11] [0] : \registers[10] [0];
  assign _239_ = decoded_rt_address[1] ? _238_ : _237_;
  assign _240_ = decoded_rt_address[0] ? \registers[13] [0] : \registers[12] [0];
  assign _241_ = decoded_rt_address[0] ? \registers[15] [0] : \registers[14] [0];
  assign _242_ = decoded_rt_address[1] ? _241_ : _240_;
  assign _243_ = decoded_rt_address[2] ? _242_ : _239_;
  assign _000_[0] = decoded_rt_address[3] ? _243_ : _236_;
  assign _244_ = decoded_rt_address[0] ? \registers[1] [1] : \registers[0] [1];
  assign _245_ = decoded_rt_address[0] ? \registers[3] [1] : \registers[2] [1];
  assign _246_ = decoded_rt_address[1] ? _245_ : _244_;
  assign _247_ = decoded_rt_address[0] ? \registers[5] [1] : \registers[4] [1];
  assign _248_ = decoded_rt_address[0] ? \registers[7] [1] : \registers[6] [1];
  assign _249_ = decoded_rt_address[1] ? _248_ : _247_;
  assign _250_ = decoded_rt_address[2] ? _249_ : _246_;
  assign _251_ = decoded_rt_address[0] ? \registers[9] [1] : \registers[8] [1];
  assign _252_ = decoded_rt_address[0] ? \registers[11] [1] : \registers[10] [1];
  assign _253_ = decoded_rt_address[1] ? _252_ : _251_;
  assign _254_ = decoded_rt_address[0] ? \registers[13] [1] : \registers[12] [1];
  assign _255_ = decoded_rt_address[0] ? \registers[15] [1] : \registers[14] [1];
  assign _256_ = decoded_rt_address[1] ? _255_ : _254_;
  assign _257_ = decoded_rt_address[2] ? _256_ : _253_;
  assign _000_[1] = decoded_rt_address[3] ? _257_ : _250_;
  assign _258_ = decoded_rt_address[0] ? \registers[1] [2] : \registers[0] [2];
  assign _259_ = decoded_rt_address[0] ? \registers[3] [2] : \registers[2] [2];
  assign _260_ = decoded_rt_address[1] ? _259_ : _258_;
  assign _261_ = decoded_rt_address[0] ? \registers[5] [2] : \registers[4] [2];
  assign _262_ = decoded_rt_address[0] ? \registers[7] [2] : \registers[6] [2];
  assign _263_ = decoded_rt_address[1] ? _262_ : _261_;
  assign _264_ = decoded_rt_address[2] ? _263_ : _260_;
  assign _265_ = decoded_rt_address[0] ? \registers[9] [2] : \registers[8] [2];
  assign _266_ = decoded_rt_address[0] ? \registers[11] [2] : \registers[10] [2];
  assign _267_ = decoded_rt_address[1] ? _266_ : _265_;
  assign _268_ = decoded_rt_address[0] ? \registers[13] [2] : \registers[12] [2];
  assign _269_ = decoded_rt_address[0] ? \registers[15] [2] : \registers[14] [2];
  assign _270_ = decoded_rt_address[1] ? _269_ : _268_;
  assign _271_ = decoded_rt_address[2] ? _270_ : _267_;
  assign _000_[2] = decoded_rt_address[3] ? _271_ : _264_;
  assign _272_ = decoded_rt_address[0] ? \registers[1] [3] : \registers[0] [3];
  assign _273_ = decoded_rt_address[0] ? \registers[3] [3] : \registers[2] [3];
  assign _274_ = decoded_rt_address[1] ? _273_ : _272_;
  assign _275_ = decoded_rt_address[0] ? \registers[5] [3] : \registers[4] [3];
  assign _276_ = decoded_rt_address[0] ? \registers[7] [3] : \registers[6] [3];
  assign _277_ = decoded_rt_address[1] ? _276_ : _275_;
  assign _278_ = decoded_rt_address[2] ? _277_ : _274_;
  assign _279_ = decoded_rt_address[0] ? \registers[9] [3] : \registers[8] [3];
  assign _280_ = decoded_rt_address[0] ? \registers[11] [3] : \registers[10] [3];
  assign _281_ = decoded_rt_address[1] ? _280_ : _279_;
  assign _282_ = decoded_rt_address[0] ? \registers[13] [3] : \registers[12] [3];
  assign _283_ = decoded_rt_address[0] ? \registers[15] [3] : \registers[14] [3];
  assign _284_ = decoded_rt_address[1] ? _283_ : _282_;
  assign _285_ = decoded_rt_address[2] ? _284_ : _281_;
  assign _000_[3] = decoded_rt_address[3] ? _285_ : _278_;
  assign _286_ = decoded_rt_address[0] ? \registers[1] [4] : \registers[0] [4];
  assign _287_ = decoded_rt_address[0] ? \registers[3] [4] : \registers[2] [4];
  assign _288_ = decoded_rt_address[1] ? _287_ : _286_;
  assign _289_ = decoded_rt_address[0] ? \registers[5] [4] : \registers[4] [4];
  assign _290_ = decoded_rt_address[0] ? \registers[7] [4] : \registers[6] [4];
  assign _291_ = decoded_rt_address[1] ? _290_ : _289_;
  assign _292_ = decoded_rt_address[2] ? _291_ : _288_;
  assign _293_ = decoded_rt_address[0] ? \registers[9] [4] : \registers[8] [4];
  assign _294_ = decoded_rt_address[0] ? \registers[11] [4] : \registers[10] [4];
  assign _295_ = decoded_rt_address[1] ? _294_ : _293_;
  assign _296_ = decoded_rt_address[0] ? \registers[13] [4] : \registers[12] [4];
  assign _297_ = decoded_rt_address[0] ? \registers[15] [4] : \registers[14] [4];
  assign _298_ = decoded_rt_address[1] ? _297_ : _296_;
  assign _299_ = decoded_rt_address[2] ? _298_ : _295_;
  assign _000_[4] = decoded_rt_address[3] ? _299_ : _292_;
  assign _300_ = decoded_rt_address[0] ? \registers[1] [5] : \registers[0] [5];
  assign _301_ = decoded_rt_address[0] ? \registers[3] [5] : \registers[2] [5];
  assign _302_ = decoded_rt_address[1] ? _301_ : _300_;
  assign _303_ = decoded_rt_address[0] ? \registers[5] [5] : \registers[4] [5];
  assign _304_ = decoded_rt_address[0] ? \registers[7] [5] : \registers[6] [5];
  assign _305_ = decoded_rt_address[1] ? _304_ : _303_;
  assign _306_ = decoded_rt_address[2] ? _305_ : _302_;
  assign _307_ = decoded_rt_address[0] ? \registers[9] [5] : \registers[8] [5];
  assign _308_ = decoded_rt_address[0] ? \registers[11] [5] : \registers[10] [5];
  assign _309_ = decoded_rt_address[1] ? _308_ : _307_;
  assign _310_ = decoded_rt_address[0] ? \registers[13] [5] : \registers[12] [5];
  assign _311_ = decoded_rt_address[0] ? \registers[15] [5] : \registers[14] [5];
  assign _312_ = decoded_rt_address[1] ? _311_ : _310_;
  assign _313_ = decoded_rt_address[2] ? _312_ : _309_;
  assign _000_[5] = decoded_rt_address[3] ? _313_ : _306_;
  assign _314_ = decoded_rt_address[0] ? \registers[1] [6] : \registers[0] [6];
  assign _315_ = decoded_rt_address[0] ? \registers[3] [6] : \registers[2] [6];
  assign _316_ = decoded_rt_address[1] ? _315_ : _314_;
  assign _317_ = decoded_rt_address[0] ? \registers[5] [6] : \registers[4] [6];
  assign _318_ = decoded_rt_address[0] ? \registers[7] [6] : \registers[6] [6];
  assign _319_ = decoded_rt_address[1] ? _318_ : _317_;
  assign _320_ = decoded_rt_address[2] ? _319_ : _316_;
  assign _321_ = decoded_rt_address[0] ? \registers[9] [6] : \registers[8] [6];
  assign _322_ = decoded_rt_address[0] ? \registers[11] [6] : \registers[10] [6];
  assign _323_ = decoded_rt_address[1] ? _322_ : _321_;
  assign _324_ = decoded_rt_address[0] ? \registers[13] [6] : \registers[12] [6];
  assign _325_ = decoded_rt_address[0] ? \registers[15] [6] : \registers[14] [6];
  assign _326_ = decoded_rt_address[1] ? _325_ : _324_;
  assign _327_ = decoded_rt_address[2] ? _326_ : _323_;
  assign _000_[6] = decoded_rt_address[3] ? _327_ : _320_;
  assign _328_ = decoded_rt_address[0] ? \registers[1] [7] : \registers[0] [7];
  assign _329_ = decoded_rt_address[0] ? \registers[3] [7] : \registers[2] [7];
  assign _330_ = decoded_rt_address[1] ? _329_ : _328_;
  assign _331_ = decoded_rt_address[0] ? \registers[5] [7] : \registers[4] [7];
  assign _332_ = decoded_rt_address[0] ? \registers[7] [7] : \registers[6] [7];
  assign _333_ = decoded_rt_address[1] ? _332_ : _331_;
  assign _334_ = decoded_rt_address[2] ? _333_ : _330_;
  assign _335_ = decoded_rt_address[0] ? \registers[9] [7] : \registers[8] [7];
  assign _336_ = decoded_rt_address[0] ? \registers[11] [7] : \registers[10] [7];
  assign _337_ = decoded_rt_address[1] ? _336_ : _335_;
  assign _338_ = decoded_rt_address[0] ? \registers[13] [7] : \registers[12] [7];
  assign _339_ = decoded_rt_address[0] ? \registers[15] [7] : \registers[14] [7];
  assign _340_ = decoded_rt_address[1] ? _339_ : _338_;
  assign _341_ = decoded_rt_address[2] ? _340_ : _337_;
  assign _000_[7] = decoded_rt_address[3] ? _341_ : _334_;
  always @(posedge clk)
    if (reset) rs[0] <= 1'h0;
    else if (_018_) rs[0] <= _001_[0];
  always @(posedge clk)
    if (reset) rs[1] <= 1'h0;
    else if (_018_) rs[1] <= _001_[1];
  always @(posedge clk)
    if (reset) rs[2] <= 1'h0;
    else if (_018_) rs[2] <= _001_[2];
  always @(posedge clk)
    if (reset) rs[3] <= 1'h0;
    else if (_018_) rs[3] <= _001_[3];
  always @(posedge clk)
    if (reset) rs[4] <= 1'h0;
    else if (_018_) rs[4] <= _001_[4];
  always @(posedge clk)
    if (reset) rs[5] <= 1'h0;
    else if (_018_) rs[5] <= _001_[5];
  always @(posedge clk)
    if (reset) rs[6] <= 1'h0;
    else if (_018_) rs[6] <= _001_[6];
  always @(posedge clk)
    if (reset) rs[7] <= 1'h0;
    else if (_018_) rs[7] <= _001_[7];
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [0] <= 1'h0;
      else \registers[3] [0] <= _019_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [1] <= 1'h0;
      else \registers[3] [1] <= _020_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [2] <= 1'h0;
      else \registers[3] [2] <= _021_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [3] <= 1'h0;
      else \registers[3] [3] <= _022_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [4] <= 1'h0;
      else \registers[3] [4] <= _023_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [5] <= 1'h0;
      else \registers[3] [5] <= _024_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [6] <= 1'h0;
      else \registers[3] [6] <= _025_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [7] <= 1'h0;
      else \registers[3] [7] <= _026_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [0] <= 1'h0;
      else \registers[10] [0] <= _019_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [1] <= 1'h0;
      else \registers[10] [1] <= _020_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [2] <= 1'h0;
      else \registers[10] [2] <= _021_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [3] <= 1'h0;
      else \registers[10] [3] <= _022_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [4] <= 1'h0;
      else \registers[10] [4] <= _023_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [5] <= 1'h0;
      else \registers[10] [5] <= _024_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [6] <= 1'h0;
      else \registers[10] [6] <= _025_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [7] <= 1'h0;
      else \registers[10] [7] <= _026_;
  always @(posedge clk)
    if (_013_) \registers[13] [0] <= _042_;
  always @(posedge clk)
    if (_013_) \registers[13] [1] <= _043_;
  always @(posedge clk)
    if (_013_) \registers[13] [2] <= _044_;
  always @(posedge clk)
    if (_013_) \registers[13] [3] <= _045_;
  always @(posedge clk)
    if (_013_) \registers[13] [4] <= _046_;
  always @(posedge clk)
    if (_013_) \registers[13] [5] <= _047_;
  always @(posedge clk)
    if (_013_) \registers[13] [6] <= _048_;
  always @(posedge clk)
    if (_013_) \registers[13] [7] <= _049_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [0] <= 1'h0;
      else \registers[5] [0] <= _019_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [1] <= 1'h0;
      else \registers[5] [1] <= _020_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [2] <= 1'h0;
      else \registers[5] [2] <= _021_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [3] <= 1'h0;
      else \registers[5] [3] <= _022_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [4] <= 1'h0;
      else \registers[5] [4] <= _023_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [5] <= 1'h0;
      else \registers[5] [5] <= _024_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [6] <= 1'h0;
      else \registers[5] [6] <= _025_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [7] <= 1'h0;
      else \registers[5] [7] <= _026_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [0] <= 1'h0;
      else \registers[4] [0] <= _019_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [1] <= 1'h0;
      else \registers[4] [1] <= _020_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [2] <= 1'h0;
      else \registers[4] [2] <= _021_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [3] <= 1'h0;
      else \registers[4] [3] <= _022_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [4] <= 1'h0;
      else \registers[4] [4] <= _023_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [5] <= 1'h0;
      else \registers[4] [5] <= _024_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [6] <= 1'h0;
      else \registers[4] [6] <= _025_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [7] <= 1'h0;
      else \registers[4] [7] <= _026_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [0] <= 1'h0;
      else \registers[6] [0] <= _019_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [1] <= 1'h0;
      else \registers[6] [1] <= _020_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [2] <= 1'h0;
      else \registers[6] [2] <= _021_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [3] <= 1'h0;
      else \registers[6] [3] <= _022_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [4] <= 1'h0;
      else \registers[6] [4] <= _023_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [5] <= 1'h0;
      else \registers[6] [5] <= _024_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [6] <= 1'h0;
      else \registers[6] [6] <= _025_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [7] <= 1'h0;
      else \registers[6] [7] <= _026_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [0] <= 1'h0;
      else \registers[11] [0] <= _019_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [1] <= 1'h0;
      else \registers[11] [1] <= _020_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [2] <= 1'h0;
      else \registers[11] [2] <= _021_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [3] <= 1'h0;
      else \registers[11] [3] <= _022_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [4] <= 1'h0;
      else \registers[11] [4] <= _023_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [5] <= 1'h0;
      else \registers[11] [5] <= _024_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [6] <= 1'h0;
      else \registers[11] [6] <= _025_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [7] <= 1'h0;
      else \registers[11] [7] <= _026_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [0] <= 1'h0;
      else \registers[7] [0] <= _019_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [1] <= 1'h0;
      else \registers[7] [1] <= _020_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [2] <= 1'h0;
      else \registers[7] [2] <= _021_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [3] <= 1'h0;
      else \registers[7] [3] <= _022_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [4] <= 1'h0;
      else \registers[7] [4] <= _023_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [5] <= 1'h0;
      else \registers[7] [5] <= _024_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [6] <= 1'h0;
      else \registers[7] [6] <= _025_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [7] <= 1'h0;
      else \registers[7] [7] <= _026_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [0] <= 1'h0;
      else \registers[14] [0] <= _019_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [1] <= 1'h0;
      else \registers[14] [1] <= _020_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [2] <= 1'h1;
      else \registers[14] [2] <= _021_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [3] <= 1'h0;
      else \registers[14] [3] <= _022_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [4] <= 1'h0;
      else \registers[14] [4] <= _023_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [5] <= 1'h0;
      else \registers[14] [5] <= _024_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [6] <= 1'h0;
      else \registers[14] [6] <= _025_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [7] <= 1'h0;
      else \registers[14] [7] <= _026_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [0] <= 1'h0;
      else \registers[12] [0] <= _019_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [1] <= 1'h0;
      else \registers[12] [1] <= _020_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [2] <= 1'h0;
      else \registers[12] [2] <= _021_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [3] <= 1'h0;
      else \registers[12] [3] <= _022_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [4] <= 1'h0;
      else \registers[12] [4] <= _023_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [5] <= 1'h0;
      else \registers[12] [5] <= _024_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [6] <= 1'h0;
      else \registers[12] [6] <= _025_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [7] <= 1'h0;
      else \registers[12] [7] <= _026_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [0] <= 1'h0;
      else \registers[2] [0] <= _019_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [1] <= 1'h0;
      else \registers[2] [1] <= _020_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [2] <= 1'h0;
      else \registers[2] [2] <= _021_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [3] <= 1'h0;
      else \registers[2] [3] <= _022_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [4] <= 1'h0;
      else \registers[2] [4] <= _023_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [5] <= 1'h0;
      else \registers[2] [5] <= _024_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [6] <= 1'h0;
      else \registers[2] [6] <= _025_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [7] <= 1'h0;
      else \registers[2] [7] <= _026_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [0] <= 1'h0;
      else \registers[8] [0] <= _019_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [1] <= 1'h0;
      else \registers[8] [1] <= _020_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [2] <= 1'h0;
      else \registers[8] [2] <= _021_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [3] <= 1'h0;
      else \registers[8] [3] <= _022_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [4] <= 1'h0;
      else \registers[8] [4] <= _023_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [5] <= 1'h0;
      else \registers[8] [5] <= _024_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [6] <= 1'h0;
      else \registers[8] [6] <= _025_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [7] <= 1'h0;
      else \registers[8] [7] <= _026_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [0] <= 1'h0;
      else \registers[0] [0] <= _019_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [1] <= 1'h0;
      else \registers[0] [1] <= _020_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [2] <= 1'h0;
      else \registers[0] [2] <= _021_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [3] <= 1'h0;
      else \registers[0] [3] <= _022_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [4] <= 1'h0;
      else \registers[0] [4] <= _023_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [5] <= 1'h0;
      else \registers[0] [5] <= _024_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [6] <= 1'h0;
      else \registers[0] [6] <= _025_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [7] <= 1'h0;
      else \registers[0] [7] <= _026_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [0] <= 1'h0;
      else \registers[9] [0] <= _019_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [1] <= 1'h0;
      else \registers[9] [1] <= _020_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [2] <= 1'h0;
      else \registers[9] [2] <= _021_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [3] <= 1'h0;
      else \registers[9] [3] <= _022_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [4] <= 1'h0;
      else \registers[9] [4] <= _023_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [5] <= 1'h0;
      else \registers[9] [5] <= _024_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [6] <= 1'h0;
      else \registers[9] [6] <= _025_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [7] <= 1'h0;
      else \registers[9] [7] <= _026_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [0] <= 1'h0;
      else \registers[1] [0] <= _019_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [1] <= 1'h0;
      else \registers[1] [1] <= _020_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [2] <= 1'h0;
      else \registers[1] [2] <= _021_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [3] <= 1'h0;
      else \registers[1] [3] <= _022_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [4] <= 1'h0;
      else \registers[1] [4] <= _023_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [5] <= 1'h0;
      else \registers[1] [5] <= _024_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [6] <= 1'h0;
      else \registers[1] [6] <= _025_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [7] <= 1'h0;
      else \registers[1] [7] <= _026_;
  always @(posedge clk)
    if (reset) rt[0] <= 1'h0;
    else if (_018_) rt[0] <= _000_[0];
  always @(posedge clk)
    if (reset) rt[1] <= 1'h0;
    else if (_018_) rt[1] <= _000_[1];
  always @(posedge clk)
    if (reset) rt[2] <= 1'h0;
    else if (_018_) rt[2] <= _000_[2];
  always @(posedge clk)
    if (reset) rt[3] <= 1'h0;
    else if (_018_) rt[3] <= _000_[3];
  always @(posedge clk)
    if (reset) rt[4] <= 1'h0;
    else if (_018_) rt[4] <= _000_[4];
  always @(posedge clk)
    if (reset) rt[5] <= 1'h0;
    else if (_018_) rt[5] <= _000_[5];
  always @(posedge clk)
    if (reset) rt[6] <= 1'h0;
    else if (_018_) rt[6] <= _000_[6];
  always @(posedge clk)
    if (reset) rt[7] <= 1'h0;
    else if (_018_) rt[7] <= _000_[7];
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [0] <= 1'h0;
      else \registers[15] [0] <= _019_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [1] <= 1'h0;
      else \registers[15] [1] <= _020_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [2] <= 1'h0;
      else \registers[15] [2] <= _021_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [3] <= 1'h0;
      else \registers[15] [3] <= _022_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [4] <= 1'h0;
      else \registers[15] [4] <= _023_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [5] <= 1'h0;
      else \registers[15] [5] <= _024_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [6] <= 1'h0;
      else \registers[15] [6] <= _025_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [7] <= 1'h0;
      else \registers[15] [7] <= _026_;
endmodule

(* dynports =  1  *)
(* hdlname = "arbiter_cache" *)
(* src = "../build/gpu.v:47.1-340.10" *)
module \$paramod$c84a37d0835bc5adc05aad5e2304aba80bfedd7b\arbiter_cache (clk, reset, consumer_read_valid, consumer_read_address, consumer_read_ready, consumer_read_data, consumer_write_valid, consumer_write_address, consumer_write_ready, consumer_write_data, mem_read_valid, mem_read_address, mem_read_ready, mem_read_data, mem_write_valid, mem_write_address, mem_write_ready, mem_write_data);
  (* src = "../build/gpu.v:75.13-75.16" *)
  input clk;
  wire clk;
  (* src = "../build/gpu.v:212.22-212.23" *)
  wire [31:0] \consumer_if[0].j ;
  (* src = "../build/gpu.v:212.22-212.23" *)
  wire [31:0] \consumer_if[1].j ;
  (* src = "../build/gpu.v:151.28-151.42" *)
  wire [1:0] consumer_mutex;
  (* src = "../build/gpu.v:78.49-78.70" *)
  input [15:0] consumer_read_address;
  wire [15:0] consumer_read_address;
  (* src = "../build/gpu.v:80.57-80.75" *)
  output [31:0] consumer_read_data;
  wire [31:0] consumer_read_data;
  (* src = "../build/gpu.v:79.35-79.54" *)
  output [1:0] consumer_read_ready;
  wire [1:0] consumer_read_ready;
  (* src = "../build/gpu.v:77.35-77.54" *)
  input [1:0] consumer_read_valid;
  wire [1:0] consumer_read_valid;
  (* src = "../build/gpu.v:82.49-82.71" *)
  input [15:0] consumer_write_address;
  wire [15:0] consumer_write_address;
  (* src = "../build/gpu.v:84.57-84.76" *)
  input [31:0] consumer_write_data;
  wire [31:0] consumer_write_data;
  (* src = "../build/gpu.v:83.35-83.55" *)
  output [1:0] consumer_write_ready;
  wire [1:0] consumer_write_ready;
  (* src = "../build/gpu.v:81.35-81.55" *)
  input [1:0] consumer_write_valid;
  wire [1:0] consumer_write_valid;
  (* src = "../build/gpu.v:147.12-147.28" *)
  wire [7:0] \controller_state[0] ;
  (* src = "../build/gpu.v:150.36-150.52" *)
  wire \current_consumer[0] ;
  (* src = "../build/gpu.v:153.28-153.35" *)
  wire [1:0] granted;
  (* src = "../build/gpu.v:152.28-152.44" *)
  wire [1:0] main_mem_request;
  (* src = "../build/gpu.v:86.48-86.64" *)
  output [7:0] mem_read_address;
  wire [7:0] mem_read_address;
  (* src = "../build/gpu.v:88.54-88.67" *)
  input [15:0] mem_read_data;
  wire [15:0] mem_read_data;
  (* src = "../build/gpu.v:87.34-87.48" *)
  input mem_read_ready;
  wire mem_read_ready;
  (* src = "../build/gpu.v:85.34-85.48" *)
  output mem_read_valid;
  wire mem_read_valid;
  (* src = "../build/gpu.v:90.48-90.65" *)
  output [7:0] mem_write_address;
  wire [7:0] mem_write_address;
  (* src = "../build/gpu.v:92.54-92.68" *)
  output [15:0] mem_write_data;
  wire [15:0] mem_write_data;
  (* src = "../build/gpu.v:91.34-91.49" *)
  input mem_write_ready;
  wire mem_write_ready;
  (* src = "../build/gpu.v:89.34-89.49" *)
  output mem_write_valid;
  wire mem_write_valid;
  (* src = "../build/gpu.v:76.13-76.18" *)
  input reset;
  wire reset;
  (* src = "../build/gpu.v:200.25-200.56" *)
  wire [2:1] sv2v_tmp_arbiter_instance_grant;
  assign \consumer_if[0].j  = 32'd0;
  assign \consumer_if[1].j  = 32'd1;
  assign consumer_mutex = 2'hx;
  assign consumer_read_data = 32'd0;
  assign consumer_read_ready = 2'h0;
  assign consumer_write_ready = 2'h0;
  assign \controller_state[0]  = 8'h00;
  assign \current_consumer[0]  = 1'h0;
  assign granted = 2'h0;
  assign main_mem_request = 2'h0;
  assign mem_read_address = 8'h00;
  assign mem_read_valid = 1'h0;
  assign mem_write_address = 8'h00;
  assign mem_write_data = 16'h0000;
  assign mem_write_valid = 1'h0;
  assign sv2v_tmp_arbiter_instance_grant = 2'h0;
endmodule

(* dynports =  1  *)
(* hdlname = "registers" *)
(* src = "../build/gpu.v:1474.1-1549.10" *)
module \$paramod$d08f185179db4eb8eac8d58da9007fec10c7c29b\registers (clk, reset, enable, block_id, core_state, decoded_rd_address, decoded_rs_address, decoded_rt_address, decoded_reg_write_enable, decoded_reg_input_mux, decoded_immediate, alu_out, lsu_out, rs, rt);
  wire [7:0] _000_;
  wire [7:0] _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  wire _264_;
  wire _265_;
  wire _266_;
  wire _267_;
  wire _268_;
  wire _269_;
  wire _270_;
  wire _271_;
  wire _272_;
  wire _273_;
  wire _274_;
  wire _275_;
  wire _276_;
  wire _277_;
  wire _278_;
  wire _279_;
  wire _280_;
  wire _281_;
  wire _282_;
  wire _283_;
  wire _284_;
  wire _285_;
  wire _286_;
  wire _287_;
  wire _288_;
  wire _289_;
  wire _290_;
  wire _291_;
  wire _292_;
  wire _293_;
  wire _294_;
  wire _295_;
  wire _296_;
  wire _297_;
  wire _298_;
  wire _299_;
  wire _300_;
  wire _301_;
  wire _302_;
  wire _303_;
  wire _304_;
  wire _305_;
  wire _306_;
  wire _307_;
  wire _308_;
  wire _309_;
  wire _310_;
  wire _311_;
  wire _312_;
  wire _313_;
  wire _314_;
  wire _315_;
  wire _316_;
  wire _317_;
  wire _318_;
  wire _319_;
  wire _320_;
  wire _321_;
  wire _322_;
  wire _323_;
  wire _324_;
  wire _325_;
  wire _326_;
  wire _327_;
  wire _328_;
  wire _329_;
  wire _330_;
  wire _331_;
  wire _332_;
  wire _333_;
  wire _334_;
  wire _335_;
  wire _336_;
  wire _337_;
  wire _338_;
  wire _339_;
  wire _340_;
  (* src = "../build/gpu.v:1505.31-1505.38" *)
  input [7:0] alu_out;
  wire [7:0] alu_out;
  (* src = "../build/gpu.v:1497.19-1497.27" *)
  input [7:0] block_id;
  wire [7:0] block_id;
  (* src = "../build/gpu.v:1494.13-1494.16" *)
  input clk;
  wire clk;
  (* src = "../build/gpu.v:1498.19-1498.29" *)
  input [2:0] core_state;
  wire [2:0] core_state;
  (* src = "../build/gpu.v:1504.31-1504.48" *)
  input [7:0] decoded_immediate;
  wire [7:0] decoded_immediate;
  (* src = "../build/gpu.v:1499.19-1499.37" *)
  input [3:0] decoded_rd_address;
  wire [3:0] decoded_rd_address;
  (* src = "../build/gpu.v:1503.19-1503.40" *)
  input [1:0] decoded_reg_input_mux;
  wire [1:0] decoded_reg_input_mux;
  (* src = "../build/gpu.v:1502.13-1502.37" *)
  input decoded_reg_write_enable;
  wire decoded_reg_write_enable;
  (* src = "../build/gpu.v:1500.19-1500.37" *)
  input [3:0] decoded_rs_address;
  wire [3:0] decoded_rs_address;
  (* src = "../build/gpu.v:1501.19-1501.37" *)
  input [3:0] decoded_rt_address;
  wire [3:0] decoded_rt_address;
  (* src = "../build/gpu.v:1496.13-1496.19" *)
  input enable;
  wire enable;
  (* src = "../build/gpu.v:1506.31-1506.38" *)
  input [7:0] lsu_out;
  wire [7:0] lsu_out;
  reg [7:0] \registers[0] ;
  reg [7:0] \registers[10] ;
  reg [7:0] \registers[11] ;
  reg [7:0] \registers[12] ;
  reg [7:0] \registers[13] ;
  reg [7:0] \registers[14] ;
  reg [7:0] \registers[15] ;
  reg [7:0] \registers[1] ;
  reg [7:0] \registers[2] ;
  reg [7:0] \registers[3] ;
  reg [7:0] \registers[4] ;
  reg [7:0] \registers[5] ;
  reg [7:0] \registers[6] ;
  reg [7:0] \registers[7] ;
  reg [7:0] \registers[8] ;
  reg [7:0] \registers[9] ;
  (* src = "../build/gpu.v:1495.13-1495.18" *)
  input reset;
  wire reset;
  (* src = "../build/gpu.v:1507.19-1507.21" *)
  output [7:0] rs;
  reg [7:0] rs;
  (* src = "../build/gpu.v:1508.19-1508.21" *)
  output [7:0] rt;
  reg [7:0] rt;
  assign _050_ = ~(decoded_rd_address[0] | decoded_rd_address[1]);
  assign _051_ = decoded_rd_address[2] | decoded_rd_address[3];
  assign _052_ = _050_ & ~(_051_);
  assign _053_ = ~enable;
  assign _054_ = core_state[1] & ~(core_state[0]);
  assign _055_ = ~(_054_ & core_state[2]);
  assign _056_ = decoded_rd_address[2] & decoded_rd_address[3];
  assign _057_ = _050_ | ~(_056_);
  assign _058_ = ~(_057_ & decoded_reg_write_enable);
  assign _059_ = decoded_reg_input_mux[0] | decoded_reg_input_mux[1];
  assign _060_ = _059_ | _058_;
  assign _061_ = _060_ | _055_;
  assign _062_ = _061_ | _053_;
  assign _063_ = _062_ | reset;
  assign _064_ = decoded_reg_input_mux[1] | ~(decoded_reg_input_mux[0]);
  assign _065_ = _064_ | _058_;
  assign _066_ = _065_ | _055_;
  assign _067_ = _066_ | _053_;
  assign _068_ = _067_ | reset;
  assign _069_ = ~(_068_ & _063_);
  assign _070_ = decoded_reg_input_mux[0] | ~(decoded_reg_input_mux[1]);
  assign _071_ = _070_ | _058_;
  assign _072_ = _071_ | _055_;
  assign _073_ = enable & ~(_072_);
  assign _074_ = _073_ & ~(reset);
  assign _075_ = _074_ | _069_;
  assign _027_ = _075_ & _052_;
  assign _017_ = _027_ | reset;
  assign _076_ = decoded_rd_address[0] | ~(decoded_rd_address[1]);
  assign _077_ = decoded_rd_address[2] | ~(decoded_rd_address[3]);
  assign _078_ = _077_ | _076_;
  assign _028_ = _075_ & ~(_078_);
  assign _016_ = _028_ | reset;
  assign _079_ = ~(decoded_rd_address[0] & decoded_rd_address[1]);
  assign _080_ = _079_ | _077_;
  assign _029_ = _075_ & ~(_080_);
  assign _015_ = _029_ | reset;
  assign _081_ = ~(_056_ & _050_);
  assign _030_ = _075_ & ~(_081_);
  assign _014_ = _030_ | reset;
  assign _082_ = decoded_rd_address[1] | ~(decoded_rd_address[0]);
  assign _083_ = _082_ | ~(_056_);
  assign _084_ = _075_ & ~(_083_);
  assign _085_ = enable | reset;
  assign _013_ = _085_ | _084_;
  assign _086_ = _076_ | ~(_056_);
  assign _031_ = _075_ & ~(_086_);
  assign _012_ = _031_ | reset;
  assign _087_ = _079_ | ~(_056_);
  assign _032_ = _075_ & ~(_087_);
  assign _011_ = _032_ | reset;
  assign _088_ = _082_ | _051_;
  assign _033_ = _075_ & ~(_088_);
  assign _010_ = _033_ | reset;
  assign _089_ = _076_ | _051_;
  assign _034_ = _075_ & ~(_089_);
  assign _009_ = _034_ | reset;
  assign _090_ = _079_ | _051_;
  assign _035_ = _075_ & ~(_090_);
  assign _008_ = _035_ | reset;
  assign _091_ = decoded_rd_address[3] | ~(decoded_rd_address[2]);
  assign _092_ = _091_ | ~(_050_);
  assign _036_ = _075_ & ~(_092_);
  assign _007_ = _036_ | reset;
  assign _093_ = _091_ | _082_;
  assign _037_ = _075_ & ~(_093_);
  assign _006_ = _037_ | reset;
  assign _094_ = _091_ | _076_;
  assign _038_ = _075_ & ~(_094_);
  assign _005_ = _038_ | reset;
  assign _095_ = _091_ | _079_;
  assign _039_ = _075_ & ~(_095_);
  assign _004_ = _039_ | reset;
  assign _096_ = _077_ | ~(_050_);
  assign _040_ = _075_ & ~(_096_);
  assign _003_ = _040_ | reset;
  assign _097_ = _077_ | _082_;
  assign _041_ = _075_ & ~(_097_);
  assign _002_ = _041_ | reset;
  assign _098_ = ~(core_state[0] & core_state[1]);
  assign _099_ = _098_ | core_state[2];
  assign _018_ = enable & ~(_099_);
  assign _100_ = decoded_rt_address[0] ? \registers[1] [0] : \registers[0] [0];
  assign _101_ = decoded_rt_address[0] ? \registers[3] [0] : \registers[2] [0];
  assign _102_ = decoded_rt_address[1] ? _101_ : _100_;
  assign _103_ = decoded_rt_address[0] ? \registers[5] [0] : \registers[4] [0];
  assign _104_ = decoded_rt_address[0] ? \registers[7] [0] : \registers[6] [0];
  assign _105_ = decoded_rt_address[1] ? _104_ : _103_;
  assign _106_ = decoded_rt_address[2] ? _105_ : _102_;
  assign _107_ = decoded_rt_address[0] ? \registers[9] [0] : \registers[8] [0];
  assign _108_ = decoded_rt_address[0] ? \registers[11] [0] : \registers[10] [0];
  assign _109_ = decoded_rt_address[1] ? _108_ : _107_;
  assign _110_ = decoded_rt_address[0] ? \registers[13] [0] : \registers[12] [0];
  assign _111_ = decoded_rt_address[0] ? \registers[15] [0] : \registers[14] [0];
  assign _112_ = decoded_rt_address[1] ? _111_ : _110_;
  assign _113_ = decoded_rt_address[2] ? _112_ : _109_;
  assign _000_[0] = decoded_rt_address[3] ? _113_ : _106_;
  assign _114_ = decoded_rt_address[0] ? \registers[1] [1] : \registers[0] [1];
  assign _115_ = decoded_rt_address[0] ? \registers[3] [1] : \registers[2] [1];
  assign _116_ = decoded_rt_address[1] ? _115_ : _114_;
  assign _117_ = decoded_rt_address[0] ? \registers[5] [1] : \registers[4] [1];
  assign _118_ = decoded_rt_address[0] ? \registers[7] [1] : \registers[6] [1];
  assign _119_ = decoded_rt_address[1] ? _118_ : _117_;
  assign _120_ = decoded_rt_address[2] ? _119_ : _116_;
  assign _121_ = decoded_rt_address[0] ? \registers[9] [1] : \registers[8] [1];
  assign _122_ = decoded_rt_address[0] ? \registers[11] [1] : \registers[10] [1];
  assign _123_ = decoded_rt_address[1] ? _122_ : _121_;
  assign _124_ = decoded_rt_address[0] ? \registers[13] [1] : \registers[12] [1];
  assign _125_ = decoded_rt_address[0] ? \registers[15] [1] : \registers[14] [1];
  assign _126_ = decoded_rt_address[1] ? _125_ : _124_;
  assign _127_ = decoded_rt_address[2] ? _126_ : _123_;
  assign _000_[1] = decoded_rt_address[3] ? _127_ : _120_;
  assign _128_ = decoded_rt_address[0] ? \registers[1] [2] : \registers[0] [2];
  assign _129_ = decoded_rt_address[0] ? \registers[3] [2] : \registers[2] [2];
  assign _130_ = decoded_rt_address[1] ? _129_ : _128_;
  assign _131_ = decoded_rt_address[0] ? \registers[5] [2] : \registers[4] [2];
  assign _132_ = decoded_rt_address[0] ? \registers[7] [2] : \registers[6] [2];
  assign _133_ = decoded_rt_address[1] ? _132_ : _131_;
  assign _134_ = decoded_rt_address[2] ? _133_ : _130_;
  assign _135_ = decoded_rt_address[0] ? \registers[9] [2] : \registers[8] [2];
  assign _136_ = decoded_rt_address[0] ? \registers[11] [2] : \registers[10] [2];
  assign _137_ = decoded_rt_address[1] ? _136_ : _135_;
  assign _138_ = decoded_rt_address[0] ? \registers[13] [2] : \registers[12] [2];
  assign _139_ = decoded_rt_address[0] ? \registers[15] [2] : \registers[14] [2];
  assign _140_ = decoded_rt_address[1] ? _139_ : _138_;
  assign _141_ = decoded_rt_address[2] ? _140_ : _137_;
  assign _000_[2] = decoded_rt_address[3] ? _141_ : _134_;
  assign _142_ = decoded_rt_address[0] ? \registers[1] [3] : \registers[0] [3];
  assign _143_ = decoded_rt_address[0] ? \registers[3] [3] : \registers[2] [3];
  assign _144_ = decoded_rt_address[1] ? _143_ : _142_;
  assign _145_ = decoded_rt_address[0] ? \registers[5] [3] : \registers[4] [3];
  assign _146_ = decoded_rt_address[0] ? \registers[7] [3] : \registers[6] [3];
  assign _147_ = decoded_rt_address[1] ? _146_ : _145_;
  assign _148_ = decoded_rt_address[2] ? _147_ : _144_;
  assign _149_ = decoded_rt_address[0] ? \registers[9] [3] : \registers[8] [3];
  assign _150_ = decoded_rt_address[0] ? \registers[11] [3] : \registers[10] [3];
  assign _151_ = decoded_rt_address[1] ? _150_ : _149_;
  assign _152_ = decoded_rt_address[0] ? \registers[13] [3] : \registers[12] [3];
  assign _153_ = decoded_rt_address[0] ? \registers[15] [3] : \registers[14] [3];
  assign _154_ = decoded_rt_address[1] ? _153_ : _152_;
  assign _155_ = decoded_rt_address[2] ? _154_ : _151_;
  assign _000_[3] = decoded_rt_address[3] ? _155_ : _148_;
  assign _156_ = decoded_rt_address[0] ? \registers[1] [4] : \registers[0] [4];
  assign _157_ = decoded_rt_address[0] ? \registers[3] [4] : \registers[2] [4];
  assign _158_ = decoded_rt_address[1] ? _157_ : _156_;
  assign _159_ = decoded_rt_address[0] ? \registers[5] [4] : \registers[4] [4];
  assign _160_ = decoded_rt_address[0] ? \registers[7] [4] : \registers[6] [4];
  assign _161_ = decoded_rt_address[1] ? _160_ : _159_;
  assign _162_ = decoded_rt_address[2] ? _161_ : _158_;
  assign _163_ = decoded_rt_address[0] ? \registers[9] [4] : \registers[8] [4];
  assign _164_ = decoded_rt_address[0] ? \registers[11] [4] : \registers[10] [4];
  assign _165_ = decoded_rt_address[1] ? _164_ : _163_;
  assign _166_ = decoded_rt_address[0] ? \registers[13] [4] : \registers[12] [4];
  assign _167_ = decoded_rt_address[0] ? \registers[15] [4] : \registers[14] [4];
  assign _168_ = decoded_rt_address[1] ? _167_ : _166_;
  assign _169_ = decoded_rt_address[2] ? _168_ : _165_;
  assign _000_[4] = decoded_rt_address[3] ? _169_ : _162_;
  assign _170_ = decoded_rt_address[0] ? \registers[1] [5] : \registers[0] [5];
  assign _171_ = decoded_rt_address[0] ? \registers[3] [5] : \registers[2] [5];
  assign _172_ = decoded_rt_address[1] ? _171_ : _170_;
  assign _173_ = decoded_rt_address[0] ? \registers[5] [5] : \registers[4] [5];
  assign _174_ = decoded_rt_address[0] ? \registers[7] [5] : \registers[6] [5];
  assign _175_ = decoded_rt_address[1] ? _174_ : _173_;
  assign _176_ = decoded_rt_address[2] ? _175_ : _172_;
  assign _177_ = decoded_rt_address[0] ? \registers[9] [5] : \registers[8] [5];
  assign _178_ = decoded_rt_address[0] ? \registers[11] [5] : \registers[10] [5];
  assign _179_ = decoded_rt_address[1] ? _178_ : _177_;
  assign _180_ = decoded_rt_address[0] ? \registers[13] [5] : \registers[12] [5];
  assign _181_ = decoded_rt_address[0] ? \registers[15] [5] : \registers[14] [5];
  assign _182_ = decoded_rt_address[1] ? _181_ : _180_;
  assign _183_ = decoded_rt_address[2] ? _182_ : _179_;
  assign _000_[5] = decoded_rt_address[3] ? _183_ : _176_;
  assign _184_ = decoded_rt_address[0] ? \registers[1] [6] : \registers[0] [6];
  assign _185_ = decoded_rt_address[0] ? \registers[3] [6] : \registers[2] [6];
  assign _186_ = decoded_rt_address[1] ? _185_ : _184_;
  assign _187_ = decoded_rt_address[0] ? \registers[5] [6] : \registers[4] [6];
  assign _188_ = decoded_rt_address[0] ? \registers[7] [6] : \registers[6] [6];
  assign _189_ = decoded_rt_address[1] ? _188_ : _187_;
  assign _190_ = decoded_rt_address[2] ? _189_ : _186_;
  assign _191_ = decoded_rt_address[0] ? \registers[9] [6] : \registers[8] [6];
  assign _192_ = decoded_rt_address[0] ? \registers[11] [6] : \registers[10] [6];
  assign _193_ = decoded_rt_address[1] ? _192_ : _191_;
  assign _194_ = decoded_rt_address[0] ? \registers[13] [6] : \registers[12] [6];
  assign _195_ = decoded_rt_address[0] ? \registers[15] [6] : \registers[14] [6];
  assign _196_ = decoded_rt_address[1] ? _195_ : _194_;
  assign _197_ = decoded_rt_address[2] ? _196_ : _193_;
  assign _000_[6] = decoded_rt_address[3] ? _197_ : _190_;
  assign _198_ = decoded_rt_address[0] ? \registers[1] [7] : \registers[0] [7];
  assign _199_ = decoded_rt_address[0] ? \registers[3] [7] : \registers[2] [7];
  assign _200_ = decoded_rt_address[1] ? _199_ : _198_;
  assign _201_ = decoded_rt_address[0] ? \registers[5] [7] : \registers[4] [7];
  assign _202_ = decoded_rt_address[0] ? \registers[7] [7] : \registers[6] [7];
  assign _203_ = decoded_rt_address[1] ? _202_ : _201_;
  assign _204_ = decoded_rt_address[2] ? _203_ : _200_;
  assign _205_ = decoded_rt_address[0] ? \registers[9] [7] : \registers[8] [7];
  assign _206_ = decoded_rt_address[0] ? \registers[11] [7] : \registers[10] [7];
  assign _207_ = decoded_rt_address[1] ? _206_ : _205_;
  assign _208_ = decoded_rt_address[0] ? \registers[13] [7] : \registers[12] [7];
  assign _209_ = decoded_rt_address[0] ? \registers[15] [7] : \registers[14] [7];
  assign _210_ = decoded_rt_address[1] ? _209_ : _208_;
  assign _211_ = decoded_rt_address[2] ? _210_ : _207_;
  assign _000_[7] = decoded_rt_address[3] ? _211_ : _204_;
  assign _212_ = _068_ ? alu_out[0] : lsu_out[0];
  assign _019_ = _074_ ? decoded_immediate[0] : _212_;
  assign _213_ = reset | ~(enable);
  assign _214_ = block_id[0] & ~(_213_);
  assign _042_ = _084_ ? _019_ : _214_;
  assign _215_ = _068_ ? alu_out[1] : lsu_out[1];
  assign _020_ = _074_ ? decoded_immediate[1] : _215_;
  assign _216_ = block_id[1] & ~(_213_);
  assign _043_ = _084_ ? _020_ : _216_;
  assign _217_ = _068_ ? alu_out[2] : lsu_out[2];
  assign _021_ = _074_ ? decoded_immediate[2] : _217_;
  assign _218_ = block_id[2] & ~(_213_);
  assign _044_ = _084_ ? _021_ : _218_;
  assign _219_ = _068_ ? alu_out[3] : lsu_out[3];
  assign _022_ = _074_ ? decoded_immediate[3] : _219_;
  assign _220_ = block_id[3] & ~(_213_);
  assign _045_ = _084_ ? _022_ : _220_;
  assign _221_ = _068_ ? alu_out[4] : lsu_out[4];
  assign _023_ = _074_ ? decoded_immediate[4] : _221_;
  assign _222_ = block_id[4] & ~(_213_);
  assign _046_ = _084_ ? _023_ : _222_;
  assign _223_ = _068_ ? alu_out[5] : lsu_out[5];
  assign _024_ = _074_ ? decoded_immediate[5] : _223_;
  assign _224_ = block_id[5] & ~(_213_);
  assign _047_ = _084_ ? _024_ : _224_;
  assign _225_ = _068_ ? alu_out[6] : lsu_out[6];
  assign _025_ = _074_ ? decoded_immediate[6] : _225_;
  assign _226_ = block_id[6] & ~(_213_);
  assign _048_ = _084_ ? _025_ : _226_;
  assign _227_ = _068_ ? alu_out[7] : lsu_out[7];
  assign _026_ = _074_ ? decoded_immediate[7] : _227_;
  assign _228_ = block_id[7] & ~(_213_);
  assign _049_ = _084_ ? _026_ : _228_;
  assign _229_ = decoded_rs_address[0] ? \registers[1] [0] : \registers[0] [0];
  assign _230_ = decoded_rs_address[0] ? \registers[3] [0] : \registers[2] [0];
  assign _231_ = decoded_rs_address[1] ? _230_ : _229_;
  assign _232_ = decoded_rs_address[0] ? \registers[5] [0] : \registers[4] [0];
  assign _233_ = decoded_rs_address[0] ? \registers[7] [0] : \registers[6] [0];
  assign _234_ = decoded_rs_address[1] ? _233_ : _232_;
  assign _235_ = decoded_rs_address[2] ? _234_ : _231_;
  assign _236_ = decoded_rs_address[0] ? \registers[9] [0] : \registers[8] [0];
  assign _237_ = decoded_rs_address[0] ? \registers[11] [0] : \registers[10] [0];
  assign _238_ = decoded_rs_address[1] ? _237_ : _236_;
  assign _239_ = decoded_rs_address[0] ? \registers[13] [0] : \registers[12] [0];
  assign _240_ = decoded_rs_address[0] ? \registers[15] [0] : \registers[14] [0];
  assign _241_ = decoded_rs_address[1] ? _240_ : _239_;
  assign _242_ = decoded_rs_address[2] ? _241_ : _238_;
  assign _001_[0] = decoded_rs_address[3] ? _242_ : _235_;
  assign _243_ = decoded_rs_address[0] ? \registers[1] [1] : \registers[0] [1];
  assign _244_ = decoded_rs_address[0] ? \registers[3] [1] : \registers[2] [1];
  assign _245_ = decoded_rs_address[1] ? _244_ : _243_;
  assign _246_ = decoded_rs_address[0] ? \registers[5] [1] : \registers[4] [1];
  assign _247_ = decoded_rs_address[0] ? \registers[7] [1] : \registers[6] [1];
  assign _248_ = decoded_rs_address[1] ? _247_ : _246_;
  assign _249_ = decoded_rs_address[2] ? _248_ : _245_;
  assign _250_ = decoded_rs_address[0] ? \registers[9] [1] : \registers[8] [1];
  assign _251_ = decoded_rs_address[0] ? \registers[11] [1] : \registers[10] [1];
  assign _252_ = decoded_rs_address[1] ? _251_ : _250_;
  assign _253_ = decoded_rs_address[0] ? \registers[13] [1] : \registers[12] [1];
  assign _254_ = decoded_rs_address[0] ? \registers[15] [1] : \registers[14] [1];
  assign _255_ = decoded_rs_address[1] ? _254_ : _253_;
  assign _256_ = decoded_rs_address[2] ? _255_ : _252_;
  assign _001_[1] = decoded_rs_address[3] ? _256_ : _249_;
  assign _257_ = decoded_rs_address[0] ? \registers[1] [2] : \registers[0] [2];
  assign _258_ = decoded_rs_address[0] ? \registers[3] [2] : \registers[2] [2];
  assign _259_ = decoded_rs_address[1] ? _258_ : _257_;
  assign _260_ = decoded_rs_address[0] ? \registers[5] [2] : \registers[4] [2];
  assign _261_ = decoded_rs_address[0] ? \registers[7] [2] : \registers[6] [2];
  assign _262_ = decoded_rs_address[1] ? _261_ : _260_;
  assign _263_ = decoded_rs_address[2] ? _262_ : _259_;
  assign _264_ = decoded_rs_address[0] ? \registers[9] [2] : \registers[8] [2];
  assign _265_ = decoded_rs_address[0] ? \registers[11] [2] : \registers[10] [2];
  assign _266_ = decoded_rs_address[1] ? _265_ : _264_;
  assign _267_ = decoded_rs_address[0] ? \registers[13] [2] : \registers[12] [2];
  assign _268_ = decoded_rs_address[0] ? \registers[15] [2] : \registers[14] [2];
  assign _269_ = decoded_rs_address[1] ? _268_ : _267_;
  assign _270_ = decoded_rs_address[2] ? _269_ : _266_;
  assign _001_[2] = decoded_rs_address[3] ? _270_ : _263_;
  assign _271_ = decoded_rs_address[0] ? \registers[1] [3] : \registers[0] [3];
  assign _272_ = decoded_rs_address[0] ? \registers[3] [3] : \registers[2] [3];
  assign _273_ = decoded_rs_address[1] ? _272_ : _271_;
  assign _274_ = decoded_rs_address[0] ? \registers[5] [3] : \registers[4] [3];
  assign _275_ = decoded_rs_address[0] ? \registers[7] [3] : \registers[6] [3];
  assign _276_ = decoded_rs_address[1] ? _275_ : _274_;
  assign _277_ = decoded_rs_address[2] ? _276_ : _273_;
  assign _278_ = decoded_rs_address[0] ? \registers[9] [3] : \registers[8] [3];
  assign _279_ = decoded_rs_address[0] ? \registers[11] [3] : \registers[10] [3];
  assign _280_ = decoded_rs_address[1] ? _279_ : _278_;
  assign _281_ = decoded_rs_address[0] ? \registers[13] [3] : \registers[12] [3];
  assign _282_ = decoded_rs_address[0] ? \registers[15] [3] : \registers[14] [3];
  assign _283_ = decoded_rs_address[1] ? _282_ : _281_;
  assign _284_ = decoded_rs_address[2] ? _283_ : _280_;
  assign _001_[3] = decoded_rs_address[3] ? _284_ : _277_;
  assign _285_ = decoded_rs_address[0] ? \registers[1] [4] : \registers[0] [4];
  assign _286_ = decoded_rs_address[0] ? \registers[3] [4] : \registers[2] [4];
  assign _287_ = decoded_rs_address[1] ? _286_ : _285_;
  assign _288_ = decoded_rs_address[0] ? \registers[5] [4] : \registers[4] [4];
  assign _289_ = decoded_rs_address[0] ? \registers[7] [4] : \registers[6] [4];
  assign _290_ = decoded_rs_address[1] ? _289_ : _288_;
  assign _291_ = decoded_rs_address[2] ? _290_ : _287_;
  assign _292_ = decoded_rs_address[0] ? \registers[9] [4] : \registers[8] [4];
  assign _293_ = decoded_rs_address[0] ? \registers[11] [4] : \registers[10] [4];
  assign _294_ = decoded_rs_address[1] ? _293_ : _292_;
  assign _295_ = decoded_rs_address[0] ? \registers[13] [4] : \registers[12] [4];
  assign _296_ = decoded_rs_address[0] ? \registers[15] [4] : \registers[14] [4];
  assign _297_ = decoded_rs_address[1] ? _296_ : _295_;
  assign _298_ = decoded_rs_address[2] ? _297_ : _294_;
  assign _001_[4] = decoded_rs_address[3] ? _298_ : _291_;
  assign _299_ = decoded_rs_address[0] ? \registers[1] [5] : \registers[0] [5];
  assign _300_ = decoded_rs_address[0] ? \registers[3] [5] : \registers[2] [5];
  assign _301_ = decoded_rs_address[1] ? _300_ : _299_;
  assign _302_ = decoded_rs_address[0] ? \registers[5] [5] : \registers[4] [5];
  assign _303_ = decoded_rs_address[0] ? \registers[7] [5] : \registers[6] [5];
  assign _304_ = decoded_rs_address[1] ? _303_ : _302_;
  assign _305_ = decoded_rs_address[2] ? _304_ : _301_;
  assign _306_ = decoded_rs_address[0] ? \registers[9] [5] : \registers[8] [5];
  assign _307_ = decoded_rs_address[0] ? \registers[11] [5] : \registers[10] [5];
  assign _308_ = decoded_rs_address[1] ? _307_ : _306_;
  assign _309_ = decoded_rs_address[0] ? \registers[13] [5] : \registers[12] [5];
  assign _310_ = decoded_rs_address[0] ? \registers[15] [5] : \registers[14] [5];
  assign _311_ = decoded_rs_address[1] ? _310_ : _309_;
  assign _312_ = decoded_rs_address[2] ? _311_ : _308_;
  assign _001_[5] = decoded_rs_address[3] ? _312_ : _305_;
  assign _313_ = decoded_rs_address[0] ? \registers[1] [6] : \registers[0] [6];
  assign _314_ = decoded_rs_address[0] ? \registers[3] [6] : \registers[2] [6];
  assign _315_ = decoded_rs_address[1] ? _314_ : _313_;
  assign _316_ = decoded_rs_address[0] ? \registers[5] [6] : \registers[4] [6];
  assign _317_ = decoded_rs_address[0] ? \registers[7] [6] : \registers[6] [6];
  assign _318_ = decoded_rs_address[1] ? _317_ : _316_;
  assign _319_ = decoded_rs_address[2] ? _318_ : _315_;
  assign _320_ = decoded_rs_address[0] ? \registers[9] [6] : \registers[8] [6];
  assign _321_ = decoded_rs_address[0] ? \registers[11] [6] : \registers[10] [6];
  assign _322_ = decoded_rs_address[1] ? _321_ : _320_;
  assign _323_ = decoded_rs_address[0] ? \registers[13] [6] : \registers[12] [6];
  assign _324_ = decoded_rs_address[0] ? \registers[15] [6] : \registers[14] [6];
  assign _325_ = decoded_rs_address[1] ? _324_ : _323_;
  assign _326_ = decoded_rs_address[2] ? _325_ : _322_;
  assign _001_[6] = decoded_rs_address[3] ? _326_ : _319_;
  assign _327_ = decoded_rs_address[0] ? \registers[1] [7] : \registers[0] [7];
  assign _328_ = decoded_rs_address[0] ? \registers[3] [7] : \registers[2] [7];
  assign _329_ = decoded_rs_address[1] ? _328_ : _327_;
  assign _330_ = decoded_rs_address[0] ? \registers[5] [7] : \registers[4] [7];
  assign _331_ = decoded_rs_address[0] ? \registers[7] [7] : \registers[6] [7];
  assign _332_ = decoded_rs_address[1] ? _331_ : _330_;
  assign _333_ = decoded_rs_address[2] ? _332_ : _329_;
  assign _334_ = decoded_rs_address[0] ? \registers[9] [7] : \registers[8] [7];
  assign _335_ = decoded_rs_address[0] ? \registers[11] [7] : \registers[10] [7];
  assign _336_ = decoded_rs_address[1] ? _335_ : _334_;
  assign _337_ = decoded_rs_address[0] ? \registers[13] [7] : \registers[12] [7];
  assign _338_ = decoded_rs_address[0] ? \registers[15] [7] : \registers[14] [7];
  assign _339_ = decoded_rs_address[1] ? _338_ : _337_;
  assign _340_ = decoded_rs_address[2] ? _339_ : _336_;
  assign _001_[7] = decoded_rs_address[3] ? _340_ : _333_;
  always @(posedge clk)
    if (reset) rs[0] <= 1'h0;
    else if (_018_) rs[0] <= _001_[0];
  always @(posedge clk)
    if (reset) rs[1] <= 1'h0;
    else if (_018_) rs[1] <= _001_[1];
  always @(posedge clk)
    if (reset) rs[2] <= 1'h0;
    else if (_018_) rs[2] <= _001_[2];
  always @(posedge clk)
    if (reset) rs[3] <= 1'h0;
    else if (_018_) rs[3] <= _001_[3];
  always @(posedge clk)
    if (reset) rs[4] <= 1'h0;
    else if (_018_) rs[4] <= _001_[4];
  always @(posedge clk)
    if (reset) rs[5] <= 1'h0;
    else if (_018_) rs[5] <= _001_[5];
  always @(posedge clk)
    if (reset) rs[6] <= 1'h0;
    else if (_018_) rs[6] <= _001_[6];
  always @(posedge clk)
    if (reset) rs[7] <= 1'h0;
    else if (_018_) rs[7] <= _001_[7];
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [0] <= 1'h0;
      else \registers[0] [0] <= _019_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [1] <= 1'h0;
      else \registers[0] [1] <= _020_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [2] <= 1'h0;
      else \registers[0] [2] <= _021_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [3] <= 1'h0;
      else \registers[0] [3] <= _022_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [4] <= 1'h0;
      else \registers[0] [4] <= _023_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [5] <= 1'h0;
      else \registers[0] [5] <= _024_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [6] <= 1'h0;
      else \registers[0] [6] <= _025_;
  always @(posedge clk)
    if (_017_)
      if (!_027_) \registers[0] [7] <= 1'h0;
      else \registers[0] [7] <= _026_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [0] <= 1'h0;
      else \registers[4] [0] <= _019_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [1] <= 1'h0;
      else \registers[4] [1] <= _020_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [2] <= 1'h0;
      else \registers[4] [2] <= _021_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [3] <= 1'h0;
      else \registers[4] [3] <= _022_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [4] <= 1'h0;
      else \registers[4] [4] <= _023_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [5] <= 1'h0;
      else \registers[4] [5] <= _024_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [6] <= 1'h0;
      else \registers[4] [6] <= _025_;
  always @(posedge clk)
    if (_007_)
      if (!_036_) \registers[4] [7] <= 1'h0;
      else \registers[4] [7] <= _026_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [0] <= 1'h0;
      else \registers[9] [0] <= _019_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [1] <= 1'h0;
      else \registers[9] [1] <= _020_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [2] <= 1'h0;
      else \registers[9] [2] <= _021_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [3] <= 1'h0;
      else \registers[9] [3] <= _022_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [4] <= 1'h0;
      else \registers[9] [4] <= _023_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [5] <= 1'h0;
      else \registers[9] [5] <= _024_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [6] <= 1'h0;
      else \registers[9] [6] <= _025_;
  always @(posedge clk)
    if (_002_)
      if (!_041_) \registers[9] [7] <= 1'h0;
      else \registers[9] [7] <= _026_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [0] <= 1'h0;
      else \registers[14] [0] <= _019_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [1] <= 1'h0;
      else \registers[14] [1] <= _020_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [2] <= 1'h1;
      else \registers[14] [2] <= _021_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [3] <= 1'h0;
      else \registers[14] [3] <= _022_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [4] <= 1'h0;
      else \registers[14] [4] <= _023_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [5] <= 1'h0;
      else \registers[14] [5] <= _024_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [6] <= 1'h0;
      else \registers[14] [6] <= _025_;
  always @(posedge clk)
    if (_012_)
      if (!_031_) \registers[14] [7] <= 1'h0;
      else \registers[14] [7] <= _026_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [0] <= 1'h1;
      else \registers[15] [0] <= _019_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [1] <= 1'h0;
      else \registers[15] [1] <= _020_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [2] <= 1'h0;
      else \registers[15] [2] <= _021_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [3] <= 1'h0;
      else \registers[15] [3] <= _022_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [4] <= 1'h0;
      else \registers[15] [4] <= _023_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [5] <= 1'h0;
      else \registers[15] [5] <= _024_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [6] <= 1'h0;
      else \registers[15] [6] <= _025_;
  always @(posedge clk)
    if (_011_)
      if (!_032_) \registers[15] [7] <= 1'h0;
      else \registers[15] [7] <= _026_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [0] <= 1'h0;
      else \registers[8] [0] <= _019_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [1] <= 1'h0;
      else \registers[8] [1] <= _020_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [2] <= 1'h0;
      else \registers[8] [2] <= _021_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [3] <= 1'h0;
      else \registers[8] [3] <= _022_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [4] <= 1'h0;
      else \registers[8] [4] <= _023_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [5] <= 1'h0;
      else \registers[8] [5] <= _024_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [6] <= 1'h0;
      else \registers[8] [6] <= _025_;
  always @(posedge clk)
    if (_003_)
      if (!_040_) \registers[8] [7] <= 1'h0;
      else \registers[8] [7] <= _026_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [0] <= 1'h0;
      else \registers[7] [0] <= _019_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [1] <= 1'h0;
      else \registers[7] [1] <= _020_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [2] <= 1'h0;
      else \registers[7] [2] <= _021_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [3] <= 1'h0;
      else \registers[7] [3] <= _022_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [4] <= 1'h0;
      else \registers[7] [4] <= _023_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [5] <= 1'h0;
      else \registers[7] [5] <= _024_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [6] <= 1'h0;
      else \registers[7] [6] <= _025_;
  always @(posedge clk)
    if (_004_)
      if (!_039_) \registers[7] [7] <= 1'h0;
      else \registers[7] [7] <= _026_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [0] <= 1'h0;
      else \registers[3] [0] <= _019_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [1] <= 1'h0;
      else \registers[3] [1] <= _020_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [2] <= 1'h0;
      else \registers[3] [2] <= _021_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [3] <= 1'h0;
      else \registers[3] [3] <= _022_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [4] <= 1'h0;
      else \registers[3] [4] <= _023_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [5] <= 1'h0;
      else \registers[3] [5] <= _024_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [6] <= 1'h0;
      else \registers[3] [6] <= _025_;
  always @(posedge clk)
    if (_008_)
      if (!_035_) \registers[3] [7] <= 1'h0;
      else \registers[3] [7] <= _026_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [0] <= 1'h0;
      else \registers[5] [0] <= _019_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [1] <= 1'h0;
      else \registers[5] [1] <= _020_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [2] <= 1'h0;
      else \registers[5] [2] <= _021_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [3] <= 1'h0;
      else \registers[5] [3] <= _022_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [4] <= 1'h0;
      else \registers[5] [4] <= _023_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [5] <= 1'h0;
      else \registers[5] [5] <= _024_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [6] <= 1'h0;
      else \registers[5] [6] <= _025_;
  always @(posedge clk)
    if (_006_)
      if (!_037_) \registers[5] [7] <= 1'h0;
      else \registers[5] [7] <= _026_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [0] <= 1'h0;
      else \registers[11] [0] <= _019_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [1] <= 1'h0;
      else \registers[11] [1] <= _020_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [2] <= 1'h0;
      else \registers[11] [2] <= _021_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [3] <= 1'h0;
      else \registers[11] [3] <= _022_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [4] <= 1'h0;
      else \registers[11] [4] <= _023_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [5] <= 1'h0;
      else \registers[11] [5] <= _024_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [6] <= 1'h0;
      else \registers[11] [6] <= _025_;
  always @(posedge clk)
    if (_015_)
      if (!_029_) \registers[11] [7] <= 1'h0;
      else \registers[11] [7] <= _026_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [0] <= 1'h0;
      else \registers[6] [0] <= _019_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [1] <= 1'h0;
      else \registers[6] [1] <= _020_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [2] <= 1'h0;
      else \registers[6] [2] <= _021_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [3] <= 1'h0;
      else \registers[6] [3] <= _022_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [4] <= 1'h0;
      else \registers[6] [4] <= _023_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [5] <= 1'h0;
      else \registers[6] [5] <= _024_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [6] <= 1'h0;
      else \registers[6] [6] <= _025_;
  always @(posedge clk)
    if (_005_)
      if (!_038_) \registers[6] [7] <= 1'h0;
      else \registers[6] [7] <= _026_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [0] <= 1'h0;
      else \registers[2] [0] <= _019_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [1] <= 1'h0;
      else \registers[2] [1] <= _020_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [2] <= 1'h0;
      else \registers[2] [2] <= _021_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [3] <= 1'h0;
      else \registers[2] [3] <= _022_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [4] <= 1'h0;
      else \registers[2] [4] <= _023_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [5] <= 1'h0;
      else \registers[2] [5] <= _024_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [6] <= 1'h0;
      else \registers[2] [6] <= _025_;
  always @(posedge clk)
    if (_009_)
      if (!_034_) \registers[2] [7] <= 1'h0;
      else \registers[2] [7] <= _026_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [0] <= 1'h0;
      else \registers[12] [0] <= _019_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [1] <= 1'h0;
      else \registers[12] [1] <= _020_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [2] <= 1'h0;
      else \registers[12] [2] <= _021_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [3] <= 1'h0;
      else \registers[12] [3] <= _022_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [4] <= 1'h0;
      else \registers[12] [4] <= _023_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [5] <= 1'h0;
      else \registers[12] [5] <= _024_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [6] <= 1'h0;
      else \registers[12] [6] <= _025_;
  always @(posedge clk)
    if (_014_)
      if (!_030_) \registers[12] [7] <= 1'h0;
      else \registers[12] [7] <= _026_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [0] <= 1'h0;
      else \registers[10] [0] <= _019_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [1] <= 1'h0;
      else \registers[10] [1] <= _020_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [2] <= 1'h0;
      else \registers[10] [2] <= _021_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [3] <= 1'h0;
      else \registers[10] [3] <= _022_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [4] <= 1'h0;
      else \registers[10] [4] <= _023_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [5] <= 1'h0;
      else \registers[10] [5] <= _024_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [6] <= 1'h0;
      else \registers[10] [6] <= _025_;
  always @(posedge clk)
    if (_016_)
      if (!_028_) \registers[10] [7] <= 1'h0;
      else \registers[10] [7] <= _026_;
  always @(posedge clk)
    if (_013_) \registers[13] [0] <= _042_;
  always @(posedge clk)
    if (_013_) \registers[13] [1] <= _043_;
  always @(posedge clk)
    if (_013_) \registers[13] [2] <= _044_;
  always @(posedge clk)
    if (_013_) \registers[13] [3] <= _045_;
  always @(posedge clk)
    if (_013_) \registers[13] [4] <= _046_;
  always @(posedge clk)
    if (_013_) \registers[13] [5] <= _047_;
  always @(posedge clk)
    if (_013_) \registers[13] [6] <= _048_;
  always @(posedge clk)
    if (_013_) \registers[13] [7] <= _049_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [0] <= 1'h0;
      else \registers[1] [0] <= _019_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [1] <= 1'h0;
      else \registers[1] [1] <= _020_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [2] <= 1'h0;
      else \registers[1] [2] <= _021_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [3] <= 1'h0;
      else \registers[1] [3] <= _022_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [4] <= 1'h0;
      else \registers[1] [4] <= _023_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [5] <= 1'h0;
      else \registers[1] [5] <= _024_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [6] <= 1'h0;
      else \registers[1] [6] <= _025_;
  always @(posedge clk)
    if (_010_)
      if (!_033_) \registers[1] [7] <= 1'h0;
      else \registers[1] [7] <= _026_;
  always @(posedge clk)
    if (reset) rt[0] <= 1'h0;
    else if (_018_) rt[0] <= _000_[0];
  always @(posedge clk)
    if (reset) rt[1] <= 1'h0;
    else if (_018_) rt[1] <= _000_[1];
  always @(posedge clk)
    if (reset) rt[2] <= 1'h0;
    else if (_018_) rt[2] <= _000_[2];
  always @(posedge clk)
    if (reset) rt[3] <= 1'h0;
    else if (_018_) rt[3] <= _000_[3];
  always @(posedge clk)
    if (reset) rt[4] <= 1'h0;
    else if (_018_) rt[4] <= _000_[4];
  always @(posedge clk)
    if (reset) rt[5] <= 1'h0;
    else if (_018_) rt[5] <= _000_[5];
  always @(posedge clk)
    if (reset) rt[6] <= 1'h0;
    else if (_018_) rt[6] <= _000_[6];
  always @(posedge clk)
    if (reset) rt[7] <= 1'h0;
    else if (_018_) rt[7] <= _000_[7];
endmodule

(* dynports =  1  *)
(* hdlname = "arbiter_cache" *)
(* src = "../build/gpu.v:47.1-340.10" *)
module \$paramod$d52b8421c71588f1b1a109a76f121397216ebdc2\arbiter_cache (clk, reset, consumer_read_valid, consumer_read_address, consumer_read_ready, consumer_read_data, consumer_write_valid, consumer_write_address, consumer_write_ready, consumer_write_data, mem_read_valid, mem_read_address, mem_read_ready, mem_read_data, mem_write_valid, mem_write_address, mem_write_ready, mem_write_data);
  (* src = "../build/gpu.v:75.13-75.16" *)
  input clk;
  wire clk;
  (* src = "../build/gpu.v:212.22-212.23" *)
  wire [31:0] \consumer_if[0].j ;
  (* src = "../build/gpu.v:212.22-212.23" *)
  wire [31:0] \consumer_if[1].j ;
  (* src = "../build/gpu.v:212.22-212.23" *)
  wire [31:0] \consumer_if[2].j ;
  (* src = "../build/gpu.v:212.22-212.23" *)
  wire [31:0] \consumer_if[3].j ;
  (* src = "../build/gpu.v:212.22-212.23" *)
  wire [31:0] \consumer_if[4].j ;
  (* src = "../build/gpu.v:212.22-212.23" *)
  wire [31:0] \consumer_if[5].j ;
  (* src = "../build/gpu.v:212.22-212.23" *)
  wire [31:0] \consumer_if[6].j ;
  (* src = "../build/gpu.v:212.22-212.23" *)
  wire [31:0] \consumer_if[7].j ;
  (* src = "../build/gpu.v:151.28-151.42" *)
  wire [7:0] consumer_mutex;
  (* src = "../build/gpu.v:78.49-78.70" *)
  input [63:0] consumer_read_address;
  wire [63:0] consumer_read_address;
  (* src = "../build/gpu.v:80.57-80.75" *)
  output [63:0] consumer_read_data;
  wire [63:0] consumer_read_data;
  (* src = "../build/gpu.v:79.35-79.54" *)
  output [7:0] consumer_read_ready;
  wire [7:0] consumer_read_ready;
  (* src = "../build/gpu.v:77.35-77.54" *)
  input [7:0] consumer_read_valid;
  wire [7:0] consumer_read_valid;
  (* src = "../build/gpu.v:82.49-82.71" *)
  input [63:0] consumer_write_address;
  wire [63:0] consumer_write_address;
  (* src = "../build/gpu.v:84.57-84.76" *)
  input [63:0] consumer_write_data;
  wire [63:0] consumer_write_data;
  (* src = "../build/gpu.v:83.35-83.55" *)
  output [7:0] consumer_write_ready;
  wire [7:0] consumer_write_ready;
  (* src = "../build/gpu.v:81.35-81.55" *)
  input [7:0] consumer_write_valid;
  wire [7:0] consumer_write_valid;
  (* src = "../build/gpu.v:147.12-147.28" *)
  wire [7:0] \controller_state[0] ;
  (* src = "../build/gpu.v:147.12-147.28" *)
  wire [7:0] \controller_state[1] ;
  (* src = "../build/gpu.v:147.12-147.28" *)
  wire [7:0] \controller_state[2] ;
  (* src = "../build/gpu.v:147.12-147.28" *)
  wire [7:0] \controller_state[3] ;
  (* src = "../build/gpu.v:150.36-150.52" *)
  wire [2:0] \current_consumer[0] ;
  (* src = "../build/gpu.v:150.36-150.52" *)
  wire [2:0] \current_consumer[1] ;
  (* src = "../build/gpu.v:150.36-150.52" *)
  wire [2:0] \current_consumer[2] ;
  (* src = "../build/gpu.v:150.36-150.52" *)
  wire [2:0] \current_consumer[3] ;
  (* src = "../build/gpu.v:153.28-153.35" *)
  wire [7:0] granted;
  (* src = "../build/gpu.v:152.28-152.44" *)
  wire [7:0] main_mem_request;
  (* src = "../build/gpu.v:86.48-86.64" *)
  output [31:0] mem_read_address;
  wire [31:0] mem_read_address;
  (* src = "../build/gpu.v:88.54-88.67" *)
  input [31:0] mem_read_data;
  wire [31:0] mem_read_data;
  (* src = "../build/gpu.v:87.34-87.48" *)
  input [3:0] mem_read_ready;
  wire [3:0] mem_read_ready;
  (* src = "../build/gpu.v:85.34-85.48" *)
  output [3:0] mem_read_valid;
  wire [3:0] mem_read_valid;
  (* src = "../build/gpu.v:90.48-90.65" *)
  output [31:0] mem_write_address;
  wire [31:0] mem_write_address;
  (* src = "../build/gpu.v:92.54-92.68" *)
  output [31:0] mem_write_data;
  wire [31:0] mem_write_data;
  (* src = "../build/gpu.v:91.34-91.49" *)
  input [3:0] mem_write_ready;
  wire [3:0] mem_write_ready;
  (* src = "../build/gpu.v:89.34-89.49" *)
  output [3:0] mem_write_valid;
  wire [3:0] mem_write_valid;
  (* src = "../build/gpu.v:76.13-76.18" *)
  input reset;
  wire reset;
  (* src = "../build/gpu.v:200.25-200.56" *)
  wire [8:1] sv2v_tmp_arbiter_instance_grant;
  assign \consumer_if[0].j  = 32'd0;
  assign \consumer_if[1].j  = 32'd1;
  assign \consumer_if[2].j  = 32'd2;
  assign \consumer_if[3].j  = 32'd3;
  assign \consumer_if[4].j  = 32'd4;
  assign \consumer_if[5].j  = 32'd5;
  assign \consumer_if[6].j  = 32'd6;
  assign \consumer_if[7].j  = 32'd7;
  assign consumer_mutex = 8'hxx;
  assign consumer_read_data = 64'h0000000000000000;
  assign consumer_read_ready = 8'h00;
  assign consumer_write_ready = 8'h00;
  assign \controller_state[0]  = 8'h00;
  assign \controller_state[1]  = 8'h00;
  assign \controller_state[2]  = 8'h00;
  assign \controller_state[3]  = 8'h00;
  assign \current_consumer[0]  = 3'h0;
  assign \current_consumer[1]  = 3'h0;
  assign \current_consumer[2]  = 3'h0;
  assign \current_consumer[3]  = 3'h0;
  assign granted = 8'h00;
  assign main_mem_request = 8'h00;
  assign mem_read_address = 32'd0;
  assign mem_read_valid = 4'h0;
  assign mem_write_address = 32'd0;
  assign mem_write_data = 32'd0;
  assign mem_write_valid = 4'h0;
  assign sv2v_tmp_arbiter_instance_grant = 8'h00;
endmodule

(* dynports =  1  *)
(* hdlname = "scheduler" *)
(* src = "../build/gpu.v:1551.1-1646.10" *)
module \$paramod\scheduler\THREADS_PER_BLOCK=s32'00000000000000000000000000000100 (clk, reset, start, decoded_mem_read_enable, decoded_mem_write_enable, decoded_ret, fetcher_state, lsu_state, current_pc, next_pc, core_state, done);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  (* force_downto = 32'd1 *)
  (* src = "../build/gpu.v:0.0-0.0|../build/gpu.v:1595.4-1644.11|/usr/bin/../share/yosys/techmap.v:583.28-583.35" *)
  (* unused_bits = "3 7 8 9 11 14 15 16 19" *)
  wire [20:0] _053_;
  (* force_downto = 32'd1 *)
  (* src = "../build/gpu.v:0.0-0.0|../build/gpu.v:1595.4-1644.11|/usr/bin/../share/yosys/techmap.v:575.21-575.22" *)
  wire [2:0] _054_;
  (* src = "../build/gpu.v:1566.13-1566.16" *)
  input clk;
  wire clk;
  (* src = "../build/gpu.v:1576.19-1576.29" *)
  output [2:0] core_state;
  reg [2:0] core_state;
  (* src = "../build/gpu.v:1574.19-1574.29" *)
  output [7:0] current_pc;
  reg [7:0] current_pc;
  (* src = "../build/gpu.v:1569.13-1569.36" *)
  input decoded_mem_read_enable;
  wire decoded_mem_read_enable;
  (* src = "../build/gpu.v:1570.13-1570.37" *)
  input decoded_mem_write_enable;
  wire decoded_mem_write_enable;
  (* src = "../build/gpu.v:1571.13-1571.24" *)
  input decoded_ret;
  wire decoded_ret;
  (* src = "../build/gpu.v:1577.13-1577.17" *)
  output done;
  reg done;
  (* src = "../build/gpu.v:1572.19-1572.32" *)
  input [2:0] fetcher_state;
  wire [2:0] fetcher_state;
  (* src = "../build/gpu.v:1573.45-1573.54" *)
  input [7:0] lsu_state;
  wire [7:0] lsu_state;
  (* src = "../build/gpu.v:1575.45-1575.52" *)
  input [31:0] next_pc;
  wire [31:0] next_pc;
  (* src = "../build/gpu.v:1567.13-1567.18" *)
  input reset;
  wire reset;
  (* src = "../build/gpu.v:1568.13-1568.18" *)
  input start;
  wire start;
  assign _002_ = core_state[0] | core_state[1];
  assign _003_ = core_state[2] & ~(_002_);
  assign _004_ = ~core_state[2];
  assign _005_ = core_state[0] | ~(core_state[1]);
  assign _006_ = _005_ | _004_;
  assign _007_ = _003_ | ~(_006_);
  assign _008_ = ~(core_state[0] & core_state[1]);
  assign _009_ = core_state[2] & ~(_008_);
  assign _010_ = core_state[1] | ~(core_state[0]);
  assign _011_ = core_state[2] & ~(_010_);
  assign _012_ = _011_ | _009_;
  assign _013_ = _012_ | _007_;
  assign _014_ = _004_ & ~(_008_);
  assign _015_ = _004_ & ~(_005_);
  assign _016_ = _015_ | _014_;
  assign _017_ = _004_ & ~(_010_);
  assign _018_ = _004_ & ~(_002_);
  assign _019_ = _018_ | _017_;
  assign _020_ = _019_ | _016_;
  assign _021_ = _020_ | _013_;
  assign _022_ = fetcher_state[1] & ~(fetcher_state[0]);
  assign _023_ = _022_ & ~(fetcher_state[2]);
  assign _024_ = _017_ & ~(_023_);
  assign _025_ = _021_ & ~(_024_);
  assign _026_ = ~(lsu_state[0] ^ lsu_state[1]);
  assign _027_ = lsu_state[2] ^ lsu_state[3];
  assign _028_ = _027_ | ~(_026_);
  assign _029_ = _026_ & ~(_027_);
  assign _030_ = lsu_state[4] ^ lsu_state[5];
  assign _031_ = _029_ & ~(_030_);
  assign _032_ = _028_ ? _029_ : _031_;
  assign _033_ = lsu_state[6] ^ lsu_state[7];
  assign _034_ = _032_ & ~(_033_);
  assign _035_ = _030_ | _028_;
  assign _036_ = _035_ ? _032_ : _034_;
  assign _037_ = _003_ & ~(_036_);
  assign _038_ = _009_ & start;
  assign _039_ = _038_ | _037_;
  assign _040_ = _025_ & ~(_039_);
  assign _041_ = _018_ & ~(start);
  assign _001_ = _040_ & ~(_041_);
  assign _000_ = ~(_006_ | decoded_ret);
  assign _053_[5] = decoded_ret & ~(_006_);
  assign _042_ = _006_ & ~(_009_);
  assign _043_ = _011_ | _003_;
  assign _044_ = _042_ & ~(_043_);
  assign _045_ = _017_ | _016_;
  assign _046_ = _045_ | ~(_044_);
  assign _047_ = ~(_015_ | _007_);
  assign _054_[0] = ~(_047_ & _046_);
  assign _048_ = ~(_053_[5] | _011_);
  assign _049_ = _017_ | _015_;
  assign _050_ = _048_ & ~(_049_);
  assign _054_[1] = _046_ & ~(_050_);
  assign _051_ = ~(_043_ | _053_[5]);
  assign _052_ = _051_ & ~(_014_);
  assign _054_[2] = _046_ & ~(_052_);
  (* src = "../build/gpu.v:1586.2-1645.5" *)
  always @(posedge clk)
    if (reset) core_state[0] <= 1'h0;
    else if (_001_) core_state[0] <= _054_[0];
  (* src = "../build/gpu.v:1586.2-1645.5" *)
  always @(posedge clk)
    if (reset) core_state[1] <= 1'h0;
    else if (_001_) core_state[1] <= _054_[1];
  (* src = "../build/gpu.v:1586.2-1645.5" *)
  always @(posedge clk)
    if (reset) core_state[2] <= 1'h0;
    else if (_001_) core_state[2] <= _054_[2];
  (* src = "../build/gpu.v:1586.2-1645.5" *)
  always @(posedge clk)
    if (reset) done <= 1'h0;
    else if (_053_[5]) done <= 1'h1;
  (* src = "../build/gpu.v:1586.2-1645.5" *)
  always @(posedge clk)
    if (reset) current_pc[0] <= 1'h0;
    else if (_000_) current_pc[0] <= next_pc[24];
  (* src = "../build/gpu.v:1586.2-1645.5" *)
  always @(posedge clk)
    if (reset) current_pc[1] <= 1'h0;
    else if (_000_) current_pc[1] <= next_pc[25];
  (* src = "../build/gpu.v:1586.2-1645.5" *)
  always @(posedge clk)
    if (reset) current_pc[2] <= 1'h0;
    else if (_000_) current_pc[2] <= next_pc[26];
  (* src = "../build/gpu.v:1586.2-1645.5" *)
  always @(posedge clk)
    if (reset) current_pc[3] <= 1'h0;
    else if (_000_) current_pc[3] <= next_pc[27];
  (* src = "../build/gpu.v:1586.2-1645.5" *)
  always @(posedge clk)
    if (reset) current_pc[4] <= 1'h0;
    else if (_000_) current_pc[4] <= next_pc[28];
  (* src = "../build/gpu.v:1586.2-1645.5" *)
  always @(posedge clk)
    if (reset) current_pc[5] <= 1'h0;
    else if (_000_) current_pc[5] <= next_pc[29];
  (* src = "../build/gpu.v:1586.2-1645.5" *)
  always @(posedge clk)
    if (reset) current_pc[6] <= 1'h0;
    else if (_000_) current_pc[6] <= next_pc[30];
  (* src = "../build/gpu.v:1586.2-1645.5" *)
  always @(posedge clk)
    if (reset) current_pc[7] <= 1'h0;
    else if (_000_) current_pc[7] <= next_pc[31];
  assign { _053_[20], _053_[18:17], _053_[15], _053_[13:12], _053_[10:9], _053_[7:6], _053_[4], _053_[2:0] } = { 3'h0, _053_[16], 3'h0, _053_[11], _053_[8], 1'h0, _053_[5], 3'h0 };
endmodule

(* src = "../build/gpu.v:3.1-45.10" *)
module alu(clk, reset, enable, core_state, decoded_alu_arithmetic_mux, decoded_alu_output_mux, rs, rt, alu_out);
  wire _0000_;
  wire _0001_;
  wire _0002_;
  wire _0003_;
  wire _0004_;
  wire _0005_;
  wire _0006_;
  wire _0007_;
  wire _0008_;
  wire _0009_;
  wire _0010_;
  wire _0011_;
  wire _0012_;
  wire _0013_;
  wire _0014_;
  wire _0015_;
  wire _0016_;
  wire _0017_;
  wire _0018_;
  wire _0019_;
  wire _0020_;
  wire _0021_;
  wire _0022_;
  wire _0023_;
  wire _0024_;
  wire _0025_;
  wire _0026_;
  wire _0027_;
  wire _0028_;
  wire _0029_;
  wire _0030_;
  wire _0031_;
  wire _0032_;
  wire _0033_;
  wire _0034_;
  wire _0035_;
  wire _0036_;
  wire _0037_;
  wire _0038_;
  wire _0039_;
  wire _0040_;
  wire _0041_;
  wire _0042_;
  wire _0043_;
  wire _0044_;
  wire _0045_;
  wire _0046_;
  wire _0047_;
  wire _0048_;
  wire _0049_;
  wire _0050_;
  wire _0051_;
  wire _0052_;
  wire _0053_;
  wire _0054_;
  wire _0055_;
  wire _0056_;
  wire _0057_;
  wire _0058_;
  wire _0059_;
  wire _0060_;
  wire _0061_;
  wire _0062_;
  wire _0063_;
  wire _0064_;
  wire _0065_;
  wire _0066_;
  wire _0067_;
  wire _0068_;
  wire _0069_;
  wire _0070_;
  wire _0071_;
  wire _0072_;
  wire _0073_;
  wire _0074_;
  wire _0075_;
  wire _0076_;
  wire _0077_;
  wire _0078_;
  wire _0079_;
  wire _0080_;
  wire _0081_;
  wire _0082_;
  wire _0083_;
  wire _0084_;
  wire _0085_;
  wire _0086_;
  wire _0087_;
  wire _0088_;
  wire _0089_;
  wire _0090_;
  wire _0091_;
  wire _0092_;
  wire _0093_;
  wire _0094_;
  wire _0095_;
  wire _0096_;
  wire _0097_;
  wire _0098_;
  wire _0099_;
  wire _0100_;
  wire _0101_;
  wire _0102_;
  wire _0103_;
  wire _0104_;
  wire _0105_;
  wire _0106_;
  wire _0107_;
  wire _0108_;
  wire _0109_;
  wire _0110_;
  wire _0111_;
  wire _0112_;
  wire _0113_;
  wire _0114_;
  wire _0115_;
  wire _0116_;
  wire _0117_;
  wire _0118_;
  wire _0119_;
  wire _0120_;
  wire _0121_;
  wire _0122_;
  wire _0123_;
  wire _0124_;
  wire _0125_;
  wire _0126_;
  wire _0127_;
  wire _0128_;
  wire _0129_;
  wire _0130_;
  wire _0131_;
  wire _0132_;
  wire _0133_;
  wire _0134_;
  wire _0135_;
  wire _0136_;
  wire _0137_;
  wire _0138_;
  wire _0139_;
  wire _0140_;
  wire _0141_;
  wire _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  wire _0157_;
  wire _0158_;
  wire _0159_;
  wire _0160_;
  wire _0161_;
  wire _0162_;
  wire _0163_;
  wire _0164_;
  wire _0165_;
  wire _0166_;
  wire _0167_;
  wire _0168_;
  wire _0169_;
  wire _0170_;
  wire _0171_;
  wire _0172_;
  wire _0173_;
  wire _0174_;
  wire _0175_;
  wire _0176_;
  wire _0177_;
  wire _0178_;
  wire _0179_;
  wire _0180_;
  wire _0181_;
  wire _0182_;
  wire _0183_;
  wire _0184_;
  wire _0185_;
  wire _0186_;
  wire _0187_;
  wire _0188_;
  wire _0189_;
  wire _0190_;
  wire _0191_;
  wire _0192_;
  wire _0193_;
  wire _0194_;
  wire _0195_;
  wire _0196_;
  wire _0197_;
  wire _0198_;
  wire _0199_;
  wire _0200_;
  wire _0201_;
  wire _0202_;
  wire _0203_;
  wire _0204_;
  wire _0205_;
  wire _0206_;
  wire _0207_;
  wire _0208_;
  wire _0209_;
  wire _0210_;
  wire _0211_;
  wire _0212_;
  wire _0213_;
  wire _0214_;
  wire _0215_;
  wire _0216_;
  wire _0217_;
  wire _0218_;
  wire _0219_;
  wire _0220_;
  wire _0221_;
  wire _0222_;
  wire _0223_;
  wire _0224_;
  wire _0225_;
  wire _0226_;
  wire _0227_;
  wire _0228_;
  wire _0229_;
  wire _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire _0246_;
  wire _0247_;
  wire _0248_;
  wire _0249_;
  wire _0250_;
  wire _0251_;
  wire _0252_;
  wire _0253_;
  wire _0254_;
  wire _0255_;
  wire _0256_;
  wire _0257_;
  wire _0258_;
  wire _0259_;
  wire _0260_;
  wire _0261_;
  wire _0262_;
  wire _0263_;
  wire _0264_;
  wire _0265_;
  wire _0266_;
  wire _0267_;
  wire _0268_;
  wire _0269_;
  wire _0270_;
  wire _0271_;
  wire _0272_;
  wire _0273_;
  wire _0274_;
  wire _0275_;
  wire _0276_;
  wire _0277_;
  wire _0278_;
  wire _0279_;
  wire _0280_;
  wire _0281_;
  wire _0282_;
  wire _0283_;
  wire _0284_;
  wire _0285_;
  wire _0286_;
  wire _0287_;
  wire _0288_;
  wire _0289_;
  wire _0290_;
  wire _0291_;
  wire _0292_;
  wire _0293_;
  wire _0294_;
  wire _0295_;
  wire _0296_;
  wire _0297_;
  wire _0298_;
  wire _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire _0306_;
  wire _0307_;
  wire _0308_;
  wire _0309_;
  wire _0310_;
  wire _0311_;
  wire _0312_;
  wire _0313_;
  wire _0314_;
  wire _0315_;
  wire _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire _0344_;
  wire _0345_;
  wire _0346_;
  wire _0347_;
  wire _0348_;
  wire _0349_;
  wire _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire _0364_;
  wire _0365_;
  wire _0366_;
  wire _0367_;
  wire _0368_;
  wire _0369_;
  wire _0370_;
  wire _0371_;
  wire _0372_;
  wire _0373_;
  wire _0374_;
  wire _0375_;
  wire _0376_;
  wire _0377_;
  wire _0378_;
  wire _0379_;
  wire _0380_;
  wire _0381_;
  wire _0382_;
  wire _0383_;
  wire _0384_;
  wire _0385_;
  wire _0386_;
  wire _0387_;
  wire _0388_;
  wire _0389_;
  wire _0390_;
  wire _0391_;
  wire _0392_;
  wire _0393_;
  wire _0394_;
  wire _0395_;
  wire _0396_;
  wire _0397_;
  wire _0398_;
  wire _0399_;
  wire _0400_;
  wire _0401_;
  wire _0402_;
  wire _0403_;
  wire _0404_;
  wire _0405_;
  wire _0406_;
  wire _0407_;
  wire _0408_;
  wire _0409_;
  wire _0410_;
  wire _0411_;
  wire _0412_;
  wire _0413_;
  wire _0414_;
  wire _0415_;
  wire _0416_;
  wire _0417_;
  wire _0418_;
  wire _0419_;
  wire _0420_;
  wire _0421_;
  wire _0422_;
  wire _0423_;
  wire _0424_;
  wire _0425_;
  wire _0426_;
  wire _0427_;
  wire _0428_;
  wire _0429_;
  wire _0430_;
  wire _0431_;
  wire _0432_;
  wire _0433_;
  wire _0434_;
  wire _0435_;
  wire _0436_;
  wire _0437_;
  wire _0438_;
  wire _0439_;
  wire _0440_;
  wire _0441_;
  wire _0442_;
  wire _0443_;
  wire _0444_;
  wire _0445_;
  wire _0446_;
  wire _0447_;
  wire _0448_;
  wire _0449_;
  wire _0450_;
  wire _0451_;
  wire _0452_;
  wire _0453_;
  wire _0454_;
  wire _0455_;
  wire _0456_;
  wire _0457_;
  wire _0458_;
  wire _0459_;
  wire _0460_;
  wire _0461_;
  wire _0462_;
  wire _0463_;
  wire _0464_;
  wire _0465_;
  wire _0466_;
  wire _0467_;
  wire _0468_;
  wire _0469_;
  wire _0470_;
  wire _0471_;
  wire _0472_;
  wire _0473_;
  wire _0474_;
  wire _0475_;
  wire _0476_;
  wire _0477_;
  wire _0478_;
  wire _0479_;
  wire _0480_;
  wire _0481_;
  wire _0482_;
  wire _0483_;
  wire _0484_;
  wire _0485_;
  wire _0486_;
  wire _0487_;
  wire _0488_;
  wire _0489_;
  wire _0490_;
  wire _0491_;
  wire _0492_;
  wire _0493_;
  wire _0494_;
  wire _0495_;
  wire _0496_;
  wire _0497_;
  wire _0498_;
  wire _0499_;
  wire _0500_;
  wire _0501_;
  wire _0502_;
  wire _0503_;
  wire _0504_;
  wire _0505_;
  wire _0506_;
  wire _0507_;
  wire _0508_;
  wire _0509_;
  wire _0510_;
  wire _0511_;
  wire _0512_;
  wire _0513_;
  wire _0514_;
  wire _0515_;
  wire _0516_;
  wire _0517_;
  wire _0518_;
  wire _0519_;
  wire _0520_;
  wire _0521_;
  wire _0522_;
  wire _0523_;
  wire _0524_;
  wire _0525_;
  wire _0526_;
  wire _0527_;
  wire _0528_;
  wire _0529_;
  wire _0530_;
  wire _0531_;
  wire _0532_;
  wire _0533_;
  wire _0534_;
  wire _0535_;
  wire _0536_;
  wire _0537_;
  wire _0538_;
  wire _0539_;
  wire _0540_;
  wire _0541_;
  wire _0542_;
  wire _0543_;
  wire _0544_;
  wire _0545_;
  wire _0546_;
  wire _0547_;
  wire _0548_;
  wire _0549_;
  wire _0550_;
  wire _0551_;
  wire _0552_;
  wire _0553_;
  wire _0554_;
  wire _0555_;
  wire _0556_;
  wire _0557_;
  wire _0558_;
  wire _0559_;
  wire _0560_;
  wire _0561_;
  wire _0562_;
  wire _0563_;
  wire _0564_;
  wire _0565_;
  wire _0566_;
  wire _0567_;
  wire _0568_;
  wire _0569_;
  wire _0570_;
  wire _0571_;
  wire _0572_;
  wire _0573_;
  wire _0574_;
  wire _0575_;
  wire _0576_;
  wire _0577_;
  wire _0578_;
  wire _0579_;
  wire _0580_;
  wire _0581_;
  wire _0582_;
  wire _0583_;
  wire _0584_;
  wire _0585_;
  wire _0586_;
  wire _0587_;
  wire _0588_;
  wire _0589_;
  wire _0590_;
  wire _0591_;
  wire _0592_;
  wire _0593_;
  wire _0594_;
  wire _0595_;
  wire _0596_;
  wire _0597_;
  wire _0598_;
  wire _0599_;
  wire _0600_;
  wire _0601_;
  wire _0602_;
  wire _0603_;
  wire _0604_;
  wire _0605_;
  wire _0606_;
  wire _0607_;
  wire _0608_;
  wire _0609_;
  wire _0610_;
  wire _0611_;
  wire _0612_;
  wire _0613_;
  wire _0614_;
  wire _0615_;
  wire _0616_;
  wire _0617_;
  wire _0618_;
  wire _0619_;
  wire _0620_;
  wire _0621_;
  wire _0622_;
  wire _0623_;
  wire _0624_;
  wire _0625_;
  wire _0626_;
  wire _0627_;
  wire _0628_;
  wire _0629_;
  wire _0630_;
  wire _0631_;
  wire _0632_;
  wire _0633_;
  wire _0634_;
  wire _0635_;
  wire _0636_;
  wire _0637_;
  wire _0638_;
  wire _0639_;
  wire _0640_;
  wire _0641_;
  wire _0642_;
  wire _0643_;
  wire _0644_;
  wire _0645_;
  wire _0646_;
  wire _0647_;
  wire _0648_;
  wire _0649_;
  wire _0650_;
  wire _0651_;
  wire _0652_;
  wire _0653_;
  wire _0654_;
  wire _0655_;
  wire _0656_;
  wire _0657_;
  wire _0658_;
  wire _0659_;
  wire _0660_;
  wire _0661_;
  wire _0662_;
  wire _0663_;
  wire _0664_;
  wire _0665_;
  wire _0666_;
  wire _0667_;
  wire _0668_;
  wire _0669_;
  wire _0670_;
  wire _0671_;
  wire _0672_;
  wire _0673_;
  wire _0674_;
  wire _0675_;
  wire _0676_;
  wire _0677_;
  wire _0678_;
  wire _0679_;
  wire _0680_;
  wire _0681_;
  wire _0682_;
  wire _0683_;
  wire _0684_;
  wire _0685_;
  (* src = "../build/gpu.v:22.20-22.27" *)
  output [7:0] alu_out;
  wire [7:0] alu_out;
  (* src = "../build/gpu.v:27.12-27.23" *)
  reg [7:0] alu_out_reg;
  (* src = "../build/gpu.v:14.13-14.16" *)
  input clk;
  wire clk;
  (* src = "../build/gpu.v:17.19-17.29" *)
  input [2:0] core_state;
  wire [2:0] core_state;
  (* src = "../build/gpu.v:18.19-18.45" *)
  input [1:0] decoded_alu_arithmetic_mux;
  wire [1:0] decoded_alu_arithmetic_mux;
  (* src = "../build/gpu.v:19.13-19.35" *)
  input decoded_alu_output_mux;
  wire decoded_alu_output_mux;
  (* src = "../build/gpu.v:16.13-16.19" *)
  input enable;
  wire enable;
  (* src = "../build/gpu.v:15.13-15.18" *)
  input reset;
  wire reset;
  (* src = "../build/gpu.v:20.19-20.21" *)
  input [7:0] rs;
  wire [7:0] rs;
  (* src = "../build/gpu.v:21.19-21.21" *)
  input [7:0] rt;
  wire [7:0] rt;
  assign _0241_ = core_state[0] & ~(core_state[1]);
  assign _0252_ = ~(_0241_ & core_state[2]);
  assign _0000_ = enable & ~(_0252_);
  assign _0273_ = rt[0] ^ rs[0];
  assign _0284_ = decoded_alu_arithmetic_mux[1] & decoded_alu_arithmetic_mux[0];
  assign _0295_ = decoded_alu_arithmetic_mux[1] & ~(decoded_alu_arithmetic_mux[0]);
  assign _0306_ = ~(_0295_ | _0284_);
  assign _0317_ = ~_0284_;
  assign _0327_ = ~rt[7];
  assign _0338_ = ~rs[7];
  assign _0349_ = ~(rs[5] | rs[4]);
  assign _0360_ = ~rs[6];
  assign _0371_ = rt[0] ^ rs[7];
  assign _0382_ = _0360_ & ~(_0371_);
  assign _0393_ = _0382_ & _0349_;
  assign _0403_ = rs[3] | rs[2];
  assign _0414_ = rs[0] | rs[1];
  assign _0425_ = _0414_ | _0403_;
  assign _0435_ = _0425_ | ~(_0393_);
  assign _0446_ = rt[4] | rt[3];
  assign _0456_ = rt[2] | rt[1];
  assign _0467_ = _0456_ | _0446_;
  assign _0478_ = rt[6] | rt[5];
  assign _0489_ = _0478_ | rt[7];
  assign _0499_ = _0489_ | _0467_;
  assign _0510_ = _0499_ | _0435_;
  assign _0521_ = rt[0] | ~(rs[7]);
  assign _0532_ = rs[6] & ~(_0371_);
  assign _0542_ = _0521_ & ~(_0532_);
  assign _0563_ = _0382_ & ~(_0349_);
  assign _0574_ = _0542_ & ~(_0563_);
  assign _0594_ = _0403_ & ~(_0403_);
  assign _0605_ = _0393_ & ~(_0594_);
  assign _0616_ = _0574_ & ~(_0605_);
  assign _0627_ = _0616_ | _0467_;
  assign _0638_ = _0627_ | _0478_;
  assign _0649_ = _0327_ & ~(_0638_);
  assign _0650_ = _0510_ & ~(_0649_);
  assign _0651_ = _0349_ & ~(_0594_);
  assign _0652_ = _0349_ & ~(_0651_);
  assign _0653_ = _0652_ & ~(rs[6]);
  assign _0654_ = ~(_0653_ ^ _0371_);
  assign _0655_ = _0650_ ? _0338_ : _0654_;
  assign _0656_ = ~rs[5];
  assign _0657_ = _0594_ & ~(rs[4]);
  assign _0658_ = _0657_ ^ _0656_;
  assign _0659_ = _0650_ ? _0656_ : _0658_;
  assign _0660_ = ~rs[4];
  assign _0661_ = _0594_ ^ _0660_;
  assign _0662_ = ~_0661_;
  assign _0663_ = _0650_ ? rs[4] : _0662_;
  assign _0664_ = _0663_ | ~(_0659_);
  assign _0665_ = _0655_ ^ rt[1];
  assign _0666_ = ~rt[0];
  assign _0667_ = _0652_ ^ _0360_;
  assign _0668_ = _0650_ ? _0360_ : _0667_;
  assign _0669_ = _0668_ ^ _0666_;
  assign _0670_ = _0665_ & ~(_0669_);
  assign _0671_ = _0664_ | ~(_0670_);
  assign _0672_ = _0671_ | _0425_;
  assign _0673_ = ~(rt[7] | rt[6]);
  assign _0674_ = ~_0673_;
  assign _0675_ = ~(rt[5] | rt[4]);
  assign _0676_ = ~(rt[3] | rt[2]);
  assign _0677_ = ~(_0676_ & _0675_);
  assign _0001_ = _0677_ | _0674_;
  assign _0002_ = _0001_ | _0672_;
  assign _0003_ = _0655_ | rt[1];
  assign _0004_ = _0668_ | rt[0];
  assign _0005_ = _0665_ & ~(_0004_);
  assign _0006_ = _0003_ & ~(_0005_);
  assign _0007_ = _0659_ & ~(_0663_);
  assign _0008_ = _0670_ & ~(_0007_);
  assign _0009_ = _0006_ & ~(_0008_);
  assign _0010_ = ~_0594_;
  assign _0011_ = _0010_ & ~(_0671_);
  assign _0012_ = _0009_ & ~(_0011_);
  assign _0013_ = _0012_ | _0677_;
  assign _0014_ = _0673_ & ~(_0013_);
  assign _0015_ = _0002_ & ~(_0014_);
  assign _0016_ = ~_0669_;
  assign _0017_ = _0010_ & ~(_0664_);
  assign _0018_ = _0007_ & ~(_0017_);
  assign _0019_ = _0016_ & ~(_0018_);
  assign _0020_ = _0004_ & ~(_0019_);
  assign _0021_ = _0020_ ^ _0665_;
  assign _0022_ = _0015_ ? _0655_ : _0021_;
  assign _0023_ = _0594_ & ~(_0663_);
  assign _0024_ = _0023_ ^ _0659_;
  assign _0025_ = _0015_ ? _0659_ : _0024_;
  assign _0026_ = _0025_ ^ rt[0];
  assign _0027_ = ~_0663_;
  assign _0028_ = _0663_ ^ _0010_;
  assign _0029_ = _0015_ ? _0027_ : _0028_;
  assign _0030_ = ~(_0029_ & _0026_);
  assign _0031_ = _0022_ ^ rt[2];
  assign _0032_ = ~rt[1];
  assign _0033_ = _0018_ ^ _0016_;
  assign _0034_ = _0015_ ? _0668_ : _0033_;
  assign _0035_ = _0034_ ^ _0032_;
  assign _0036_ = _0031_ & ~(_0035_);
  assign _0037_ = _0030_ | ~(_0036_);
  assign _0038_ = _0037_ | _0425_;
  assign _0039_ = _0478_ | _0446_;
  assign _0040_ = _0039_ | rt[7];
  assign _0041_ = _0040_ | _0038_;
  assign _0042_ = _0022_ | rt[2];
  assign _0043_ = _0034_ | rt[1];
  assign _0044_ = _0031_ & ~(_0043_);
  assign _0045_ = _0042_ & ~(_0044_);
  assign _0046_ = _0025_ | rt[0];
  assign _0047_ = _0026_ & ~(_0029_);
  assign _0048_ = _0046_ & ~(_0047_);
  assign _0049_ = _0036_ & ~(_0048_);
  assign _0050_ = _0045_ & ~(_0049_);
  assign _0051_ = _0010_ & ~(_0037_);
  assign _0052_ = _0050_ & ~(_0051_);
  assign _0053_ = _0052_ | _0039_;
  assign _0054_ = _0327_ & ~(_0053_);
  assign _0055_ = _0041_ & ~(_0054_);
  assign _0056_ = ~_0035_;
  assign _0057_ = _0010_ & ~(_0030_);
  assign _0058_ = _0048_ & ~(_0057_);
  assign _0059_ = _0056_ & ~(_0058_);
  assign _0060_ = _0043_ & ~(_0059_);
  assign _0061_ = _0060_ ^ _0031_;
  assign _0062_ = _0055_ ? _0022_ : _0061_;
  assign _0063_ = _0675_ & _0673_;
  assign _0064_ = _0029_ & ~(_0010_);
  assign _0065_ = _0064_ ^ _0026_;
  assign _0066_ = _0055_ ? _0025_ : _0065_;
  assign _0067_ = _0066_ ^ rt[1];
  assign _0068_ = _0029_ ^ _0594_;
  assign _0069_ = _0055_ ? _0029_ : _0068_;
  assign _0070_ = _0069_ ^ _0666_;
  assign _0071_ = _0070_ | ~(_0067_);
  assign _0072_ = _0062_ ^ rt[3];
  assign _0073_ = ~rt[2];
  assign _0074_ = _0058_ ^ _0056_;
  assign _0075_ = _0055_ ? _0034_ : _0074_;
  assign _0076_ = _0075_ ^ _0073_;
  assign _0077_ = _0072_ & ~(_0076_);
  assign _0078_ = _0071_ | ~(_0077_);
  assign _0079_ = ~(_0078_ | _0425_);
  assign _0080_ = ~(_0079_ & _0063_);
  assign _0081_ = _0062_ | rt[3];
  assign _0082_ = _0075_ | rt[2];
  assign _0083_ = _0072_ & ~(_0082_);
  assign _0084_ = _0081_ & ~(_0083_);
  assign _0085_ = _0066_ | rt[1];
  assign _0086_ = _0069_ | rt[0];
  assign _0087_ = _0067_ & ~(_0086_);
  assign _0088_ = _0085_ & ~(_0087_);
  assign _0089_ = _0077_ & ~(_0088_);
  assign _0090_ = _0084_ & ~(_0089_);
  assign _0091_ = _0010_ & ~(_0078_);
  assign _0092_ = _0090_ & ~(_0091_);
  assign _0093_ = _0063_ & ~(_0092_);
  assign _0094_ = _0080_ & ~(_0093_);
  assign _0095_ = ~_0076_;
  assign _0096_ = _0010_ & ~(_0071_);
  assign _0097_ = _0088_ & ~(_0096_);
  assign _0098_ = _0095_ & ~(_0097_);
  assign _0099_ = _0082_ & ~(_0098_);
  assign _0100_ = _0099_ ^ _0072_;
  assign _0101_ = _0094_ ? _0062_ : _0100_;
  assign _0102_ = _0010_ & ~(_0070_);
  assign _0103_ = _0086_ & ~(_0102_);
  assign _0104_ = _0103_ ^ _0067_;
  assign _0105_ = _0094_ ? _0066_ : _0104_;
  assign _0106_ = _0105_ ^ rt[2];
  assign _0107_ = _0070_ ^ _0010_;
  assign _0108_ = _0094_ ? _0069_ : _0107_;
  assign _0109_ = _0108_ ^ _0032_;
  assign _0110_ = _0106_ & ~(_0109_);
  assign _0111_ = _0101_ ^ rt[4];
  assign _0112_ = ~rt[3];
  assign _0113_ = _0097_ ^ _0095_;
  assign _0114_ = _0094_ ? _0075_ : _0113_;
  assign _0115_ = _0114_ ^ _0112_;
  assign _0116_ = _0111_ & ~(_0115_);
  assign _0117_ = _0116_ & _0110_;
  assign _0118_ = rt[0] ^ rs[3];
  assign _0119_ = _0118_ | rs[2];
  assign _0120_ = ~(_0119_ | _0414_);
  assign _0121_ = ~(_0120_ & _0117_);
  assign _0122_ = _0121_ | _0489_;
  assign _0123_ = _0101_ | rt[4];
  assign _0124_ = _0114_ | rt[3];
  assign _0125_ = _0111_ & ~(_0124_);
  assign _0126_ = _0123_ & ~(_0125_);
  assign _0127_ = _0105_ | rt[2];
  assign _0128_ = _0108_ | rt[1];
  assign _0129_ = _0106_ & ~(_0128_);
  assign _0130_ = _0127_ & ~(_0129_);
  assign _0131_ = _0116_ & ~(_0130_);
  assign _0132_ = _0126_ & ~(_0131_);
  assign _0133_ = rs[3] & ~(rt[0]);
  assign _0134_ = rs[2] & ~(_0118_);
  assign _0135_ = _0134_ | _0133_;
  assign _0136_ = _0119_ & ~(_0135_);
  assign _0137_ = _0117_ & ~(_0136_);
  assign _0138_ = _0132_ & ~(_0137_);
  assign _0139_ = _0138_ | _0478_;
  assign _0140_ = _0327_ & ~(_0139_);
  assign _0141_ = _0122_ & ~(_0140_);
  assign _0142_ = ~_0115_;
  assign _0143_ = _0110_ & ~(_0136_);
  assign _0144_ = _0130_ & ~(_0143_);
  assign _0145_ = _0142_ & ~(_0144_);
  assign _0146_ = _0124_ & ~(_0145_);
  assign _0147_ = _0146_ ^ _0111_;
  assign _0148_ = _0141_ ? _0101_ : _0147_;
  assign _0149_ = ~(_0136_ | _0109_);
  assign _0150_ = _0128_ & ~(_0149_);
  assign _0151_ = _0150_ ^ _0106_;
  assign _0152_ = _0141_ ? _0105_ : _0151_;
  assign _0153_ = _0152_ ^ rt[3];
  assign _0154_ = ~(_0136_ ^ _0109_);
  assign _0155_ = _0141_ ? _0108_ : _0154_;
  assign _0156_ = _0155_ ^ _0073_;
  assign _0157_ = _0153_ & ~(_0156_);
  assign _0158_ = _0148_ ^ rt[5];
  assign _0159_ = ~rt[4];
  assign _0160_ = _0144_ ^ _0142_;
  assign _0161_ = _0141_ ? _0114_ : _0160_;
  assign _0162_ = _0161_ ^ _0159_;
  assign _0163_ = _0158_ & ~(_0162_);
  assign _0164_ = _0163_ & _0157_;
  assign _0165_ = ~rs[3];
  assign _0166_ = ~_0118_;
  assign _0167_ = _0141_ ? _0165_ : _0166_;
  assign _0168_ = _0167_ ^ rt[1];
  assign _0169_ = rt[0] ^ rs[2];
  assign _0170_ = ~_0169_;
  assign _0171_ = ~(_0170_ & _0168_);
  assign _0172_ = ~(_0171_ | _0414_);
  assign _0173_ = ~(_0172_ & _0164_);
  assign _0174_ = _0173_ | _0674_;
  assign _0175_ = _0148_ | rt[5];
  assign _0176_ = _0161_ | rt[4];
  assign _0177_ = _0158_ & ~(_0176_);
  assign _0178_ = _0175_ & ~(_0177_);
  assign _0179_ = _0152_ | rt[3];
  assign _0180_ = _0155_ | rt[2];
  assign _0181_ = _0153_ & ~(_0180_);
  assign _0182_ = _0179_ & ~(_0181_);
  assign _0183_ = _0163_ & ~(_0182_);
  assign _0184_ = _0178_ & ~(_0183_);
  assign _0185_ = _0032_ & ~(_0167_);
  assign _0186_ = rt[0] | ~(rs[2]);
  assign _0187_ = _0168_ & ~(_0186_);
  assign _0188_ = _0187_ | _0185_;
  assign _0189_ = _0171_ & ~(_0188_);
  assign _0190_ = _0164_ & ~(_0189_);
  assign _0191_ = _0184_ & ~(_0190_);
  assign _0192_ = _0673_ & ~(_0191_);
  assign _0193_ = _0174_ & ~(_0192_);
  assign _0194_ = ~_0162_;
  assign _0195_ = _0157_ & ~(_0189_);
  assign _0196_ = _0182_ & ~(_0195_);
  assign _0197_ = _0194_ & ~(_0196_);
  assign _0198_ = _0176_ & ~(_0197_);
  assign _0199_ = _0198_ ^ _0158_;
  assign _0200_ = _0193_ ? _0148_ : _0199_;
  assign _0201_ = ~_0156_;
  assign _0202_ = _0201_ & ~(_0189_);
  assign _0203_ = _0180_ & ~(_0202_);
  assign _0204_ = _0203_ ^ _0153_;
  assign _0205_ = _0193_ ? _0152_ : _0204_;
  assign _0206_ = _0205_ ^ rt[4];
  assign _0207_ = _0189_ ^ _0201_;
  assign _0208_ = _0193_ ? _0155_ : _0207_;
  assign _0209_ = _0208_ ^ _0112_;
  assign _0210_ = _0206_ & ~(_0209_);
  assign _0211_ = _0200_ ^ rt[6];
  assign _0212_ = ~rt[5];
  assign _0213_ = _0196_ ^ _0194_;
  assign _0214_ = _0193_ ? _0161_ : _0213_;
  assign _0215_ = _0214_ ^ _0212_;
  assign _0216_ = _0211_ & ~(_0215_);
  assign _0217_ = _0216_ & _0210_;
  assign _0218_ = rt[0] & ~(rs[2]);
  assign _0219_ = _0218_ ^ _0168_;
  assign _0220_ = _0193_ ? _0167_ : _0219_;
  assign _0221_ = _0220_ ^ rt[2];
  assign _0222_ = ~rs[2];
  assign _0223_ = _0193_ ? _0222_ : _0170_;
  assign _0224_ = _0223_ ^ _0032_;
  assign _0225_ = _0221_ & ~(_0224_);
  assign _0226_ = rt[0] ^ rs[1];
  assign _0227_ = ~(_0226_ | rs[0]);
  assign _0228_ = ~(_0227_ & _0225_);
  assign _0229_ = _0228_ | ~(_0217_);
  assign _0230_ = _0229_ | rt[7];
  assign _0231_ = _0200_ | rt[6];
  assign _0232_ = _0214_ | rt[5];
  assign _0233_ = _0211_ & ~(_0232_);
  assign _0234_ = _0231_ & ~(_0233_);
  assign _0235_ = _0205_ | rt[4];
  assign _0236_ = _0208_ | rt[3];
  assign _0237_ = _0206_ & ~(_0236_);
  assign _0238_ = _0235_ & ~(_0237_);
  assign _0239_ = _0216_ & ~(_0238_);
  assign _0240_ = _0234_ & ~(_0239_);
  assign _0242_ = _0220_ | rt[2];
  assign _0243_ = _0223_ | rt[1];
  assign _0244_ = _0221_ & ~(_0243_);
  assign _0245_ = _0242_ & ~(_0244_);
  assign _0246_ = rt[0] & ~(rs[1]);
  assign _0247_ = _0225_ & ~(_0246_);
  assign _0248_ = _0245_ & ~(_0247_);
  assign _0249_ = _0217_ & ~(_0248_);
  assign _0250_ = _0240_ & ~(_0249_);
  assign _0251_ = _0327_ & ~(_0250_);
  assign _0253_ = _0230_ & ~(_0251_);
  assign _0254_ = ~_0215_;
  assign _0255_ = _0210_ & ~(_0248_);
  assign _0256_ = _0238_ & ~(_0255_);
  assign _0257_ = _0254_ & ~(_0256_);
  assign _0258_ = _0232_ & ~(_0257_);
  assign _0259_ = _0258_ ^ _0211_;
  assign _0260_ = _0253_ ? _0200_ : _0259_;
  assign _0261_ = _0260_ & ~(_0327_);
  assign _0262_ = _0260_ ^ rt[7];
  assign _0263_ = _0256_ ^ _0254_;
  assign _0264_ = _0253_ ? _0214_ : _0263_;
  assign _0265_ = ~(_0264_ & rt[6]);
  assign _0266_ = _0262_ & ~(_0265_);
  assign _0267_ = _0266_ | _0261_;
  assign _0268_ = ~rt[6];
  assign _0269_ = _0264_ ^ _0268_;
  assign _0270_ = _0262_ & ~(_0269_);
  assign _0271_ = ~(_0248_ | _0209_);
  assign _0272_ = _0236_ & ~(_0271_);
  assign _0274_ = _0272_ ^ _0206_;
  assign _0275_ = _0253_ ? _0205_ : _0274_;
  assign _0276_ = ~(_0275_ & rt[5]);
  assign _0277_ = _0275_ ^ _0212_;
  assign _0278_ = _0248_ ^ _0209_;
  assign _0279_ = ~_0278_;
  assign _0280_ = _0253_ ? _0208_ : _0279_;
  assign _0281_ = _0280_ & ~(_0159_);
  assign _0282_ = _0281_ & ~(_0277_);
  assign _0283_ = _0276_ & ~(_0282_);
  assign _0285_ = _0270_ & ~(_0283_);
  assign _0286_ = _0285_ | _0267_;
  assign _0287_ = _0280_ ^ _0159_;
  assign _0288_ = _0287_ | _0277_;
  assign _0289_ = _0270_ & ~(_0288_);
  assign _0290_ = ~(_0246_ | _0224_);
  assign _0291_ = _0243_ & ~(_0290_);
  assign _0292_ = _0291_ ^ _0221_;
  assign _0293_ = _0253_ ? _0220_ : _0292_;
  assign _0294_ = ~(_0293_ & rt[3]);
  assign _0296_ = _0293_ ^ rt[3];
  assign _0297_ = ~(_0246_ ^ _0224_);
  assign _0298_ = _0253_ ? _0223_ : _0297_;
  assign _0299_ = ~(_0298_ & rt[2]);
  assign _0300_ = _0296_ & ~(_0299_);
  assign _0301_ = _0294_ & ~(_0300_);
  assign _0302_ = _0298_ ^ _0073_;
  assign _0303_ = _0302_ | ~(_0296_);
  assign _0304_ = ~rs[1];
  assign _0305_ = ~_0226_;
  assign _0307_ = _0253_ ? _0304_ : _0305_;
  assign _0308_ = ~(_0307_ & rt[1]);
  assign _0309_ = _0307_ ^ _0032_;
  assign _0310_ = rt[0] | ~(rs[0]);
  assign _0311_ = _0310_ & ~(_0309_);
  assign _0312_ = _0311_ | ~(_0308_);
  assign _0313_ = _0312_ & ~(_0303_);
  assign _0314_ = _0301_ & ~(_0313_);
  assign _0315_ = _0289_ & ~(_0314_);
  assign _0316_ = _0315_ | _0286_;
  assign _0318_ = _0309_ | _0273_;
  assign _0319_ = _0318_ | _0303_;
  assign _0320_ = _0289_ & ~(_0319_);
  assign _0321_ = _0316_ & ~(_0320_);
  assign _0322_ = _0321_ | _0317_;
  assign _0323_ = ~(rt[0] & rs[0]);
  assign _0324_ = _0295_ & ~(_0323_);
  assign _0325_ = _0324_ | ~(_0322_);
  assign _0326_ = _0306_ ? _0273_ : _0325_;
  assign _0678_ = _0326_ & ~(decoded_alu_output_mux);
  assign _0328_ = ~decoded_alu_output_mux;
  assign _0329_ = decoded_alu_arithmetic_mux[0] & ~(decoded_alu_arithmetic_mux[1]);
  assign _0330_ = ~(rt[0] ^ rt[1]);
  assign _0331_ = _0329_ ? _0032_ : _0330_;
  assign _0332_ = _0331_ ^ _0304_;
  assign _0333_ = rt[0] & ~(rs[0]);
  assign _0334_ = _0333_ ^ _0332_;
  assign _0335_ = ~(_0253_ | _0317_);
  assign _0336_ = rt[0] & rs[1];
  assign _0337_ = rs[0] & rt[1];
  assign _0339_ = ~(_0337_ ^ _0336_);
  assign _0340_ = _0295_ & ~(_0339_);
  assign _0341_ = _0340_ | _0335_;
  assign _0342_ = _0306_ ? _0334_ : _0341_;
  assign _0343_ = rs[7] & ~(rt[7]);
  assign _0344_ = rs[7] ^ rt[7];
  assign _0345_ = rt[6] | ~(rs[6]);
  assign _0346_ = ~(_0345_ | _0344_);
  assign _0347_ = ~(_0346_ | _0343_);
  assign _0348_ = rs[5] & ~(rt[5]);
  assign _0350_ = rs[5] ^ rt[5];
  assign _0351_ = rt[4] | ~(rs[4]);
  assign _0352_ = ~(_0351_ | _0350_);
  assign _0353_ = ~(_0352_ | _0348_);
  assign _0354_ = rs[6] ^ rt[6];
  assign _0355_ = _0354_ | _0344_;
  assign _0356_ = ~(_0355_ | _0353_);
  assign _0357_ = _0347_ & ~(_0356_);
  assign _0358_ = rs[3] & ~(rt[3]);
  assign _0359_ = rs[3] ^ rt[3];
  assign _0361_ = rt[2] | ~(rs[2]);
  assign _0362_ = ~(_0361_ | _0359_);
  assign _0363_ = _0362_ | _0358_;
  assign _0364_ = rs[1] & ~(rt[1]);
  assign _0365_ = rt[1] ^ rs[1];
  assign _0366_ = ~(_0365_ | _0333_);
  assign _0367_ = ~(_0366_ | _0364_);
  assign _0368_ = rt[2] ^ rs[2];
  assign _0369_ = ~(_0368_ | _0359_);
  assign _0370_ = _0369_ & ~(_0367_);
  assign _0372_ = _0370_ | _0363_;
  assign _0373_ = rs[4] ^ rt[4];
  assign _0374_ = _0373_ | _0350_;
  assign _0375_ = _0374_ | _0355_;
  assign _0376_ = _0372_ & ~(_0375_);
  assign _0377_ = _0357_ & ~(_0376_);
  assign _0378_ = _0365_ ^ _0333_;
  assign _0379_ = _0378_ | _0273_;
  assign _0380_ = _0368_ ^ _0367_;
  assign _0381_ = ~(_0368_ | _0367_);
  assign _0383_ = _0361_ & ~(_0381_);
  assign _0384_ = _0383_ ^ _0359_;
  assign _0385_ = _0384_ | _0380_;
  assign _0386_ = _0385_ | _0379_;
  assign _0387_ = ~(_0373_ ^ _0372_);
  assign _0388_ = _0372_ & ~(_0373_);
  assign _0389_ = _0351_ & ~(_0388_);
  assign _0390_ = _0389_ ^ _0350_;
  assign _0391_ = _0390_ | _0387_;
  assign _0392_ = _0372_ & ~(_0374_);
  assign _0394_ = _0353_ & ~(_0392_);
  assign _0395_ = _0394_ ^ _0354_;
  assign _0396_ = ~(_0394_ | _0354_);
  assign _0397_ = _0345_ & ~(_0396_);
  assign _0398_ = _0397_ ^ _0344_;
  assign _0399_ = _0398_ | _0395_;
  assign _0400_ = _0399_ | _0391_;
  assign _0401_ = _0400_ | _0386_;
  assign _0402_ = ~(_0401_ | _0377_);
  assign _0679_ = decoded_alu_output_mux ? _0402_ : _0342_;
  assign _0404_ = ~_0402_;
  assign _0405_ = ~(rt[0] | rt[1]);
  assign _0406_ = _0405_ ^ rt[2];
  assign _0407_ = _0329_ ? _0073_ : _0406_;
  assign _0408_ = _0407_ ^ _0222_;
  assign _0409_ = _0331_ & ~(_0304_);
  assign _0410_ = ~(_0333_ | _0332_);
  assign _0411_ = ~(_0410_ | _0409_);
  assign _0412_ = _0411_ ^ _0408_;
  assign _0413_ = _0284_ & ~(_0193_);
  assign _0415_ = rt[1] & rs[1];
  assign _0416_ = rt[0] & rs[2];
  assign _0417_ = rs[0] & rt[2];
  assign _0418_ = ~(_0417_ ^ _0416_);
  assign _0419_ = _0418_ ^ _0415_;
  assign _0420_ = _0337_ & _0336_;
  assign _0421_ = _0420_ ^ _0419_;
  assign _0422_ = _0295_ & ~(_0421_);
  assign _0423_ = _0422_ | _0413_;
  assign _0424_ = _0306_ ? _0412_ : _0423_;
  assign _0680_ = decoded_alu_output_mux ? _0404_ : _0424_;
  assign _0426_ = _0405_ & ~(rt[2]);
  assign _0427_ = _0426_ ^ rt[3];
  assign _0428_ = _0329_ ? _0112_ : _0427_;
  assign _0429_ = _0428_ ^ _0165_;
  assign _0430_ = ~(_0407_ & rs[2]);
  assign _0431_ = ~(_0411_ | _0408_);
  assign _0432_ = _0431_ | ~(_0430_);
  assign _0433_ = _0432_ ^ _0429_;
  assign _0434_ = _0141_ | _0317_;
  assign _0436_ = rt[1] & rs[2];
  assign _0437_ = rt[0] & rs[3];
  assign _0438_ = ~(rs[0] & rt[3]);
  assign _0439_ = rt[2] & rs[1];
  assign _0440_ = _0439_ ^ _0438_;
  assign _0441_ = _0440_ ^ _0437_;
  assign _0442_ = _0441_ ^ _0436_;
  assign _0443_ = _0415_ & ~(_0418_);
  assign _0444_ = _0443_ ^ _0442_;
  assign _0445_ = _0417_ & _0416_;
  assign _0447_ = _0445_ ^ _0444_;
  assign _0448_ = _0420_ & ~(_0419_);
  assign _0449_ = _0448_ ^ _0447_;
  assign _0450_ = _0295_ & ~(_0449_);
  assign _0451_ = _0434_ & ~(_0450_);
  assign _0452_ = _0306_ ? _0433_ : _0451_;
  assign _0681_ = _0328_ & ~(_0452_);
  assign _0453_ = _0405_ & _0676_;
  assign _0454_ = _0453_ ^ rt[4];
  assign _0455_ = _0329_ ? _0159_ : _0454_;
  assign _0457_ = _0455_ ^ _0660_;
  assign _0458_ = ~_0457_;
  assign _0459_ = ~(_0428_ & rs[3]);
  assign _0460_ = ~(_0430_ | _0429_);
  assign _0461_ = _0459_ & ~(_0460_);
  assign _0462_ = ~(_0429_ | _0408_);
  assign _0463_ = _0462_ & ~(_0411_);
  assign _0464_ = _0461_ & ~(_0463_);
  assign _0465_ = _0464_ ^ _0458_;
  assign _0466_ = _0094_ | _0317_;
  assign _0468_ = rs[3] & rt[1];
  assign _0469_ = rs[0] & rt[4];
  assign _0470_ = ~(_0469_ ^ _0468_);
  assign _0471_ = ~_0470_;
  assign _0472_ = rt[2] & rs[2];
  assign _0473_ = rt[3] & rs[1];
  assign _0474_ = ~(_0473_ ^ _0472_);
  assign _0475_ = rt[0] & rs[4];
  assign _0476_ = _0475_ ^ _0474_;
  assign _0477_ = _0476_ ^ _0471_;
  assign _0479_ = _0436_ & ~(_0441_);
  assign _0480_ = _0479_ ^ _0477_;
  assign _0481_ = _0438_ | ~(_0439_);
  assign _0482_ = _0437_ & ~(_0440_);
  assign _0483_ = _0481_ & ~(_0482_);
  assign _0484_ = ~(_0483_ ^ _0480_);
  assign _0485_ = ~_0484_;
  assign _0486_ = _0442_ | ~(_0443_);
  assign _0487_ = _0445_ & ~(_0444_);
  assign _0488_ = _0486_ & ~(_0487_);
  assign _0490_ = _0488_ ^ _0485_;
  assign _0491_ = _0448_ & ~(_0447_);
  assign _0492_ = _0491_ ^ _0490_;
  assign _0493_ = _0295_ & ~(_0492_);
  assign _0494_ = _0466_ & ~(_0493_);
  assign _0495_ = _0306_ ? _0465_ : _0494_;
  assign _0682_ = _0328_ & ~(_0495_);
  assign _0496_ = _0453_ & ~(rt[4]);
  assign _0497_ = _0496_ ^ rt[5];
  assign _0498_ = _0329_ ? _0212_ : _0497_;
  assign _0500_ = _0498_ ^ _0656_;
  assign _0501_ = ~(_0455_ & rs[4]);
  assign _0502_ = _0458_ & ~(_0464_);
  assign _0503_ = _0502_ | ~(_0501_);
  assign _0504_ = _0503_ ^ _0500_;
  assign _0505_ = _0055_ | _0317_;
  assign _0506_ = rs[4] & rt[1];
  assign _0507_ = rs[0] & rt[5];
  assign _0508_ = ~(_0507_ ^ _0506_);
  assign _0509_ = rt[4] & rs[1];
  assign _0511_ = _0509_ ^ _0508_;
  assign _0512_ = _0469_ & _0468_;
  assign _0513_ = _0512_ ^ _0511_;
  assign _0514_ = rt[3] & rs[2];
  assign _0515_ = rs[3] & rt[2];
  assign _0516_ = ~(_0515_ ^ _0514_);
  assign _0517_ = rt[0] & rs[5];
  assign _0518_ = _0517_ ^ _0516_;
  assign _0519_ = ~(_0518_ ^ _0513_);
  assign _0520_ = _0471_ & ~(_0476_);
  assign _0522_ = _0520_ ^ _0519_;
  assign _0523_ = ~(_0473_ & _0472_);
  assign _0524_ = _0475_ & ~(_0474_);
  assign _0525_ = _0523_ & ~(_0524_);
  assign _0526_ = ~(_0525_ ^ _0522_);
  assign _0527_ = _0477_ | ~(_0479_);
  assign _0528_ = ~(_0483_ | _0480_);
  assign _0529_ = _0527_ & ~(_0528_);
  assign _0530_ = ~(_0529_ ^ _0526_);
  assign _0531_ = _0485_ & ~(_0488_);
  assign _0533_ = _0531_ ^ _0530_;
  assign _0534_ = _0491_ & ~(_0490_);
  assign _0535_ = _0534_ ^ _0533_;
  assign _0536_ = _0295_ & ~(_0535_);
  assign _0537_ = _0505_ & ~(_0536_);
  assign _0538_ = _0306_ ? _0504_ : _0537_;
  assign _0683_ = _0328_ & ~(_0538_);
  assign _0539_ = _0453_ & _0675_;
  assign _0540_ = _0539_ ^ rt[6];
  assign _0541_ = _0329_ ? _0268_ : _0540_;
  assign _0543_ = _0541_ ^ rs[6];
  assign _0544_ = ~(_0498_ & rs[5]);
  assign _0545_ = ~(_0501_ | _0500_);
  assign _0546_ = _0544_ & ~(_0545_);
  assign _0547_ = _0500_ | _0457_;
  assign _0548_ = ~(_0547_ | _0464_);
  assign _0549_ = _0546_ & ~(_0548_);
  assign _0550_ = _0549_ ^ _0543_;
  assign _0551_ = _0015_ | _0317_;
  assign _0552_ = rs[5] & rt[1];
  assign _0553_ = rt[5] & rs[1];
  assign _0554_ = ~(_0553_ ^ _0552_);
  assign _0555_ = rt[4] & rs[2];
  assign _0556_ = _0555_ ^ _0554_;
  assign _0557_ = ~(_0507_ & _0506_);
  assign _0558_ = _0509_ & ~(_0508_);
  assign _0559_ = _0557_ & ~(_0558_);
  assign _0560_ = ~(_0559_ ^ _0556_);
  assign _0561_ = rs[3] & rt[3];
  assign _0562_ = rs[4] & rt[2];
  assign _0564_ = ~(_0562_ ^ _0561_);
  assign _0565_ = rt[0] & rs[6];
  assign _0566_ = _0565_ ^ _0564_;
  assign _0567_ = ~(_0566_ ^ _0560_);
  assign _0568_ = _0511_ | ~(_0512_);
  assign _0569_ = ~(_0518_ | _0513_);
  assign _0570_ = _0568_ & ~(_0569_);
  assign _0571_ = ~(_0570_ ^ _0567_);
  assign _0572_ = _0515_ & _0514_;
  assign _0573_ = _0517_ & ~(_0516_);
  assign _0575_ = ~(_0573_ | _0572_);
  assign _0576_ = rs[0] & rt[6];
  assign _0577_ = _0576_ ^ _0575_;
  assign _0578_ = ~(_0577_ ^ _0571_);
  assign _0579_ = _0519_ | ~(_0520_);
  assign _0580_ = ~(_0525_ | _0522_);
  assign _0581_ = _0579_ & ~(_0580_);
  assign _0582_ = ~(_0581_ ^ _0578_);
  assign _0583_ = ~(_0529_ | _0526_);
  assign _0584_ = ~_0583_;
  assign _0585_ = _0584_ ^ _0582_;
  assign _0586_ = _0530_ | ~(_0531_);
  assign _0587_ = _0534_ & ~(_0533_);
  assign _0588_ = _0586_ & ~(_0587_);
  assign _0589_ = _0588_ ^ _0585_;
  assign _0590_ = _0295_ & ~(_0589_);
  assign _0591_ = _0551_ & ~(_0590_);
  assign _0592_ = _0306_ ? _0550_ : _0591_;
  assign _0684_ = _0328_ & ~(_0592_);
  assign _0593_ = _0539_ & ~(rt[6]);
  assign _0595_ = _0593_ ^ rt[7];
  assign _0596_ = _0329_ ? _0327_ : _0595_;
  assign _0597_ = _0596_ ^ rs[7];
  assign _0598_ = ~(_0541_ & rs[6]);
  assign _0599_ = _0543_ & ~(_0549_);
  assign _0600_ = _0598_ & ~(_0599_);
  assign _0601_ = _0600_ ^ _0597_;
  assign _0602_ = _0650_ | _0317_;
  assign _0603_ = ~(rs[6] & rt[1]);
  assign _0604_ = rt[5] & rs[2];
  assign _0606_ = _0604_ ^ _0603_;
  assign _0607_ = rs[3] & rt[4];
  assign _0608_ = _0607_ ^ _0606_;
  assign _0609_ = ~(_0553_ & _0552_);
  assign _0610_ = _0555_ & ~(_0554_);
  assign _0611_ = _0609_ & ~(_0610_);
  assign _0612_ = _0611_ ^ _0608_;
  assign _0613_ = rt[0] & rs[7];
  assign _0614_ = ~(rs[4] & rt[3]);
  assign _0615_ = rs[5] & rt[2];
  assign _0617_ = _0615_ ^ _0614_;
  assign _0618_ = _0617_ ^ _0613_;
  assign _0619_ = _0618_ ^ _0612_;
  assign _0620_ = _0559_ | _0556_;
  assign _0621_ = ~(_0566_ | _0560_);
  assign _0622_ = _0620_ & ~(_0621_);
  assign _0623_ = _0622_ ^ _0619_;
  assign _0624_ = ~(_0562_ & _0561_);
  assign _0625_ = _0565_ & ~(_0564_);
  assign _0626_ = _0624_ & ~(_0625_);
  assign _0628_ = rt[6] & rs[1];
  assign _0629_ = _0628_ ^ _0626_;
  assign _0630_ = rs[0] & rt[7];
  assign _0631_ = _0630_ ^ _0629_;
  assign _0632_ = _0631_ ^ _0623_;
  assign _0633_ = _0570_ | _0567_;
  assign _0634_ = ~(_0577_ | _0571_);
  assign _0635_ = _0633_ & ~(_0634_);
  assign _0636_ = _0635_ ^ _0632_;
  assign _0637_ = _0576_ & ~(_0575_);
  assign _0639_ = _0637_ ^ _0636_;
  assign _0640_ = ~(_0581_ | _0578_);
  assign _0641_ = _0640_ ^ _0639_;
  assign _0642_ = _0584_ | _0582_;
  assign _0643_ = _0585_ & ~(_0588_);
  assign _0644_ = _0642_ & ~(_0643_);
  assign _0645_ = _0644_ ^ _0641_;
  assign _0646_ = _0295_ & ~(_0645_);
  assign _0647_ = _0602_ & ~(_0646_);
  assign _0648_ = _0306_ ? _0601_ : _0647_;
  assign _0685_ = _0328_ & ~(_0648_);
  (* src = "../build/gpu.v:29.2-44.6" *)
  always @(posedge clk)
    if (reset) alu_out_reg[0] <= 1'h0;
    else if (_0000_) alu_out_reg[0] <= _0678_;
  (* src = "../build/gpu.v:29.2-44.6" *)
  always @(posedge clk)
    if (reset) alu_out_reg[1] <= 1'h0;
    else if (_0000_) alu_out_reg[1] <= _0679_;
  (* src = "../build/gpu.v:29.2-44.6" *)
  always @(posedge clk)
    if (reset) alu_out_reg[2] <= 1'h0;
    else if (_0000_) alu_out_reg[2] <= _0680_;
  (* src = "../build/gpu.v:29.2-44.6" *)
  always @(posedge clk)
    if (reset) alu_out_reg[3] <= 1'h0;
    else if (_0000_) alu_out_reg[3] <= _0681_;
  (* src = "../build/gpu.v:29.2-44.6" *)
  always @(posedge clk)
    if (reset) alu_out_reg[4] <= 1'h0;
    else if (_0000_) alu_out_reg[4] <= _0682_;
  (* src = "../build/gpu.v:29.2-44.6" *)
  always @(posedge clk)
    if (reset) alu_out_reg[5] <= 1'h0;
    else if (_0000_) alu_out_reg[5] <= _0683_;
  (* src = "../build/gpu.v:29.2-44.6" *)
  always @(posedge clk)
    if (reset) alu_out_reg[6] <= 1'h0;
    else if (_0000_) alu_out_reg[6] <= _0684_;
  (* src = "../build/gpu.v:29.2-44.6" *)
  always @(posedge clk)
    if (reset) alu_out_reg[7] <= 1'h0;
    else if (_0000_) alu_out_reg[7] <= _0685_;
  assign alu_out = alu_out_reg;
endmodule

(* src = "../build/gpu.v:626.1-645.10" *)
module dcr(clk, reset, device_control_write_enable, device_control_data, thread_count);
  (* src = "../build/gpu.v:633.13-633.16" *)
  input clk;
  wire clk;
  (* src = "../build/gpu.v:638.12-638.34" *)
  reg [7:0] device_conrol_register;
  (* src = "../build/gpu.v:636.19-636.38" *)
  input [7:0] device_control_data;
  wire [7:0] device_control_data;
  (* src = "../build/gpu.v:635.13-635.40" *)
  input device_control_write_enable;
  wire device_control_write_enable;
  (* src = "../build/gpu.v:634.13-634.18" *)
  input reset;
  wire reset;
  (* src = "../build/gpu.v:637.20-637.32" *)
  output [7:0] thread_count;
  wire [7:0] thread_count;
  (* src = "../build/gpu.v:640.2-644.50" *)
  always @(posedge clk)
    if (reset) device_conrol_register[0] <= 1'h0;
    else if (device_control_write_enable) device_conrol_register[0] <= device_control_data[0];
  (* src = "../build/gpu.v:640.2-644.50" *)
  always @(posedge clk)
    if (reset) device_conrol_register[1] <= 1'h0;
    else if (device_control_write_enable) device_conrol_register[1] <= device_control_data[1];
  (* src = "../build/gpu.v:640.2-644.50" *)
  always @(posedge clk)
    if (reset) device_conrol_register[2] <= 1'h0;
    else if (device_control_write_enable) device_conrol_register[2] <= device_control_data[2];
  (* src = "../build/gpu.v:640.2-644.50" *)
  always @(posedge clk)
    if (reset) device_conrol_register[3] <= 1'h0;
    else if (device_control_write_enable) device_conrol_register[3] <= device_control_data[3];
  (* src = "../build/gpu.v:640.2-644.50" *)
  always @(posedge clk)
    if (reset) device_conrol_register[4] <= 1'h0;
    else if (device_control_write_enable) device_conrol_register[4] <= device_control_data[4];
  (* src = "../build/gpu.v:640.2-644.50" *)
  always @(posedge clk)
    if (reset) device_conrol_register[5] <= 1'h0;
    else if (device_control_write_enable) device_conrol_register[5] <= device_control_data[5];
  (* src = "../build/gpu.v:640.2-644.50" *)
  always @(posedge clk)
    if (reset) device_conrol_register[6] <= 1'h0;
    else if (device_control_write_enable) device_conrol_register[6] <= device_control_data[6];
  (* src = "../build/gpu.v:640.2-644.50" *)
  always @(posedge clk)
    if (reset) device_conrol_register[7] <= 1'h0;
    else if (device_control_write_enable) device_conrol_register[7] <= device_control_data[7];
  assign thread_count = device_conrol_register;
endmodule

(* src = "../build/gpu.v:647.1-769.10" *)
module decoder(clk, reset, core_state, instruction, decoded_rd_address, decoded_rs_address, decoded_rt_address, decoded_nzp, decoded_immediate, decoded_reg_write_enable, decoded_mem_read_enable, decoded_mem_write_enable, decoded_nzp_write_enable, decoded_reg_input_mux, decoded_alu_arithmetic_mux, decoded_alu_output_mux, decoded_pc_mux, decoded_ret);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  (* force_downto = 32'd1 *)
  (* src = "../build/gpu.v:0.0-0.0|../build/gpu.v:728.4-767.11|/usr/bin/../share/yosys/techmap.v:583.28-583.35" *)
  (* unused_bits = "1" *)
  wire [3:0] _27_;
  (* force_downto = 32'd1 *)
  (* src = "../build/gpu.v:0.0-0.0|../build/gpu.v:728.4-767.11|/usr/bin/../share/yosys/techmap.v:575.21-575.22" *)
  wire [1:0] _28_;
  (* force_downto = 32'd1 *)
  (* src = "../build/gpu.v:0.0-0.0|../build/gpu.v:728.4-767.11|/usr/bin/../share/yosys/techmap.v:575.21-575.22" *)
  wire [1:0] _29_;
  (* src = "../build/gpu.v:667.13-667.16" *)
  input clk;
  wire clk;
  (* src = "../build/gpu.v:669.19-669.29" *)
  input [2:0] core_state;
  wire [2:0] core_state;
  (* src = "../build/gpu.v:681.19-681.45" *)
  output [1:0] decoded_alu_arithmetic_mux;
  reg [1:0] decoded_alu_arithmetic_mux;
  (* src = "../build/gpu.v:682.13-682.35" *)
  output decoded_alu_output_mux;
  wire decoded_alu_output_mux;
  (* src = "../build/gpu.v:675.19-675.36" *)
  output [7:0] decoded_immediate;
  wire [7:0] decoded_immediate;
  (* src = "../build/gpu.v:677.13-677.36" *)
  output decoded_mem_read_enable;
  reg decoded_mem_read_enable;
  (* src = "../build/gpu.v:678.13-678.37" *)
  output decoded_mem_write_enable;
  reg decoded_mem_write_enable;
  (* src = "../build/gpu.v:674.19-674.30" *)
  output [2:0] decoded_nzp;
  reg [2:0] decoded_nzp;
  (* src = "../build/gpu.v:679.13-679.37" *)
  output decoded_nzp_write_enable;
  reg decoded_nzp_write_enable;
  (* src = "../build/gpu.v:683.13-683.27" *)
  output decoded_pc_mux;
  reg decoded_pc_mux;
  (* src = "../build/gpu.v:671.19-671.37" *)
  output [3:0] decoded_rd_address;
  wire [3:0] decoded_rd_address;
  (* src = "../build/gpu.v:680.19-680.40" *)
  output [1:0] decoded_reg_input_mux;
  wire [1:0] decoded_reg_input_mux;
  (* src = "../build/gpu.v:676.13-676.37" *)
  output decoded_reg_write_enable;
  reg decoded_reg_write_enable;
  (* src = "../build/gpu.v:684.13-684.24" *)
  output decoded_ret;
  reg decoded_ret;
  (* src = "../build/gpu.v:672.19-672.37" *)
  output [3:0] decoded_rs_address;
  wire [3:0] decoded_rs_address;
  (* src = "../build/gpu.v:673.19-673.37" *)
  output [3:0] decoded_rt_address;
  wire [3:0] decoded_rt_address;
  (* src = "../build/gpu.v:670.20-670.31" *)
  input [15:0] instruction;
  wire [15:0] instruction;
  (* src = "../build/gpu.v:668.13-668.18" *)
  input reset;
  wire reset;
  assign _02_ = core_state[0] | ~(core_state[1]);
  assign _01_ = _02_ | core_state[2];
  assign _03_ = instruction[12] & instruction[13];
  assign _04_ = instruction[15] | ~(instruction[14]);
  assign _27_[2] = _03_ & ~(_04_);
  assign _05_ = instruction[13] | ~(instruction[12]);
  assign _06_ = instruction[15] & ~(instruction[14]);
  assign _07_ = _06_ & ~(_05_);
  assign _08_ = ~(_07_ | _27_[2]);
  assign _09_ = instruction[13] & ~(instruction[12]);
  assign _10_ = _09_ & ~(_04_);
  assign _11_ = instruction[14] & ~(instruction[15]);
  assign _12_ = _11_ & ~(_05_);
  assign _13_ = ~(_12_ | _10_);
  assign _14_ = ~(_13_ & _08_);
  assign _15_ = instruction[12] | instruction[13];
  assign _16_ = _11_ & ~(_15_);
  assign _17_ = instruction[15] | instruction[14];
  assign _18_ = _03_ & ~(_17_);
  assign _19_ = _18_ | _16_;
  assign _00_ = _19_ | _14_;
  assign _20_ = ~(instruction[15] & instruction[14]);
  assign _23_ = _03_ & ~(_20_);
  assign _24_ = ~(_17_ | _05_);
  assign _25_ = _09_ & ~(_17_);
  assign _26_ = _06_ & ~(_15_);
  assign _21_ = _16_ | _10_;
  assign _22_ = _13_ & ~(_16_);
  assign _29_[0] = _21_ & ~(_22_);
  assign _29_[1] = _12_ | _10_;
  assign _28_[1] = _07_ & ~(_08_);
  (* src = "../build/gpu.v:696.2-768.6" *)
  always @(posedge clk)
    if (reset) decoded_alu_arithmetic_mux[0] <= 1'h0;
    else if (!_01_) decoded_alu_arithmetic_mux[0] <= _29_[0];
  (* src = "../build/gpu.v:696.2-768.6" *)
  always @(posedge clk)
    if (reset) decoded_alu_arithmetic_mux[1] <= 1'h0;
    else if (!_01_) decoded_alu_arithmetic_mux[1] <= _29_[1];
  reg \decoded_rd_address_reg[0] ;
  (* src = "../build/gpu.v:696.2-768.6" *)
  always @(posedge clk)
    if (reset) \decoded_rd_address_reg[0]  <= 1'h0;
    else if (!_01_) \decoded_rd_address_reg[0]  <= instruction[8];
  assign decoded_rd_address[0] = \decoded_rd_address_reg[0] ;
  reg \decoded_rs_address_reg[2] ;
  (* src = "../build/gpu.v:696.2-768.6" *)
  always @(posedge clk)
    if (reset) \decoded_rs_address_reg[2]  <= 1'h0;
    else if (!_01_) \decoded_rs_address_reg[2]  <= instruction[6];
  assign decoded_rs_address[2] = \decoded_rs_address_reg[2] ;
  reg \decoded_rt_address_reg[1] ;
  (* src = "../build/gpu.v:696.2-768.6" *)
  always @(posedge clk)
    if (reset) \decoded_rt_address_reg[1]  <= 1'h0;
    else if (!_01_) \decoded_rt_address_reg[1]  <= instruction[1];
  assign decoded_rt_address[1] = \decoded_rt_address_reg[1] ;
  reg \decoded_rt_address_reg[2] ;
  (* src = "../build/gpu.v:696.2-768.6" *)
  always @(posedge clk)
    if (reset) \decoded_rt_address_reg[2]  <= 1'h0;
    else if (!_01_) \decoded_rt_address_reg[2]  <= instruction[2];
  assign decoded_rt_address[2] = \decoded_rt_address_reg[2] ;
  (* src = "../build/gpu.v:696.2-768.6" *)
  always @(posedge clk)
    if (reset) decoded_nzp[0] <= 1'h0;
    else if (!_01_) decoded_nzp[0] <= instruction[9];
  (* src = "../build/gpu.v:696.2-768.6" *)
  always @(posedge clk)
    if (reset) decoded_nzp[1] <= 1'h0;
    else if (!_01_) decoded_nzp[1] <= instruction[10];
  (* src = "../build/gpu.v:696.2-768.6" *)
  always @(posedge clk)
    if (reset) decoded_nzp[2] <= 1'h0;
    else if (!_01_) decoded_nzp[2] <= instruction[11];
  reg \decoded_immediate_reg[0] ;
  (* src = "../build/gpu.v:696.2-768.6" *)
  always @(posedge clk)
    if (reset) \decoded_immediate_reg[0]  <= 1'h0;
    else if (!_01_) \decoded_immediate_reg[0]  <= instruction[0];
  assign decoded_immediate[0] = \decoded_immediate_reg[0] ;
  reg \decoded_immediate_reg[3] ;
  (* src = "../build/gpu.v:696.2-768.6" *)
  always @(posedge clk)
    if (reset) \decoded_immediate_reg[3]  <= 1'h0;
    else if (!_01_) \decoded_immediate_reg[3]  <= instruction[3];
  assign decoded_immediate[3] = \decoded_immediate_reg[3] ;
  reg \decoded_immediate_reg[4] ;
  (* src = "../build/gpu.v:696.2-768.6" *)
  always @(posedge clk)
    if (reset) \decoded_immediate_reg[4]  <= 1'h0;
    else if (!_01_) \decoded_immediate_reg[4]  <= instruction[4];
  assign decoded_immediate[4] = \decoded_immediate_reg[4] ;
  reg \decoded_immediate_reg[5] ;
  (* src = "../build/gpu.v:696.2-768.6" *)
  always @(posedge clk)
    if (reset) \decoded_immediate_reg[5]  <= 1'h0;
    else if (!_01_) \decoded_immediate_reg[5]  <= instruction[5];
  assign decoded_immediate[5] = \decoded_immediate_reg[5] ;
  reg \decoded_immediate_reg[7] ;
  (* src = "../build/gpu.v:696.2-768.6" *)
  always @(posedge clk)
    if (reset) \decoded_immediate_reg[7]  <= 1'h0;
    else if (!_01_) \decoded_immediate_reg[7]  <= instruction[7];
  assign decoded_immediate[7] = \decoded_immediate_reg[7] ;
  (* src = "../build/gpu.v:696.2-768.6" *)
  always @(posedge clk)
    if (reset) decoded_reg_write_enable <= 1'h0;
    else if (!_01_) decoded_reg_write_enable <= _00_;
  (* src = "../build/gpu.v:696.2-768.6" *)
  always @(posedge clk)
    if (reset) decoded_mem_read_enable <= 1'h0;
    else if (!_01_) decoded_mem_read_enable <= _27_[2];
  (* src = "../build/gpu.v:696.2-768.6" *)
  always @(posedge clk)
    if (reset) decoded_mem_write_enable <= 1'h0;
    else if (!_01_) decoded_mem_write_enable <= _26_;
  (* src = "../build/gpu.v:696.2-768.6" *)
  always @(posedge clk)
    if (reset) decoded_nzp_write_enable <= 1'h0;
    else if (!_01_) decoded_nzp_write_enable <= _25_;
  reg \decoded_reg_input_mux_reg[1] ;
  (* src = "../build/gpu.v:696.2-768.6" *)
  always @(posedge clk)
    if (reset) \decoded_reg_input_mux_reg[1]  <= 1'h0;
    else if (!_01_) \decoded_reg_input_mux_reg[1]  <= _28_[1];
  assign decoded_reg_input_mux[1] = \decoded_reg_input_mux_reg[1] ;
  (* src = "../build/gpu.v:696.2-768.6" *)
  always @(posedge clk)
    if (reset) decoded_pc_mux <= 1'h0;
    else if (!_01_) decoded_pc_mux <= _24_;
  (* src = "../build/gpu.v:696.2-768.6" *)
  always @(posedge clk)
    if (reset) decoded_ret <= 1'h0;
    else if (!_01_) decoded_ret <= _23_;
  assign { _27_[3], _27_[0] } = 2'h0;
  assign _28_[0] = _27_[2];
  assign decoded_alu_output_mux = decoded_nzp_write_enable;
  assign { decoded_immediate[6], decoded_immediate[2:1] } = { decoded_rs_address[2], decoded_rt_address[2:1] };
  assign decoded_rd_address[3:1] = decoded_nzp;
  assign decoded_reg_input_mux[0] = decoded_mem_read_enable;
  assign { decoded_rs_address[3], decoded_rs_address[1:0] } = { decoded_immediate[7], decoded_immediate[5:4] };
  assign { decoded_rt_address[3], decoded_rt_address[0] } = { decoded_immediate[3], decoded_immediate[0] };
endmodule

(* dynports =  1  *)
(* top =  1  *)
(* src = "../build/gpu.v:1062.1-1323.10" *)
module gpu(clk, reset, start, done, device_control_write_enable, device_control_data, program_mem_read_valid, program_mem_read_address, program_mem_read_ready, program_mem_read_data, data_mem_read_valid, data_mem_read_address, data_mem_read_ready, data_mem_read_data, data_mem_write_valid, data_mem_write_address, data_mem_write_ready, data_mem_write_data);
  (* src = "../build/gpu.v:1090.13-1090.16" *)
  input clk;
  wire clk;
  (* src = "../build/gpu.v:1115.38-1115.51" *)
  wire [15:0] core_block_id;
  (* src = "../build/gpu.v:1114.33-1114.42" *)
  wire [1:0] core_done;
  (* src = "../build/gpu.v:1113.32-1113.42" *)
  wire [1:0] core_reset;
  (* src = "../build/gpu.v:1112.32-1112.42" *)
  wire [1:0] core_start;
  (* src = "../build/gpu.v:1116.260-1116.277" *)
  wire [5:0] core_thread_count;
  (* src = "../build/gpu.v:1212.52-1212.98" *)
  wire [32:1] \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address ;
  (* src = "../build/gpu.v:1210.31-1210.75" *)
  wire [4:1] \cores[0].sv2v_tmp_core_instance_data_mem_2_read_valid ;
  (* src = "../build/gpu.v:1216.52-1216.99" *)
  wire [32:1] \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address ;
  (* src = "../build/gpu.v:1218.52-1218.96" *)
  wire [32:1] \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data ;
  (* src = "../build/gpu.v:1214.31-1214.76" *)
  wire [4:1] \cores[0].sv2v_tmp_core_instance_data_mem_2_write_valid ;
  (* src = "../build/gpu.v:1198.52-1198.96" *)
  wire [32:1] \cores[0].sv2v_tmp_core_instance_data_mem_read_address ;
  (* src = "../build/gpu.v:1196.31-1196.73" *)
  wire [4:1] \cores[0].sv2v_tmp_core_instance_data_mem_read_valid ;
  (* src = "../build/gpu.v:1202.52-1202.97" *)
  wire [32:1] \cores[0].sv2v_tmp_core_instance_data_mem_write_address ;
  (* src = "../build/gpu.v:1204.52-1204.94" *)
  wire [32:1] \cores[0].sv2v_tmp_core_instance_data_mem_write_data ;
  (* src = "../build/gpu.v:1200.31-1200.74" *)
  wire [4:1] \cores[0].sv2v_tmp_core_instance_data_mem_write_valid ;
  (* src = "../build/gpu.v:1208.39-1208.88" *)
  wire [8:1] \cores[0].sv2v_tmp_core_instance_program_mem_2_read_address ;
  (* src = "../build/gpu.v:1206.15-1206.62" *)
  wire \cores[0].sv2v_tmp_core_instance_program_mem_2_read_valid ;
  (* src = "../build/gpu.v:1194.39-1194.86" *)
  wire [8:1] \cores[0].sv2v_tmp_core_instance_program_mem_read_address ;
  (* src = "../build/gpu.v:1192.15-1192.60" *)
  wire \cores[0].sv2v_tmp_core_instance_program_mem_read_valid ;
  (* src = "../build/gpu.v:1101.67-1101.88" *)
  output [31:0] data_mem_read_address;
  wire [31:0] data_mem_read_address;
  (* src = "../build/gpu.v:1103.66-1103.84" *)
  input [31:0] data_mem_read_data;
  wire [31:0] data_mem_read_data;
  (* src = "../build/gpu.v:1102.43-1102.62" *)
  input [3:0] data_mem_read_ready;
  wire [3:0] data_mem_read_ready;
  (* src = "../build/gpu.v:1100.44-1100.63" *)
  output [3:0] data_mem_read_valid;
  wire [3:0] data_mem_read_valid;
  (* src = "../build/gpu.v:1105.67-1105.89" *)
  output [31:0] data_mem_write_address;
  wire [31:0] data_mem_write_address;
  (* src = "../build/gpu.v:1107.67-1107.86" *)
  output [31:0] data_mem_write_data;
  wire [31:0] data_mem_write_data;
  (* src = "../build/gpu.v:1106.43-1106.63" *)
  input [3:0] data_mem_write_ready;
  wire [3:0] data_mem_write_ready;
  (* src = "../build/gpu.v:1104.44-1104.64" *)
  output [3:0] data_mem_write_valid;
  wire [3:0] data_mem_write_valid;
  (* src = "../build/gpu.v:1095.19-1095.38" *)
  input [7:0] device_control_data;
  wire [7:0] device_control_data;
  (* src = "../build/gpu.v:1094.13-1094.40" *)
  input device_control_write_enable;
  wire device_control_write_enable;
  (* src = "../build/gpu.v:1093.14-1093.18" *)
  output done;
  wire done;
  (* src = "../build/gpu.v:1156.53-1156.73" *)
  wire [15:0] fetcher_read_address;
  (* src = "../build/gpu.v:1158.53-1158.70" *)
  wire [31:0] fetcher_read_data;
  (* src = "../build/gpu.v:1157.27-1157.45" *)
  wire [1:0] fetcher_read_ready;
  (* src = "../build/gpu.v:1155.27-1155.45" *)
  wire [1:0] fetcher_read_valid;
  (* src = "../build/gpu.v:1148.46-1148.62" *)
  reg [63:0] lsu_read_address;
  (* src = "../build/gpu.v:1150.46-1150.59" *)
  wire [63:0] lsu_read_data;
  (* src = "../build/gpu.v:1149.23-1149.37" *)
  wire [7:0] lsu_read_ready;
  (* src = "../build/gpu.v:1147.23-1147.37" *)
  reg [7:0] lsu_read_valid;
  (* src = "../build/gpu.v:1152.46-1152.63" *)
  reg [63:0] lsu_write_address;
  (* src = "../build/gpu.v:1154.46-1154.60" *)
  reg [63:0] lsu_write_data;
  (* src = "../build/gpu.v:1153.23-1153.38" *)
  wire [7:0] lsu_write_ready;
  (* src = "../build/gpu.v:1151.23-1151.38" *)
  reg [7:0] lsu_write_valid;
  (* src = "../build/gpu.v:1164.57-1164.78" *)
  wire [31:0] \per_core_accoutrements[0].core_lsu_read_address ;
  (* src = "../build/gpu.v:1166.57-1166.75" *)
  reg [31:0] \per_core_accoutrements[0].core_lsu_read_data ;
  (* src = "../build/gpu.v:1165.34-1165.53" *)
  reg [3:0] \per_core_accoutrements[0].core_lsu_read_ready ;
  (* src = "../build/gpu.v:1163.34-1163.53" *)
  wire [3:0] \per_core_accoutrements[0].core_lsu_read_valid ;
  (* src = "../build/gpu.v:1168.57-1168.79" *)
  wire [31:0] \per_core_accoutrements[0].core_lsu_write_address ;
  (* src = "../build/gpu.v:1170.57-1170.76" *)
  wire [31:0] \per_core_accoutrements[0].core_lsu_write_data ;
  (* src = "../build/gpu.v:1169.34-1169.54" *)
  reg [3:0] \per_core_accoutrements[0].core_lsu_write_ready ;
  (* src = "../build/gpu.v:1167.34-1167.54" *)
  wire [3:0] \per_core_accoutrements[0].core_lsu_write_valid ;
  (* src = "../build/gpu.v:1164.57-1164.78" *)
  wire [31:0] \per_core_accoutrements[1].core_lsu_read_address ;
  (* src = "../build/gpu.v:1166.57-1166.75" *)
  reg [31:0] \per_core_accoutrements[1].core_lsu_read_data ;
  (* src = "../build/gpu.v:1165.34-1165.53" *)
  reg [3:0] \per_core_accoutrements[1].core_lsu_read_ready ;
  (* src = "../build/gpu.v:1163.34-1163.53" *)
  wire [3:0] \per_core_accoutrements[1].core_lsu_read_valid ;
  (* src = "../build/gpu.v:1168.57-1168.79" *)
  wire [31:0] \per_core_accoutrements[1].core_lsu_write_address ;
  (* src = "../build/gpu.v:1170.57-1170.76" *)
  wire [31:0] \per_core_accoutrements[1].core_lsu_write_data ;
  (* src = "../build/gpu.v:1169.34-1169.54" *)
  reg [3:0] \per_core_accoutrements[1].core_lsu_write_ready ;
  (* src = "../build/gpu.v:1167.34-1167.54" *)
  wire [3:0] \per_core_accoutrements[1].core_lsu_write_valid ;
  (* src = "../build/gpu.v:1097.73-1097.97" *)
  output [7:0] program_mem_read_address;
  wire [7:0] program_mem_read_address;
  (* src = "../build/gpu.v:1099.72-1099.93" *)
  input [15:0] program_mem_read_data;
  wire [15:0] program_mem_read_data;
  (* src = "../build/gpu.v:1098.46-1098.68" *)
  input program_mem_read_ready;
  wire program_mem_read_ready;
  (* src = "../build/gpu.v:1096.47-1096.69" *)
  output program_mem_read_valid;
  wire program_mem_read_valid;
  (* src = "../build/gpu.v:1091.13-1091.18" *)
  input reset;
  wire reset;
  (* src = "../build/gpu.v:1092.13-1092.18" *)
  input start;
  wire start;
  (* src = "../build/gpu.v:1269.41-1269.91" *)
  wire [64:1] sv2v_tmp_data_memory_controller_consumer_read_data;
  (* src = "../build/gpu.v:1267.20-1267.71" *)
  wire [8:1] sv2v_tmp_data_memory_controller_consumer_read_ready;
  (* src = "../build/gpu.v:1265.20-1265.72" *)
  wire [8:1] sv2v_tmp_data_memory_controller_consumer_write_ready;
  (* src = "../build/gpu.v:1128.33-1128.73" *)
  wire [16:1] sv2v_tmp_dispatch_instance_core_block_id;
  (* src = "../build/gpu.v:1126.29-1126.66" *)
  wire [2:1] sv2v_tmp_dispatch_instance_core_reset;
  (* src = "../build/gpu.v:1124.29-1124.66" *)
  wire [2:1] sv2v_tmp_dispatch_instance_core_start;
  (* src = "../build/gpu.v:1130.792-1130.836" *)
  wire [6:1] sv2v_tmp_dispatch_instance_core_thread_count;
  (* src = "../build/gpu.v:1299.48-1299.101" *)
  wire [32:1] sv2v_tmp_program_memory_controller_consumer_read_data;
  (* src = "../build/gpu.v:1297.24-1297.78" *)
  wire [2:1] sv2v_tmp_program_memory_controller_consumer_read_ready;
  (* src = "../build/gpu.v:1111.13-1111.25" *)
  wire [7:0] thread_count;
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_valid[7] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_valid [4];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[56] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [25];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[57] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [26];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[58] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [27];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[59] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [28];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[60] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [29];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[61] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [30];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[62] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [31];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[63] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [32];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_valid[7] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_valid [4];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[56] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [25];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[57] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [26];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[58] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [27];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[59] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [28];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[60] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [29];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[61] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [30];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[62] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [31];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[63] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [32];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[56] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [25];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[57] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [26];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[58] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [27];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[59] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [28];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[60] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [29];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[61] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [30];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[62] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [31];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[63] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [32];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_ready [3] <= sv2v_tmp_data_memory_controller_consumer_read_ready[8];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [24] <= sv2v_tmp_data_memory_controller_consumer_read_data[57];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [25] <= sv2v_tmp_data_memory_controller_consumer_read_data[58];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [26] <= sv2v_tmp_data_memory_controller_consumer_read_data[59];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [27] <= sv2v_tmp_data_memory_controller_consumer_read_data[60];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [28] <= sv2v_tmp_data_memory_controller_consumer_read_data[61];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [29] <= sv2v_tmp_data_memory_controller_consumer_read_data[62];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [30] <= sv2v_tmp_data_memory_controller_consumer_read_data[63];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [31] <= sv2v_tmp_data_memory_controller_consumer_read_data[64];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_write_ready [3] <= sv2v_tmp_data_memory_controller_consumer_write_ready[8];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_valid[6] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_valid [3];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[48] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [17];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[49] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [18];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[50] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [19];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[51] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [20];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[52] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [21];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[53] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [22];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[54] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [23];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[55] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [24];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_valid[6] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_valid [3];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[48] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [17];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[49] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [18];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[50] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [19];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[51] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [20];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[52] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [21];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[53] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [22];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[54] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [23];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[55] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [24];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[48] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [17];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[49] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [18];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[50] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [19];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[51] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [20];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[52] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [21];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[53] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [22];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[54] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [23];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[55] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [24];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_ready [2] <= sv2v_tmp_data_memory_controller_consumer_read_ready[7];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [16] <= sv2v_tmp_data_memory_controller_consumer_read_data[49];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [17] <= sv2v_tmp_data_memory_controller_consumer_read_data[50];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [18] <= sv2v_tmp_data_memory_controller_consumer_read_data[51];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [19] <= sv2v_tmp_data_memory_controller_consumer_read_data[52];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [20] <= sv2v_tmp_data_memory_controller_consumer_read_data[53];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [21] <= sv2v_tmp_data_memory_controller_consumer_read_data[54];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [22] <= sv2v_tmp_data_memory_controller_consumer_read_data[55];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [23] <= sv2v_tmp_data_memory_controller_consumer_read_data[56];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_write_ready [2] <= sv2v_tmp_data_memory_controller_consumer_write_ready[7];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_valid[5] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_valid [2];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[40] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [9];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[41] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [10];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[42] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [11];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[43] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [12];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[44] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [13];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[45] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [14];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[46] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [15];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[47] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [16];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_valid[5] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_valid [2];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[40] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [9];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[41] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [10];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[42] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [11];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[43] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [12];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[44] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [13];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[45] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [14];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[46] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [15];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[47] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [16];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[40] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [9];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[41] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [10];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[42] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [11];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[43] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [12];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[44] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [13];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[45] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [14];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[46] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [15];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[47] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [16];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_ready [1] <= sv2v_tmp_data_memory_controller_consumer_read_ready[6];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [8] <= sv2v_tmp_data_memory_controller_consumer_read_data[41];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [9] <= sv2v_tmp_data_memory_controller_consumer_read_data[42];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [10] <= sv2v_tmp_data_memory_controller_consumer_read_data[43];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [11] <= sv2v_tmp_data_memory_controller_consumer_read_data[44];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [12] <= sv2v_tmp_data_memory_controller_consumer_read_data[45];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [13] <= sv2v_tmp_data_memory_controller_consumer_read_data[46];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [14] <= sv2v_tmp_data_memory_controller_consumer_read_data[47];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [15] <= sv2v_tmp_data_memory_controller_consumer_read_data[48];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_write_ready [1] <= sv2v_tmp_data_memory_controller_consumer_write_ready[6];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_valid[4] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_valid [1];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[32] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [1];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[33] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [2];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[34] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [3];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[35] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [4];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[36] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [5];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[37] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [6];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[38] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [7];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[39] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address [8];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_valid[4] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_valid [1];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[32] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [1];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[33] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [2];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[34] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [3];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[35] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [4];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[36] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [5];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[37] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [6];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[38] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [7];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[39] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address [8];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[32] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [1];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[33] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [2];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[34] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [3];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[35] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [4];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[36] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [5];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[37] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [6];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[38] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [7];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[39] <= \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data [8];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_ready [0] <= sv2v_tmp_data_memory_controller_consumer_read_ready[5];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [0] <= sv2v_tmp_data_memory_controller_consumer_read_data[33];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [1] <= sv2v_tmp_data_memory_controller_consumer_read_data[34];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [2] <= sv2v_tmp_data_memory_controller_consumer_read_data[35];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [3] <= sv2v_tmp_data_memory_controller_consumer_read_data[36];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [4] <= sv2v_tmp_data_memory_controller_consumer_read_data[37];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [5] <= sv2v_tmp_data_memory_controller_consumer_read_data[38];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [6] <= sv2v_tmp_data_memory_controller_consumer_read_data[39];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_read_data [7] <= sv2v_tmp_data_memory_controller_consumer_read_data[40];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[1].core_lsu_write_ready [0] <= sv2v_tmp_data_memory_controller_consumer_write_ready[5];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_valid[3] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_valid [4];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[24] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [25];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[25] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [26];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[26] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [27];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[27] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [28];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[28] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [29];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[29] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [30];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[30] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [31];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[31] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [32];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_valid[3] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_valid [4];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[24] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [25];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[25] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [26];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[26] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [27];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[27] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [28];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[28] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [29];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[29] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [30];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[30] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [31];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[31] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [32];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[24] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [25];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[25] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [26];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[26] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [27];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[27] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [28];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[28] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [29];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[29] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [30];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[30] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [31];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[31] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [32];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_ready [3] <= sv2v_tmp_data_memory_controller_consumer_read_ready[4];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [24] <= sv2v_tmp_data_memory_controller_consumer_read_data[25];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [25] <= sv2v_tmp_data_memory_controller_consumer_read_data[26];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [26] <= sv2v_tmp_data_memory_controller_consumer_read_data[27];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [27] <= sv2v_tmp_data_memory_controller_consumer_read_data[28];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [28] <= sv2v_tmp_data_memory_controller_consumer_read_data[29];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [29] <= sv2v_tmp_data_memory_controller_consumer_read_data[30];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [30] <= sv2v_tmp_data_memory_controller_consumer_read_data[31];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [31] <= sv2v_tmp_data_memory_controller_consumer_read_data[32];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_write_ready [3] <= sv2v_tmp_data_memory_controller_consumer_write_ready[4];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_valid[2] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_valid [3];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[16] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [17];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[17] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [18];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[18] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [19];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[19] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [20];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[20] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [21];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[21] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [22];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[22] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [23];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[23] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [24];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_valid[2] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_valid [3];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[16] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [17];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[17] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [18];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[18] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [19];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[19] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [20];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[20] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [21];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[21] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [22];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[22] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [23];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[23] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [24];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[16] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [17];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[17] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [18];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[18] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [19];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[19] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [20];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[20] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [21];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[21] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [22];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[22] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [23];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[23] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [24];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_ready [2] <= sv2v_tmp_data_memory_controller_consumer_read_ready[3];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [16] <= sv2v_tmp_data_memory_controller_consumer_read_data[17];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [17] <= sv2v_tmp_data_memory_controller_consumer_read_data[18];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [18] <= sv2v_tmp_data_memory_controller_consumer_read_data[19];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [19] <= sv2v_tmp_data_memory_controller_consumer_read_data[20];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [20] <= sv2v_tmp_data_memory_controller_consumer_read_data[21];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [21] <= sv2v_tmp_data_memory_controller_consumer_read_data[22];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [22] <= sv2v_tmp_data_memory_controller_consumer_read_data[23];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [23] <= sv2v_tmp_data_memory_controller_consumer_read_data[24];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_write_ready [2] <= sv2v_tmp_data_memory_controller_consumer_write_ready[3];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_valid[1] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_valid [2];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[8] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [9];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[9] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [10];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[10] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [11];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[11] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [12];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[12] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [13];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[13] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [14];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[14] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [15];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[15] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [16];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_valid[1] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_valid [2];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[8] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [9];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[9] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [10];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[10] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [11];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[11] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [12];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[12] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [13];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[13] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [14];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[14] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [15];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[15] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [16];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[8] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [9];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[9] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [10];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[10] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [11];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[11] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [12];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[12] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [13];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[13] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [14];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[14] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [15];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[15] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [16];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_ready [1] <= sv2v_tmp_data_memory_controller_consumer_read_ready[2];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [8] <= sv2v_tmp_data_memory_controller_consumer_read_data[9];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [9] <= sv2v_tmp_data_memory_controller_consumer_read_data[10];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [10] <= sv2v_tmp_data_memory_controller_consumer_read_data[11];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [11] <= sv2v_tmp_data_memory_controller_consumer_read_data[12];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [12] <= sv2v_tmp_data_memory_controller_consumer_read_data[13];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [13] <= sv2v_tmp_data_memory_controller_consumer_read_data[14];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [14] <= sv2v_tmp_data_memory_controller_consumer_read_data[15];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [15] <= sv2v_tmp_data_memory_controller_consumer_read_data[16];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_write_ready [1] <= sv2v_tmp_data_memory_controller_consumer_write_ready[2];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_valid[0] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_valid [1];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[0] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [1];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[1] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [2];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[2] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [3];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[3] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [4];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[4] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [5];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[5] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [6];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[6] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [7];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_read_address[7] <= \cores[0].sv2v_tmp_core_instance_data_mem_read_address [8];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_valid[0] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_valid [1];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[0] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [1];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[1] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [2];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[2] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [3];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[3] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [4];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[4] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [5];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[5] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [6];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[6] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [7];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_address[7] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_address [8];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[0] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [1];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[1] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [2];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[2] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [3];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[3] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [4];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[4] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [5];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[5] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [6];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[6] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [7];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    lsu_write_data[7] <= \cores[0].sv2v_tmp_core_instance_data_mem_write_data [8];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_ready [0] <= sv2v_tmp_data_memory_controller_consumer_read_ready[1];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [0] <= sv2v_tmp_data_memory_controller_consumer_read_data[1];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [1] <= sv2v_tmp_data_memory_controller_consumer_read_data[2];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [2] <= sv2v_tmp_data_memory_controller_consumer_read_data[3];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [3] <= sv2v_tmp_data_memory_controller_consumer_read_data[4];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [4] <= sv2v_tmp_data_memory_controller_consumer_read_data[5];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [5] <= sv2v_tmp_data_memory_controller_consumer_read_data[6];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [6] <= sv2v_tmp_data_memory_controller_consumer_read_data[7];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_read_data [7] <= sv2v_tmp_data_memory_controller_consumer_read_data[8];
  (* src = "../build/gpu.v:1175.5-1184.8" *)
  always @(posedge clk)
    \per_core_accoutrements[0].core_lsu_write_ready [0] <= sv2v_tmp_data_memory_controller_consumer_write_ready[1];
  (* src = "../build/gpu.v:1226.6-1262.5" *)
  \$paramod$787a5da62fabe7841ceed3cf3518dd70b3e7c326\ducttape2cores  \cores[0].core_instance  (
    .block_id(core_block_id[7:0]),
    .block_id_2(core_block_id[15:8]),
    .clk(clk),
    .data_mem_2_read_address(\cores[0].sv2v_tmp_core_instance_data_mem_2_read_address ),
    .data_mem_2_read_data(\per_core_accoutrements[1].core_lsu_read_data ),
    .data_mem_2_read_ready(\per_core_accoutrements[1].core_lsu_read_ready ),
    .data_mem_2_read_valid(\cores[0].sv2v_tmp_core_instance_data_mem_2_read_valid ),
    .data_mem_2_write_address(\cores[0].sv2v_tmp_core_instance_data_mem_2_write_address ),
    .data_mem_2_write_data(\cores[0].sv2v_tmp_core_instance_data_mem_2_write_data ),
    .data_mem_2_write_ready(\per_core_accoutrements[1].core_lsu_write_ready ),
    .data_mem_2_write_valid(\cores[0].sv2v_tmp_core_instance_data_mem_2_write_valid ),
    .data_mem_read_address(\cores[0].sv2v_tmp_core_instance_data_mem_read_address ),
    .data_mem_read_data(\per_core_accoutrements[0].core_lsu_read_data ),
    .data_mem_read_ready(\per_core_accoutrements[0].core_lsu_read_ready ),
    .data_mem_read_valid(\cores[0].sv2v_tmp_core_instance_data_mem_read_valid ),
    .data_mem_write_address(\cores[0].sv2v_tmp_core_instance_data_mem_write_address ),
    .data_mem_write_data(\cores[0].sv2v_tmp_core_instance_data_mem_write_data ),
    .data_mem_write_ready(\per_core_accoutrements[0].core_lsu_write_ready ),
    .data_mem_write_valid(\cores[0].sv2v_tmp_core_instance_data_mem_write_valid ),
    .done(core_done[0]),
    .done_2(core_done[1]),
    .program_mem_2_read_address(\cores[0].sv2v_tmp_core_instance_program_mem_2_read_address ),
    .program_mem_2_read_data(fetcher_read_data[31:16]),
    .program_mem_2_read_ready(fetcher_read_ready[1]),
    .program_mem_2_read_valid(\cores[0].sv2v_tmp_core_instance_program_mem_2_read_valid ),
    .program_mem_read_address(\cores[0].sv2v_tmp_core_instance_program_mem_read_address ),
    .program_mem_read_data(fetcher_read_data[15:0]),
    .program_mem_read_ready(fetcher_read_ready[0]),
    .program_mem_read_valid(\cores[0].sv2v_tmp_core_instance_program_mem_read_valid ),
    .reset(core_reset[0]),
    .reset_2(core_reset[1]),
    .start(core_start[0]),
    .start_2(core_start[1]),
    .thread_count(core_thread_count[2:0]),
    .thread_count_2(core_thread_count[5:3])
  );
  (* src = "../build/gpu.v:1277.4-1296.3" *)
  \$paramod$d52b8421c71588f1b1a109a76f121397216ebdc2\arbiter_cache  data_memory_controller (
    .clk(clk),
    .consumer_read_address(lsu_read_address),
    .consumer_read_data(sv2v_tmp_data_memory_controller_consumer_read_data),
    .consumer_read_ready(sv2v_tmp_data_memory_controller_consumer_read_ready),
    .consumer_read_valid(lsu_read_valid),
    .consumer_write_address(lsu_write_address),
    .consumer_write_data(lsu_write_data),
    .consumer_write_ready(sv2v_tmp_data_memory_controller_consumer_write_ready),
    .consumer_write_valid(lsu_write_valid),
    .mem_read_address(data_mem_read_address),
    .mem_read_data(data_mem_read_data),
    .mem_read_ready(data_mem_read_ready),
    .mem_read_valid(data_mem_read_valid),
    .mem_write_address(data_mem_write_address),
    .mem_write_data(data_mem_write_data),
    .mem_write_ready(data_mem_write_ready),
    .mem_write_valid(data_mem_write_valid),
    .reset(reset)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "../build/gpu.v:1117.6-1123.3" *)
  dcr dcr_instance (
    .clk(clk),
    .device_control_data(device_control_data),
    .device_control_write_enable(device_control_write_enable),
    .reset(reset),
    .thread_count(thread_count)
  );
  (* src = "../build/gpu.v:1135.4-1146.3" *)
  \$paramod$7b6d06001638ea57df1f39f9a8db092ea6b39b0a\dispatch  dispatch_instance (
    .clk(clk),
    .core_block_id(core_block_id),
    .core_done(core_done),
    .core_reset(core_reset),
    .core_start(core_start),
    .core_thread_count(core_thread_count),
    .done(done),
    .reset(reset),
    .start(start),
    .thread_count(thread_count)
  );
  (* src = "../build/gpu.v:1307.4-1318.3" *)
  \$paramod$c84a37d0835bc5adc05aad5e2304aba80bfedd7b\arbiter_cache  program_memory_controller (
    .clk(clk),
    .consumer_read_address({ \cores[0].sv2v_tmp_core_instance_program_mem_2_read_address , \cores[0].sv2v_tmp_core_instance_program_mem_read_address  }),
    .consumer_read_data(fetcher_read_data),
    .consumer_read_ready(fetcher_read_ready),
    .consumer_read_valid({ \cores[0].sv2v_tmp_core_instance_program_mem_2_read_valid , \cores[0].sv2v_tmp_core_instance_program_mem_read_valid  }),
    .mem_read_address(program_mem_read_address),
    .mem_read_data(program_mem_read_data),
    .mem_read_ready(program_mem_read_ready),
    .mem_read_valid(program_mem_read_valid),
    .reset(reset)
  );
  assign fetcher_read_address = { \cores[0].sv2v_tmp_core_instance_program_mem_2_read_address , \cores[0].sv2v_tmp_core_instance_program_mem_read_address  };
  assign fetcher_read_valid = { \cores[0].sv2v_tmp_core_instance_program_mem_2_read_valid , \cores[0].sv2v_tmp_core_instance_program_mem_read_valid  };
  assign lsu_read_data = sv2v_tmp_data_memory_controller_consumer_read_data;
  assign lsu_read_ready = sv2v_tmp_data_memory_controller_consumer_read_ready;
  assign lsu_write_ready = sv2v_tmp_data_memory_controller_consumer_write_ready;
  assign \per_core_accoutrements[0].core_lsu_read_address  = \cores[0].sv2v_tmp_core_instance_data_mem_read_address ;
  assign \per_core_accoutrements[0].core_lsu_read_valid  = \cores[0].sv2v_tmp_core_instance_data_mem_read_valid ;
  assign \per_core_accoutrements[0].core_lsu_write_address  = \cores[0].sv2v_tmp_core_instance_data_mem_write_address ;
  assign \per_core_accoutrements[0].core_lsu_write_data  = \cores[0].sv2v_tmp_core_instance_data_mem_write_data ;
  assign \per_core_accoutrements[0].core_lsu_write_valid  = \cores[0].sv2v_tmp_core_instance_data_mem_write_valid ;
  assign \per_core_accoutrements[1].core_lsu_read_address  = \cores[0].sv2v_tmp_core_instance_data_mem_2_read_address ;
  assign \per_core_accoutrements[1].core_lsu_read_valid  = \cores[0].sv2v_tmp_core_instance_data_mem_2_read_valid ;
  assign \per_core_accoutrements[1].core_lsu_write_address  = \cores[0].sv2v_tmp_core_instance_data_mem_2_write_address ;
  assign \per_core_accoutrements[1].core_lsu_write_data  = \cores[0].sv2v_tmp_core_instance_data_mem_2_write_data ;
  assign \per_core_accoutrements[1].core_lsu_write_valid  = \cores[0].sv2v_tmp_core_instance_data_mem_2_write_valid ;
  assign sv2v_tmp_dispatch_instance_core_block_id = core_block_id;
  assign sv2v_tmp_dispatch_instance_core_reset = core_reset;
  assign sv2v_tmp_dispatch_instance_core_start = core_start;
  assign sv2v_tmp_dispatch_instance_core_thread_count = core_thread_count;
  assign sv2v_tmp_program_memory_controller_consumer_read_data = fetcher_read_data;
  assign sv2v_tmp_program_memory_controller_consumer_read_ready = fetcher_read_ready;
endmodule

(* src = "../build/gpu.v:1325.1-1419.10" *)
module lsu(clk, reset, enable, core_state, decoded_mem_read_enable, decoded_mem_write_enable, rs, rt, mem_read_valid, mem_read_address, mem_read_ready, mem_read_data, mem_write_valid, mem_write_address, mem_write_data, mem_write_ready, lsu_state, lsu_out);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  (* src = "../build/gpu.v:1345.13-1345.16" *)
  input clk;
  wire clk;
  (* src = "../build/gpu.v:1348.19-1348.29" *)
  input [2:0] core_state;
  wire [2:0] core_state;
  (* src = "../build/gpu.v:1349.13-1349.36" *)
  input decoded_mem_read_enable;
  wire decoded_mem_read_enable;
  (* src = "../build/gpu.v:1350.13-1350.37" *)
  input decoded_mem_write_enable;
  wire decoded_mem_write_enable;
  (* src = "../build/gpu.v:1347.13-1347.19" *)
  input enable;
  wire enable;
  (* src = "../build/gpu.v:1362.19-1362.26" *)
  output [7:0] lsu_out;
  reg [7:0] lsu_out;
  (* src = "../build/gpu.v:1361.19-1361.28" *)
  output [1:0] lsu_state;
  reg [1:0] lsu_state;
  (* src = "../build/gpu.v:1354.19-1354.35" *)
  output [7:0] mem_read_address;
  reg [7:0] mem_read_address;
  (* src = "../build/gpu.v:1356.19-1356.32" *)
  input [7:0] mem_read_data;
  wire [7:0] mem_read_data;
  (* src = "../build/gpu.v:1355.13-1355.27" *)
  input mem_read_ready;
  wire mem_read_ready;
  (* src = "../build/gpu.v:1353.13-1353.27" *)
  output mem_read_valid;
  reg mem_read_valid;
  (* src = "../build/gpu.v:1358.19-1358.36" *)
  output [7:0] mem_write_address;
  reg [7:0] mem_write_address;
  (* src = "../build/gpu.v:1359.19-1359.33" *)
  output [7:0] mem_write_data;
  reg [7:0] mem_write_data;
  (* src = "../build/gpu.v:1360.13-1360.28" *)
  input mem_write_ready;
  wire mem_write_ready;
  (* src = "../build/gpu.v:1357.13-1357.28" *)
  output mem_write_valid;
  reg mem_write_valid;
  (* src = "../build/gpu.v:1346.13-1346.18" *)
  input reset;
  wire reset;
  (* src = "../build/gpu.v:1351.19-1351.21" *)
  input [7:0] rs;
  wire [7:0] rs;
  (* src = "../build/gpu.v:1352.19-1352.21" *)
  input [7:0] rt;
  wire [7:0] rt;
  assign _006_ = decoded_mem_write_enable & enable;
  assign _007_ = lsu_state[1] & ~(lsu_state[0]);
  assign _008_ = lsu_state[0] & ~(lsu_state[1]);
  assign _009_ = _007_ ? mem_write_ready : _008_;
  assign _002_ = _009_ & _006_;
  assign _010_ = decoded_mem_read_enable & enable;
  assign _003_ = _010_ & _008_;
  assign _005_ = ~_007_;
  assign _011_ = _007_ ? mem_read_ready : _008_;
  assign _004_ = _011_ & _010_;
  assign _001_ = _008_ & _006_;
  assign _012_ = enable & mem_read_ready;
  assign _013_ = ~(_007_ & decoded_mem_read_enable);
  assign _000_ = _012_ & ~(_013_);
  assign _014_ = lsu_state[1] & lsu_state[0];
  assign _015_ = ~(_014_ | _007_);
  assign _016_ = ~(lsu_state[1] | lsu_state[0]);
  assign _017_ = _016_ | _008_;
  assign _018_ = _015_ & ~(_017_);
  assign _019_ = ~lsu_state[0];
  assign _020_ = core_state[0] | ~(core_state[1]);
  assign _021_ = core_state[2] & ~(_020_);
  assign _022_ = _021_ | _019_;
  assign _023_ = _014_ & ~(_022_);
  assign _024_ = ~(mem_read_ready | lsu_state[0]);
  assign _025_ = _007_ & ~(_024_);
  assign _026_ = _025_ | _023_;
  assign _027_ = core_state[1] & core_state[0];
  assign _028_ = _027_ & ~(core_state[2]);
  assign _029_ = _019_ & ~(_028_);
  assign _030_ = _016_ & ~(_029_);
  assign _031_ = _030_ | _026_;
  assign _032_ = _018_ ? lsu_state[0] : _031_;
  assign _033_ = decoded_mem_read_enable ? _032_ : lsu_state[0];
  assign _034_ = _021_ | ~(_033_);
  assign _035_ = _014_ & ~(_034_);
  assign _036_ = ~mem_write_ready;
  assign _037_ = _036_ & ~(_033_);
  assign _038_ = _007_ & ~(_037_);
  assign _039_ = _038_ | _035_;
  assign _040_ = ~(_033_ | _028_);
  assign _041_ = _016_ & ~(_040_);
  assign _042_ = _041_ | _039_;
  assign _043_ = _018_ ? _033_ : _042_;
  assign _064_ = decoded_mem_write_enable ? _043_ : _033_;
  assign _044_ = ~lsu_state[1];
  assign _045_ = _021_ | _044_;
  assign _046_ = _045_ | ~(_014_);
  assign _047_ = _046_ & ~(_007_);
  assign _048_ = _008_ | ~(_047_);
  assign _049_ = _018_ ? lsu_state[1] : _048_;
  assign _050_ = decoded_mem_read_enable ? _049_ : lsu_state[1];
  assign _051_ = _047_ & ~(_008_);
  assign _052_ = _018_ ? _044_ : _051_;
  assign _053_ = decoded_mem_read_enable ? _052_ : _044_;
  assign _054_ = _053_ | _021_;
  assign _055_ = _014_ & ~(_054_);
  assign _056_ = _036_ & ~(_050_);
  assign _057_ = _007_ & ~(_056_);
  assign _058_ = _057_ | _055_;
  assign _059_ = _053_ | _028_;
  assign _060_ = _016_ & ~(_059_);
  assign _061_ = _060_ | _008_;
  assign _062_ = _061_ | _058_;
  assign _063_ = _018_ ? _050_ : _062_;
  assign _065_ = decoded_mem_write_enable ? _063_ : _050_;
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_read_valid <= 1'h0;
    else if (_004_) mem_read_valid <= _005_;
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_read_address[0] <= 1'h0;
    else if (_003_) mem_read_address[0] <= rs[0];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_read_address[1] <= 1'h0;
    else if (_003_) mem_read_address[1] <= rs[1];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_read_address[2] <= 1'h0;
    else if (_003_) mem_read_address[2] <= rs[2];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_read_address[3] <= 1'h0;
    else if (_003_) mem_read_address[3] <= rs[3];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_read_address[4] <= 1'h0;
    else if (_003_) mem_read_address[4] <= rs[4];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_read_address[5] <= 1'h0;
    else if (_003_) mem_read_address[5] <= rs[5];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_read_address[6] <= 1'h0;
    else if (_003_) mem_read_address[6] <= rs[6];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_read_address[7] <= 1'h0;
    else if (_003_) mem_read_address[7] <= rs[7];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_write_valid <= 1'h0;
    else if (_002_) mem_write_valid <= _005_;
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_write_address[0] <= 1'h0;
    else if (_001_) mem_write_address[0] <= rs[0];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_write_address[1] <= 1'h0;
    else if (_001_) mem_write_address[1] <= rs[1];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_write_address[2] <= 1'h0;
    else if (_001_) mem_write_address[2] <= rs[2];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_write_address[3] <= 1'h0;
    else if (_001_) mem_write_address[3] <= rs[3];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_write_address[4] <= 1'h0;
    else if (_001_) mem_write_address[4] <= rs[4];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_write_address[5] <= 1'h0;
    else if (_001_) mem_write_address[5] <= rs[5];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_write_address[6] <= 1'h0;
    else if (_001_) mem_write_address[6] <= rs[6];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_write_address[7] <= 1'h0;
    else if (_001_) mem_write_address[7] <= rs[7];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_write_data[0] <= 1'h0;
    else if (_001_) mem_write_data[0] <= rt[0];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_write_data[1] <= 1'h0;
    else if (_001_) mem_write_data[1] <= rt[1];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_write_data[2] <= 1'h0;
    else if (_001_) mem_write_data[2] <= rt[2];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_write_data[3] <= 1'h0;
    else if (_001_) mem_write_data[3] <= rt[3];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_write_data[4] <= 1'h0;
    else if (_001_) mem_write_data[4] <= rt[4];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_write_data[5] <= 1'h0;
    else if (_001_) mem_write_data[5] <= rt[5];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_write_data[6] <= 1'h0;
    else if (_001_) mem_write_data[6] <= rt[6];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) mem_write_data[7] <= 1'h0;
    else if (_001_) mem_write_data[7] <= rt[7];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) lsu_state[0] <= 1'h0;
    else if (enable) lsu_state[0] <= _064_;
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) lsu_state[1] <= 1'h0;
    else if (enable) lsu_state[1] <= _065_;
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) lsu_out[0] <= 1'h0;
    else if (_000_) lsu_out[0] <= mem_read_data[0];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) lsu_out[1] <= 1'h0;
    else if (_000_) lsu_out[1] <= mem_read_data[1];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) lsu_out[2] <= 1'h0;
    else if (_000_) lsu_out[2] <= mem_read_data[2];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) lsu_out[3] <= 1'h0;
    else if (_000_) lsu_out[3] <= mem_read_data[3];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) lsu_out[4] <= 1'h0;
    else if (_000_) lsu_out[4] <= mem_read_data[4];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) lsu_out[5] <= 1'h0;
    else if (_000_) lsu_out[5] <= mem_read_data[5];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) lsu_out[6] <= 1'h0;
    else if (_000_) lsu_out[6] <= mem_read_data[6];
  (* src = "../build/gpu.v:1367.2-1418.6" *)
  always @(posedge clk)
    if (reset) lsu_out[7] <= 1'h0;
    else if (_000_) lsu_out[7] <= mem_read_data[7];
endmodule
